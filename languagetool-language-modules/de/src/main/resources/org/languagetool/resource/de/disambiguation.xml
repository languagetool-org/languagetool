<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/rules/print.xsl" title="Pretty print" ?>
<?xml-stylesheet type="text/css" href="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/rules/rules.css" title="Easy editing stylesheet" ?>
<!--
German Disambiguation Rules for LanguageTool
Copyright © 2013 Markus Brenneis, Daniel Naber, Jan Schreiber
-->
  <!DOCTYPE rules [
    <!ENTITY zal_adj_ig "jähr|bänd|seit|monat|täg|köpf|tür|spur|geschoss|stöck|mal|teil|lag|stünd|minüt|sekünd|zeil|wöch|stell|räum|schicht|zähn|eck|arm|karät">
    <!ENTITY zal_adj "(?-i)(\d+-|(ein|zw(ei|an)|dreiß?|vier|fünf|s(echs?|ieb(en)?)|acht|neun|zehn|elf|zwölf)(zehn|zig)?)(&zal_adj_ig;)">
    <!ENTITY apostrophe "['’`´‘]">
    <!ENTITY filename_extensions "ai|asp|aspx|avi|bak|bat|bmp|cab|cfg|cgi|com|css|csv|dat|db|dbf|dll|doc|docx|eps|exe|flv|gif|htm|html|ibooks|ico|idml|ini|indd|jar|jpeg|jpg|js|jsp|lnk|md|mdb|mid|mov|mp3|mp4|mpa|mpg|ods|pdf|php|pl|png|pps|ppt|pptx|ps|psd|py|rar|rss|scss|sh|shtml|sql|stl|svg|sys|tar|tif|tiff|tmp|ts|txt|wav|wma|xhtml|xls|xlsx|xml|xsl|yaml|yml|zip|zipx|7z|web[mp]">
    <!ENTITY genderzeichen "[:_*]">
    <!ENTITY anfauf "„|&quot;|»|›|‚|'">
    <!ENTITY anf "&anfauf;|'|'|‹|«">
    <!ENTITY sprachadj1 "afrikanisch|alt(arabisch|chinesisch|griechisch|persisch)|amerikanisch|arabisch|chinesisch|dänisch|deutsch|plattdeutsch|englisch|finnisch|französisch|frühneuhochdeutsch|germanisch|griechisch|hocharabisch|hochchinesisch|hochdeutsch|holländisch|italienisch|japanisch|jiddisch|jugoslawisch|koreanisch|kroatisch|lateinisch|luxemburgisch|mittelhochdeutsch|neuhochdeutsch|niederländisch|norwegisch|persisch|polnisch|portugiesisch|russisch|schwedisch|schweizerisch|semitisch|serbisch|serbokroatisch|slawisch|spanisch|tschechisch|türkisch|ukrainisch|ungarisch|weißrussisch|weissrussisch|hebräisch">
]>

<rules lang="de" xsi:noNamespaceSchemaLocation="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/resource/disambiguation.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <unification feature="number">
        <equivalence type="sg">
            <token postag=".*:SIN:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="pl">
            <token postag=".*:PLU:.*" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <unification feature="case">
        <equivalence type="nom">
            <token postag=".*:NOM:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="akk">
            <token postag=".*:AKK:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="dat">
            <token postag=".*:DAT:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="gen">
            <token postag=".*:GEN:.*" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <unification feature="gender">
        <!-- NOG = no gender, benutzt für Nomen, die nur im Plural vorkommen wie "Ferien" -->
        <equivalence type="mas">
            <token postag=".*:(MAS|NOG).*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="fem">
            <token postag=".*:(FEM|NOG).*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="neu">
            <token postag=".*:(NEU|NOG).*" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <rule id="HAFT_KEIN_SUB" name="'Ekelhaft' kein Substantiv">
        <pattern>
            <token regexp="yes" case_sensitive="yes">(Gönner|Ekel|Schmerz|Lach|Fabel|Rätsel|Herz|Leib|Ehren|Engel|Ernst|Gott)haft</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>

    <rule id="PUNKTEN_KEIN_SUB" name="'Aussichtspunkten' kein Verb">
        <pattern>
            <token regexp="yes" case_sensitive="yes">(Aussichts|Eck|Tau|Lade|Blick|Plus|Zeit|Ziel|Basis|Stich|Stütz|Treff|Knack|Wende|Doppel|Mittel|Strich|Anhats|Ausgangs|Elfmeter|Schmelz|Gesichts|Prozent|Anhalts|Berührungs|Tagesordnungs|Marinestütz|Scheitel|Tatzeit|Dezimal)punkten</token>
        </pattern>
        <disambig action="remove" postag="SUB.+INF"/>
    </rule>

	<rulegroup id="KEIN_1_SIN_PRAE" name="Entferne 1:SIN:PRÄ, wenn kein 'ich' in Teilsatz">
        <antipattern>
            <token regexp="yes">ich|du|er|sie|es|wir|ihr</token>
            <token postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*"/>
        </antipattern>
        <antipattern>
              <token postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*"/>
              <token regexp="yes">ich|du|er|sie|es|wir|ihr</token>
        </antipattern>
        <rule>
            <pattern>
                <token skip="-1" postag_regexp="yes" postag="(PKT|SENT_START)">
                    <exception scope="next">ich</exception>
                </token>
                <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                    <exception scope="next">ich</exception>
                </token>
                <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                    <exception scope="next">ich</exception>
                </token>
                <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                    <exception scope="next">ich</exception>
                </token>
                <marker>
                    <and>
                        <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                           <exception scope="next">ich</exception>
                        </token>
                       <token postag_regexp="yes" postag="VER:IMP:SIN.*"/>
                    </and>
                </marker>
                <token postag="(PKT|SENT_END)" postag_regexp="yes"/>
            </pattern>
            <disambig action="remove" postag="VER:1:SIN:(PRÄ|KJ1).+"/>
            <example type="ambiguous" inputform="klag[klagen/VER:1:SIN:PRÄ:SFT,klagen/VER:IMP:SIN:SFT]" outputform="klag[klagen/VER:IMP:SIN:SFT]">Leide, schweig und vertrag; deine Not niemandem <marker>klag</marker>.</example>    
            <example type="untouched">Später <marker>gehe</marker> ich ins Restaurant essen.</example>
            <example type="untouched">Ich <marker>gehe</marker> später ins Restaurant essen.</example>
        </rule>
        <rule>
            <pattern>
                <token skip="-1" postag_regexp="yes" postag="(PKT|SENT_START)">
                    <exception scope="next">ich</exception>
                </token>
                <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                    <exception scope="next">ich</exception>
                </token>
                <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                    <exception scope="next">ich</exception>
                </token>
                <marker>
                    <and>
                        <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                           <exception scope="next">ich</exception>
                        </token>
                       <token postag_regexp="yes" postag="VER:IMP:SIN.*"/>
                    </and>
                </marker>
                <token postag="(PKT|SENT_END)" postag_regexp="yes"/>
            </pattern>
            <disambig action="remove" postag="VER:1:SIN:(PRÄ|KJ1).+"/>
            <example type="ambiguous" inputform="feier[feiern/VER:1:SIN:PRÄ:SFT,feiern/VER:IMP:SIN:SFT]" outputform="feier[feiern/VER:IMP:SIN:SFT]">Eine schöne runde Zahl, die wir gebührend im Juli <marker>feier</marker> werde.</example>
            <example type="untouched">Später <marker>gehe</marker> ich ins Restaurant essen.</example>
            <example type="untouched">Ich <marker>gehe</marker> später ins Restaurant essen.</example>
        </rule>
        <rule>
            <pattern>
                <token skip="-1" postag_regexp="yes" postag="(PKT|SENT_START)">
                    <exception scope="next">ich</exception>
                </token>
                <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                    <exception scope="next">ich</exception>
                </token>
                <marker>
                    <and>
                        <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                           <exception scope="next">ich</exception>
                        </token>
                       <token postag_regexp="yes" postag="VER:IMP:SIN.*"/>
                    </and>
                </marker>
                <token postag="(PKT|SENT_END)" postag_regexp="yes"/>
            </pattern>
            <disambig action="remove" postag="VER:1:SIN:(PRÄ|KJ1).+"/>
            <example type="ambiguous" inputform="stau[stauen/VER:1:SIN:PRÄ:SFT,stauen/VER:IMP:SIN:SFT]" outputform="stau[stauen/VER:IMP:SIN:SFT]">Er war so lange im <marker>stau</marker>, dass er nicht mehr wusste, ob er zur Arbeit oder nach Hause wollte.</example>
            <example type="untouched">Später <marker>gehe</marker> ich ins Restaurant essen.</example>
            <example type="untouched">Ich <marker>gehe</marker> später ins Restaurant essen.</example>
        </rule>  
        <rule>
            <pattern>
                <token skip="-1" postag_regexp="yes" postag="(PKT|SENT_START)">
                    <exception scope="next">ich</exception>
                </token>
                <marker>
                    <and>
                        <token skip="-1" postag_regexp="yes" postag="VER:1:SIN:(PRÄ|KJ1).*">
                           <exception scope="next">ich</exception>
                        </token>
                       <token postag_regexp="yes" postag="VER:IMP:SIN.*"/>
                    </and>
                </marker>
                <token postag="(PKT|SENT_END)" postag_regexp="yes"/>
            </pattern>
            <disambig action="remove" postag="VER:1:SIN:(PRÄ|KJ1).+"/>
            <example type="ambiguous" inputform="stamm[stammen/VER:1:SIN:PRÄ:SFT,stammen/VER:IMP:SIN:SFT]" outputform="stamm[stammen/VER:IMP:SIN:SFT]">Der Apfel fällt ja doch nicht vom <marker>stamm</marker>!</example>
            <example type="ambiguous" inputform="nutze[nutzen/VER:1:SIN:KJ1:SFT,nutzen/VER:1:SIN:PRÄ:SFT,nutzen/VER:1:SIN:PRÄ:SFT,nutzen/VER:3:SIN:KJ1:SFT,nutzen/VER:IMP:SIN:SFT]" outputform="nutze[nutzen/VER:3:SIN:KJ1:SFT,nutzen/VER:IMP:SIN:SFT]">Die Maschine <marker>nutze</marker> diese Funktion nicht.</example>
            <example type="ambiguous" inputform="frisch[frisch/ADJ:PRD:GRU,frischen/VER:1:SIN:PRÄ:SFT,frischen/VER:IMP:SIN:SFT]" outputform="frisch[frisch/ADJ:PRD:GRU,frischen/VER:IMP:SIN:SFT]">Wir eilten sofort herbei um uns ein Stückchen vom <marker>frisch</marker> gebackenen Kuchen abzuholen.</example>
            <example type="untouched">Später <marker>gehe</marker> ich ins Restaurant essen.</example>
            <example type="untouched">Ich <marker>gehe</marker> später ins Restaurant essen.</example>
        </rule>
    </rulegroup>
    <rule id="LANGE_ZEIT_ADV" name="lange Zeit">
        <pattern>
            <token regexp="yes">lange|längere</token>
            <token>Zeit</token>
        </pattern>
        <disambig action="add">
            <wd pos="ADV:TMP"/>
            <wd pos="ADV:TMP"/>
        </disambig>
    </rule>
    <rule id="LETZTE_WOCHE_ADV" name="letzte Woche">
        <pattern>
            <token regexp="yes">(vor(vor)?)?letzte|vorige|(über(über)?)?nächste</token>
            <token>Woche</token>
        </pattern>
        <disambig action="add">
            <wd pos="ADV:TMP"/>
            <wd pos="ADV:TMP"/>
        </disambig>
    </rule>
    <rule id="NAECHSTES_JAHR_ADV" name="nächstes Jahr">
        <pattern>
            <token regexp="yes">(vor(vor)?)?letztes|voriges|(über(über)?)?nächstes</token>
            <token>Jahr</token>
        </pattern>
        <disambig action="add">
            <wd pos="ADV:TMP"/>
            <wd pos="ADV:TMP"/>
        </disambig>
    </rule>

    <rulegroup id="SUB_INNEN" name="Student*innen">
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:PLU:FEM"/>
                <wd pos="SUB:NOM:PLU:FEM"/>
                <wd pos="SUB:NOM:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:PLU:FEM"/>
                <wd pos="SUB:AKK:PLU:FEM"/>
                <wd pos="SUB:AKK:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:PLU:FEM"/>
                <wd pos="SUB:GEN:PLU:FEM"/>
                <wd pos="SUB:GEN:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:PLU:FEM"/>
                <wd pos="SUB:DAT:PLU:FEM"/>
                <wd pos="SUB:DAT:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:SIN:FEM"/>
                <wd pos="SUB:NOM:SIN:FEM"/>
                <wd pos="SUB:NOM:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:SIN:FEM"/>
                <wd pos="SUB:AKK:SIN:FEM"/>
                <wd pos="SUB:AKK:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:SIN:FEM"/>
                <wd pos="SUB:GEN:SIN:FEM"/>
                <wd pos="SUB:GEN:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:SIN:FEM"/>
                <wd pos="SUB:DAT:SIN:FEM"/>
                <wd pos="SUB:DAT:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:PLU:MAS"/>
                <wd pos="SUB:NOM:PLU:MAS"/>
                <wd pos="SUB:NOM:PLU:MAS"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:PLU:MAS"/>
                <wd pos="SUB:AKK:PLU:MAS"/>
                <wd pos="SUB:AKK:PLU:MAS"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:PLU:MAS"/>
                <wd pos="SUB:GEN:PLU:MAS"/>
                <wd pos="SUB:GEN:PLU:MAS"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">innen</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:PLU:MAS"/>
                <wd pos="SUB:DAT:PLU:MAS"/>
                <wd pos="SUB:DAT:PLU:MAS"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:SIN:MAS"/>
                <wd pos="SUB:NOM:SIN:MAS"/>
                <wd pos="SUB:NOM:SIN:MAS"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:SIN:MAS"/>
                <wd pos="SUB:AKK:SIN:MAS"/>
                <wd pos="SUB:AKK:SIN:MAS"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:SIN:MAS"/>
                <wd pos="SUB:GEN:SIN:MAS"/>
                <wd pos="SUB:GEN:SIN:MAS"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token postag="SUB.*" postag_regexp="yes"/>
                <token spacebefore="no" regexp="yes">&genderzeichen;</token>
                <token spacebefore="no">in</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:SIN:MAS"/>
                <wd pos="SUB:DAT:SIN:MAS"/>
                <wd pos="SUB:DAT:SIN:MAS"/>
            </disambig>
        </rule>
    </rulegroup>

    <rule name="ein bisschen → ADV" id="EIN_BISSCHEN_ADV">
        <pattern>
            <token regexp="yes">k?ein</token>
            <token>bisschen</token>
        </pattern>
        <disambig action="add">
            <wd pos="ADV:MOD"/>
            <wd pos="ADV:MOD"/>
        </disambig>
    </rule>
    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_1">
        <pattern>
            <token regexp="yes">&zal_adj;iges|\d+-faches</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_2">
        <pattern>
            <token regexp="yes">&zal_adj;iges|\d+-faches</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:NEU:GRU:IND "/></disambig>
    </rule>
    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_3">
        <pattern>
            <token regexp="yes">&zal_adj;iges|\d+-faches</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:NEU:GRU:SOL "/></disambig>
    </rule>
    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_4">
        <pattern>
            <token regexp="yes">&zal_adj;iges|\d+-faches</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:NEU:GRU:SOL "/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_5">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos=""/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_6">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_7">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_8">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_9">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_10">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_11">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_12">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_13">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_14">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_15">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_16">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_17">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_18">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_19">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_20">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_21">
        <pattern>
            <token regexp="yes">&zal_adj;ige|\d+-fache</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_22">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_23">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_24">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_25">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_26">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_27">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_28">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_29">
        <pattern>
            <token regexp="yes">&zal_adj;iger|\d+-facher</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:SOL "/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_30">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_31">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_32">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_33">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_34">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_35">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_36">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_37">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_38">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_39">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_40">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_41">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_42">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_43">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_44">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_45">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_46">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_47">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_48">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_49">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_50">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_51">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_52">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_53">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_54">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_55">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_56">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_57">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_58">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_59">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_60">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_61">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_62">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_63">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_64">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_65">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_66">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_67">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_68">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_69">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_70">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_71">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_72">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_73">
        <pattern>
            <token regexp="yes">&zal_adj;igen|\d+-fachen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:NEU:GRU:IND"/></disambig>
    </rule>

    <!-- ============================================================================================================== -->
    <!-- Noun phrases unification -->
    <!-- ============================================================================================================== -->
    <rulegroup id="UNIFY_PRP_DET_SUB" name="NP with preposition unify">
        <rule>
            <antipattern>
                <!-- "Es gibt ein Sprichwort, dem zufolge der tägliche Genuss einer Mandel dem Gedächtnis förderlich sei." -->
                <token regexp="yes">de[mr]</token>
                <token>zufolge</token>
                <token inflected="yes" regexp="yes">der|jed</token>
            </antipattern>
            <antipattern>
                <!-- "Was ist denn das für ein ungewöhnlicher Name?" -->
                <token regexp="yes">der|die|das</token>
                <token>für</token>
                <token regexp="yes">eine?</token>
            </antipattern>
            <pattern>
                <token postag_regexp="yes" postag="PRP.+">
                    <exception postag="PRP.+" postag_regexp="yes" negate_pos="yes"/>
                    <exception scope="previous">was</exception>
                    <exception>plus</exception>
                </token>
                <marker>
                    <and>
                        <token postag_regexp="yes" postag=".+NOM:.+"/>
                        <token postag_regexp="yes" postag=".+(AKK|DAT|GEN):.+"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag=".+:NOM:.+"/>
            <example type="ambiguous" inputform="die[der/ART:DEF:AKK:PLU:FEM,der/ART:DEF:AKK:PLU:MAS,der/ART:DEF:AKK:PLU:NEU,der/ART:DEF:AKK:SIN:FEM,der/ART:DEF:NOM:PLU:FEM,der/ART:DEF:NOM:PLU:MAS,der/ART:DEF:NOM:PLU:NEU,der/ART:DEF:NOM:SIN:FEM,der/PRO:DEM:AKK:PLU:ALG,der/PRO:DEM:AKK:SIN:FEM,der/PRO:DEM:NOM:PLU:ALG,der/PRO:DEM:NOM:SIN:FEM,der/PRO:PER:AKK:PLU:ALG,der/PRO:PER:AKK:SIN:FEM,der/PRO:PER:NOM:PLU:ALG,der/PRO:PER:NOM:SIN:FEM]" outputform="die[der/ART:DEF:AKK:PLU:FEM,der/ART:DEF:AKK:PLU:MAS,der/ART:DEF:AKK:PLU:NEU,der/ART:DEF:AKK:SIN:FEM,der/PRO:DEM:AKK:PLU:ALG,der/PRO:DEM:AKK:SIN:FEM,der/PRO:PER:AKK:PLU:ALG,der/PRO:PER:AKK:SIN:FEM]">Ein gutes Argument für <marker>die</marker> Politik, ...</example>
            <example type="untouched">Er ist eher ein Lehrer, als ein Schriftsteller.</example>
            <example type="untouched">Was für ein großer Supermarkt!</example>
            <example type="untouched">Während der größte Teil unter Emission ...</example>
            <example type="untouched">Dabei zerfallen sie so lange, bis ein stabiler Kern erreicht ist;</example>
            <example type="untouched">Hier ist nach wie vor der Unterschied bedeutsam.</example>
        </rule>
    </rulegroup>

    <rule name="NP unify 1" id="UNIFY_DET_SUB">
        <!--
        z.B. in "Das Kind, das Kuchen isst." wird 'das Kind' unifiziert, 'das Kuchen' aber nicht.
        So können wir weiter unten Nominalphrasen erkennen und in grammar.xml dann Regeln haben
        für z.B. "Das Haus sind groß."
        Die Erkennung von Fehlern *innerhalb* von Nominalphrasen (z.B. "der Auto") liegt bei der
        Java-Regel AgreementRule.
        -->
        <antipattern>
            <token postag="SENT_START"/>
            <token spacebefore="yes" case_sensitive="yes">Sein</token>
        </antipattern>
        <antipattern>
            <token>:</token>
            <token spacebefore="yes" case_sensitive="yes">Sein</token>
        </antipattern>
        <antipattern>
            <token regexp="yes">&anf;</token>
            <token spacebefore="no" case_sensitive="yes">Sein</token>
        </antipattern>
        <antipattern>
            <token max="2" regexp="yes">[^\p{L}]</token>
            <token case_sensitive="yes">Sein</token>
        </antipattern>
        <antipattern>
            <token regexp="yes">[a-z]</token>
            <token regexp="yes">[^\p{L}]</token>
            <token case_sensitive="yes">Sein</token>
        </antipattern>
        <antipattern>
            <token regexp="yes">bei|von|nahe|nebst|samt|mit(samt)?</token>
            <token case_sensitive="yes">eine</token>
            <token postag="SUB.*DAT.*SIN.*FEM" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token><exception regexp="yes">hier|wo|nahe|da</exception></token>
            <token>zu</token>
            <token case_sensitive="yes">eine</token>
            <token postag="SUB.*DAT.*SIN.*FEM" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token regexp="yes">bei|von|nahe|nebst|samt|mit(samt)?</token>
            <token case_sensitive="yes">eine</token>
            <token postag="SUB.*DAT.*SIN.*(MAS|NEU)" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token><exception regexp="yes">hier|wo|nahe|da</exception></token>
            <token>zu</token>
            <token case_sensitive="yes">eine</token>
            <token postag="SUB.*DAT.*SIN.*(MAS|NEU)" postag_regexp="yes" />
        </antipattern>
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                <token postag="SUB:.*" postag_regexp="yes">
                    <exception postag_regexp="yes" postag="ADJ:.*"/><!-- needed for AgreementRule to not false alert on 'den Berliner Arbeitern' -->
                </token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched"> Sein Wissen wurde ihm zum Verhängnis.</example>
        <example type="untouched">"Sein Wissen wurde ihm zum Verhängnis."</example>
        <example type="untouched">Es war zu spät: Sein Wissen wurde ihm zum Verhängnis.</example>
        <example type="untouched">- Sein Wissen wurde ihm zum Verhängnis</example>
        <example type="untouched">*Sein Wissen wurde ihm zum Verhängnis</example>
        <example type="untouched">• Sein Wissen wurde ihm zum Verhängnis</example>
        <example type="untouched">1) Sein Wissen wurde ihm zum Verhängnis</example>
        <example type="untouched">2. Sein Wissen wurde ihm zum Verhängnis</example>
        <example type="untouched">c) Sein Wissen wurde ihm zum Verhängnis.</example>
    </rule>
    <rule name="NP unify 1b" id="UNIFY_DET_SUB2">
        <antipattern>
            <token postag="ART:.*" postag_regexp="yes" regexp="yes" case_sensitive="yes">[ED].+</token>
            <token postag="ADJ:.*" postag_regexp="yes"/>
            <token postag="SUB:.*" postag_regexp="yes"/>
        </antipattern>
        <antipattern>
            <token postag="ART:.*" postag_regexp="yes" regexp="yes">die|diese|[dmsk]eine|alle|einige|viele|manche</token>
            <token regexp="yes">anderen|beiden</token>
            <token postag="SUB:NOM.*PLU.*" postag_regexp="yes"/>
        </antipattern>
        <antipattern>
            <token postag="PKT|SENT_START|KON:NEB" postag_regexp="yes" />
            <token>ich</token>
            <token>meine</token>
        </antipattern>
        <antipattern>
            <token postag="PKT|SENT_START|KON:NEB" postag_regexp="yes" />
            <token regexp="yes">wir|sie|die</token>
            <token>meinen</token>
        </antipattern>
        <antipattern>
            <token inflected="yes" regexp="yes">[mksd]?ein</token>
            <token inflected="yes" regexp="yes">solch|ebensolch</token>
        </antipattern>
        <antipattern><!-- von denjenigen Kunden -->
            <token>denjenigen</token>
            <token postag="SUB:DAT:PLU:.*" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token regexp="yes">von|zu</token>
            <token regexp="yes">solche?|dieses?|welche</token>
            <token postag="SUB.*DAT.*PLU.*" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token regexp="yes">bei|von|nahe|nebst|samt|mit(samt)?</token>
            <token regexp="yes" case_sensitive="yes">[mdsk]?eine|(eu|ih|Ih|unse)re|(je[dn]|dies)e</token>
            <token postag="SUB.*DAT.*SIN.*FEM" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token><exception regexp="yes">hier|wo|nahe|da</exception></token>
            <token>zu</token>
            <token regexp="yes" case_sensitive="yes">[mdsk]?eine|(eu|ih|Ih|unse)re|(je[dn]|dies)e</token>
            <token postag="SUB.*DAT.*SIN.*FEM" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token regexp="yes">bei|von|nahe|nebst|samt|mit(samt)?</token>
            <token regexp="yes" case_sensitive="yes">[mdsk]?eine|(eu|ih|Ih|unse)re|(je[dn]|dies)e</token>
            <token postag="SUB.*DAT.*SIN.*(MAS|NEU)" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token><exception regexp="yes">hier|wo|nahe|da</exception></token>
            <token>zu</token>
            <token regexp="yes" case_sensitive="yes">[mdsk]?eine|(eu|ih|Ih|unse)re|(je[dn]|dies)e</token>
            <token postag="SUB.*DAT.*SIN.*(MAS|NEU)" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token regexp="yes">bei|von|nahe|nebst|samt|mit(samt)?</token>
            <token regexp="yes" case_sensitive="yes">[mdsk]eine|(eu|ih|Ih|unse)re|(je[dn]|dies|all|sonstig|einig|viel|solch)e</token>
            <token postag="SUB.*(DAT|NOM).*PLU.*(MAS|NEU|FEM)" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token><exception regexp="yes">hier|wo|nahe|da</exception></token>
            <token>zu</token>
            <token regexp="yes" case_sensitive="yes">[mdsk]eine|(eu|ih|Ih|unse)re|(je[dn]|dies|all|sonstig|einig|viel|solch)e</token>
            <token postag="SUB.*(DAT|NOM).*PLU.*(MAS|NEU|FEM)" postag_regexp="yes" />
        </antipattern>
         <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <!--"beiden Filmen", but: "dass sie Geliebte waren"-->
                <token postag="(PRO|ART):.*" postag_regexp="yes">
                    <exception>sie</exception>
                    </token>
                <token postag="SUB:.*" postag_regexp="yes">
                    <exception postag="ADJ:.*" postag_regexp="yes"/>
                </token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Das andere Gebäude war um ein Beträchtliches höher.</example>
        <example type="untouched">Ich meine Grammatik-Regeln sind auch wichtig.</example>
        <example type="untouched">Das sind die anderen Variablen.</example>
    </rule>
    <!-- TODO: this would fix false alarm for 'die ältere der beiden Töchter' but causes other problems
    <rule name="NP unify 1c" id="UNIFY_DET_ADJ">
        <pattern>
                <unify>
                    <feature id="number"/><feature id="case"/><feature id="gender"/>
                    "die ältere [der beiden]"
                    <token regexp="yes">d(er|ie|as)</token>
                    <token postag="ADJ.*:(DEF|IND).*" postag_regexp="yes"/>
                </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    -->
    <rule name="NP unify 2" id="UNIFY_DET_ADJ_ADJ_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <rule name="NP unify 2b" id="UNIFY_DET_ADJ_UND_ADJ_SUB">
        <pattern>
            <unify>
                <!-- "Der größte und schönste Tempel" -->
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <unify-ignore>
                    <token regexp="yes">oder|und</token>
                </unify-ignore>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <rule name="NP unify 3" id="UNIFY_DET_ADJ_SUB">
        <antipattern><!-- "Die jüngste Düsseldorfer XXX "-->
            <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
            <token postag="ADJ.*|PA[12]:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü].+</token>
            <token postag="ADJ.*" postag_regexp="yes" regexp="yes" case_sensitive="yes">[A-ZÄÖÜ].+er</token>
            <token postag="UNKNOWN" regexp="yes" case_sensitive="yes">[A-ZÄÖÜ].+</token>
        </antipattern>
        <antipattern><!-- Anna und Randolph, die ihre hübsche Berliner Bude zur Verfügung gestellt haben -->
            <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
            <token postag="ADJ.*|PA[12]:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü].+</token>
            <token postag="ADJ.*" postag_regexp="yes" regexp="yes" case_sensitive="yes">[A-ZÄÖÜ].+er</token>
            <token postag="SUB.*FEM.*" postag_regexp="yes" regexp="yes" />
        </antipattern>
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <token postag="ADJ:.*|PA[12]:.+" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <rule name="NP unify 3a" id="UNIFY_DET_ADJ_PCT_PA_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <unify-ignore>
                    <token regexp="yes">,|und|oder</token>
                </unify-ignore>
                <token postag="PA[12]:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <!-- Er sah <marker>den kleinen, geschundenen Körper</marker>  -->
    </rule>
    <rule name="NP unify 3a1" id="UNIFY_DET_ADJ_PA_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <unify-ignore>
                    <token postag="ADJ:PRD:GRU"/>
                </unify-ignore>
                <token postag="PA[12]:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <!-- Er sah <marker>den gut erhaltenen Koffer</marker>  -->
    </rule>
    <rule name="NP unify 3b" id="UNIFY_ADJ_SUB">
        <antipattern>
            <!-- sonst falsche Tags für z.B. "Sie hatten keine Chance gegen das kleinere Preußen." -->
            <token postag="ART:.*" postag_regexp="yes"/>
            <token postag="ADJ:.*" postag_regexp="yes"/>
            <token postag="SUB:.*" postag_regexp="yes"/>
        </antipattern>
        <antipattern><!-- Er überzeugte Hotelplan damit. -->
            <token regexp="yes">er|sie|es</token>
            <token postag="VER:3:SIN.*" postag_regexp="yes" />
            <token postag="SUB:.*" postag_regexp="yes" />
        </antipattern>
        <antipattern><!-- Peter überzeugte Hotelplan damit. -->
            <token postag="EIG.*SIN.*" postag_regexp="yes" />
            <token postag="VER:3:SIN.*" postag_regexp="yes" />
            <token postag="SUB:.*" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token>ich</token>
            <token postag="VER:1:SIN.*" postag_regexp="yes" />
            <token postag="SUB:.*" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token>sie</token>
            <token postag="VER:3:PLU.*" postag_regexp="yes" />
            <token postag="SUB:.*" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token>ihr</token>
            <token postag="VER:2:PLU.*" postag_regexp="yes" />
            <token postag="SUB:.*" postag_regexp="yes" />
        </antipattern>
        <antipattern>
            <token>wir</token>
            <token postag="VER:1:PLU.*" postag_regexp="yes" />
            <token postag="SUB:.*" postag_regexp="yes" />
        </antipattern>
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <!-- "Am Strand stehen schöne Häuser"-->
                <token postag="ADJ:.*" postag_regexp="yes">
                    <exception regexp="yes">lieben?|scheuen?</exception>
                    <exception postag="ADV.*" postag_regexp="yes"/>
                    </token>
                <token postag="SUB:.*" postag_regexp="yes">
                    <exception postag="ADJ:.+:SOL" postag_regexp="yes" regexp="yes">[A-Z].+</exception>
                    <exception postag="EIG:.+" postag_regexp="yes" />
                    </token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Gegen eine schwache Wiener Austria holte das Schlusslicht einen 1:0-Heimerfolg.</example>
        <example type="untouched">Ich liebe Lachs.</example>
        <example type="untouched">Wir lieben Hunde.</example>
        <example type="untouched">Er überzeugte Hotelplan damit.</example>
        <example type="untouched">Peter überzeugte Hotelplan damit.</example>
        <example type="untouched">Er war früher Präsident.</example>
    </rule>

    <rule name="NP unify 4" id="UNIFY_4">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <!-- "Die von der Regierung geprüften Hunde" -->
                <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                <unify-ignore>
                    <token postag="PRP:.*" postag_regexp="yes"/>
                    <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                    <!--<token postag="ADJ:.*" postag_regexp="yes"/>-->
                    <token postag="SUB:.*" postag_regexp="yes"/>
                </unify-ignore>
                <token postag="PA[12]:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule name=".,;:…!? UNKNOWN -> PKT" id="UNKNOWN_PKT">
        <pattern>
            <token regexp="yes">[\.,;:…!\?]</token>
        </pattern>
        <disambig action="add"><wd pos="PKT"/></disambig>
    </rule>

    <rule name="60ern -> SUB" id="NUMBER_COMPOUND_NOUN_1">
        <pattern>
            <token regexp="yes">\d{2,4}ern</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:AKK:PLU:FEM"/></disambig>
    </rule>
    <rule name="60ern -> SUB" id="NUMBER_COMPOUND_NOUN_2">
        <pattern>
            <token regexp="yes">\d{2,4}ern</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:DAT:PLU:FEM"/></disambig>
    </rule>
    <rule name="60er -> SUB" id="NUMBER_COMPOUND_NOUN_3">
        <antipattern>
            <token postag="ART:.+" postag_regexp="yes"/>
            <token regexp="yes">\d{2,4}er</token>
            <token postag="SUB:.+" postag_regexp="yes"/>
        </antipattern>
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:NOM:PLU:FEM"/></disambig>
        <example type="untouched">Er sprach über die 80er Jahre.</example>
    </rule>
    <rule name="60er -> SUB" id="NUMBER_COMPOUND_NOUN_4">
       <antipattern>
            <token postag="ART:.+" postag_regexp="yes"/>
            <token regexp="yes">\d{2,4}er</token>
            <token postag="SUB:.+" postag_regexp="yes"/>
        </antipattern>
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:GEN:PLU:FEM"/></disambig>
        <example type="untouched">Er sprach über die 80er Jahre.</example>
    </rule>
    <!-- Treat "60er" in "in den 60er Jahren" as adjective -->
    <rule name="60er -> ADJ" id="NUMBER_COMPOUND_ADJ_1">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="60er -> ADJ" id="NUMBER_COMPOUND_ADJ_2">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="60er -> ADJ" id="NUMBER_COMPOUND_ADJ_3">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="lebenswerten (VER) -> lebenswerten ()" id="LEBENSWERTEN">
        <pattern>
            <marker>
                <!-- l(eb|ohn)enswerten?|achtenswerten?|ehrenswerten?|rühmenswerten?|schützenswerten? -->
                <token regexp="yes" case_sensitive="yes">[a-zäöü]+enswerten?</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule name="ins+Nomen" id="INS_NOMEN">
        <pattern case_sensitive="yes">
            <token regexp="yes">ins|ans|vors|durchs|hinters</token>
            <marker>
                <token regexp="yes">[A-ZÄÖÜ].+<exception postag="SUB:.+" postag_regexp="yes"/></token>
            </marker>
            <token postag="VER:[1-3].+" postag_regexp="yes"/>
        </pattern>
        <disambig postag="SUB:AKK:SIN:NEU"/>
    </rule>
    <rule name="'Der' am Satzanfang (kein Genitiv Singular)" id="SENT_START_DER">
        <pattern case_sensitive="yes">
            <token postag="SENT_START"/>
            <marker>
                <token>Der</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="ART:DEF:GEN:SIN:FEM"/>
        <example type="ambiguous" inputform="Der[der/ART:DEF:DAT:SIN:FEM,der/ART:DEF:GEN:SIN:FEM,der/PRO:DEM:DAT:SIN:FEM]" outputform="Der[der/ART:DEF:DAT:SIN:FEM,der/PRO:DEM:DAT:SIN:FEM]"><marker>Der</marker> Frau wurden die Stoffe gezeigt.</example>
    </rule>
    <rulegroup id="ICH_VERB" name="Ich am Satzanfang">
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token case_sensitive="yes">Ich</token>
                <marker>
                    <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|IMP):.+|PRO:POS:.+"/>
            <example type="ambiguous" inputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT,sagen/VER:3:SIN:KJ1:SFT,sagen/VER:IMP:SIN:SFT]" outputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT]">Ich <marker>sage</marker> ihr die Wahrheit.</example>
        </rule>
        <rule name="Ich am Satzanfang" id="ICH_SENT_START">
            <pattern case_sensitive="yes">
                <token postag="SENT_START"/>
                <marker>
                    <token regexp="yes">Ich|Wir</token>
                </marker>
                <token postag="VER:1:.+" postag_regexp="yes"/>
            </pattern>
            <disambig action="remove" postag="SUB:.*:NEU"/>
        </rule>
        <!-- similar: werte, reiche, vertraute -->
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">Ich|Wir</token>
                <marker>
                    <and>
                        <token regexp="yes" postag="VER:1.+" postag_regexp="yes">[a-zäöüß]+e</token>
                        <token regexp="yes" postag="PA2.+|ADJ.+" postag_regexp="yes"/>
                    </and>
                 </marker>
            </pattern>
            <disambig action="remove" postag="ADJ:.+|PA2:.+"/>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token case_sensitive="yes" regexp="yes">D(a|ie)s</token>
                <marker>
                    <and>
                        <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                        <token postag="VER:.*3:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes"/>
                    </and>
                </marker>
                <token>ich</token>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|IMP):.+|PRO:POS:.+"/>
            <example type="ambiguous" inputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT,sagen/VER:3:SIN:KJ1:SFT,sagen/VER:IMP:SIN:SFT]" outputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT]">Das <marker>sage</marker> ich dir nicht.</example>
        </rule>
    </rulegroup>
    <rulegroup name="VER -> PA2" id="VER_PA2">
        <rule>
            <pattern case_sensitive="yes">
                <token inflected="yes" skip="10">sein
                    <exception>sein</exception>
                    <exception postag="PKT" scope="next"/>
                </token>
                <marker>
                    <and>
                        <token postag="VER:PA2:.+" postag_regexp="yes"/>
                        <token postag="VER:[123].+" postag_regexp="yes"/>
                    </and>
                </marker>
                <token>worden</token>
                <token postag="PKT"/>
            </pattern>
            <disambig action="filter" postag="VER:PA2:.+"/>
            <example type="ambiguous" inputform="verhaftet[verhaften/VER:2:PLU:KJ1:SFT,verhaften/VER:2:PLU:PRÄ:SFT,verhaften/VER:3:SIN:PRÄ:SFT,verhaften/VER:IMP:PLU:SFT,verhaften/VER:PA2:SFT,verhaftet/PA2:PRD:GRU:VER]" outputform="verhaftet[verhaften/VER:PA2:SFT]">Er ist gestern <marker>verhaftet</marker> worden.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes" skip="2">wurde(n|st)?</token>
                <marker>
                    <and>
                        <token postag="VER:PA2:.+" postag_regexp="yes"/>
                        <token postag="VER:[123].+" postag_regexp="yes"/>
                    </and>
                </marker>
                <token postag="PKT"/>
            </pattern>
            <disambig action="filter" postag="VER:PA2.*"/>
            <example type="ambiguous" inputform="verhaftet[verhaften/VER:2:PLU:KJ1:SFT,verhaften/VER:2:PLU:PRÄ:SFT,verhaften/VER:3:SIN:PRÄ:SFT,verhaften/VER:IMP:PLU:SFT,verhaften/VER:PA2:SFT,verhaftet/PA2:PRD:GRU:VER]" outputform="verhaftet[verhaften/VER:PA2:SFT]">Er wurde gestern <marker>verhaftet</marker>.</example>
        </rule>
    </rulegroup>
    <rulegroup name="um...zu -> um (KON:INF)" id="UM_KON_INF">
        <rule>
            <pattern case_sensitive="yes">
                <token>,</token>
                <marker>
                    <token skip="7">um<exception scope="next">,</exception></token>
                </marker>
                <token>zu</token>
                <token postag="VER:INF:.+" postag_regexp="yes"/>
                <token postag="PKT"/>
            </pattern>
            <disambig action="filter" postag="KON:INF"/>
            <example type="ambiguous" inputform="um[um/ADV:TMP+MOD,um/KON:INF,um/KON:PRI,um/PRP:LOK+TMP+CAU:AKK,um/ZUS]" outputform="um[um/KON:INF]">Sie tat dies, <marker>um</marker> ihm zu helfen.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token>,</token>
                <marker>
                    <token skip="5">um</token>
                </marker>
                <token postag="VER:EIZ:.+" postag_regexp="yes"/>
                <token postag="PKT"/>
            </pattern>
            <disambig action="filter" postag="KON:INF"/>
            <example type="ambiguous" inputform="um[um/ADV:TMP+MOD,um/KON:INF,um/KON:PRI,um/PRP:LOK+TMP+CAU:AKK,um/ZUS]" outputform="um[um/KON:INF]">Sie tat dies, <marker>um</marker> seine Freilassung sicherzustellen.</example>
        </rule>
    </rulegroup>
    <rulegroup name="kein Nominativ nach 'Ich habe'/'Du hast'" id="KEIN_NOMINATIV">
        <rule>
            <pattern case_sensitive="yes">
                <token postag="SENT_START"/>
                <token postag="PRO:PER:NOM:.+" postag_regexp="yes"><exception postag="PRO:PER:NOM:.+" postag_regexp="yes" negate_pos="yes"/></token>
                <token inflected="yes">haben</token>
                <token postag="ADV.*" postag_regexp="yes" min="0"/>
                <marker>
                    <and>
                        <token postag="ART.*:NOM:.+" postag_regexp="yes"/>
                        <token postag="ART.*:(DAT|AKK).+" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag="ART.*NOM.+"/>
        </rule>
    </rulegroup>
    <rulegroup name="Dativ Singular für Pronomen" id="PRP_DAT_PRO_IND">
        <rule>
            <pattern>
                <token regexp="yes">am|dem|im|vom</token>
                <marker>
                    <token case_sensitive="yes" postag="PRO:IND:.*" postag_regexp="yes" regexp="yes">
                        [a-zäöü]+en<exception postag="PRO:IND:DAT:SIN.*" postag_regexp="yes"/>
                    </token>
                </marker>
                <token postag="SUB:DAT:SIN:NEU.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="add"><wd pos="PRO:IND:DAT:SIN:NEU"/></disambig>
        </rule>
    </rulegroup>
    <rulegroup name="Präposition / Verbzusatz" id="PRP_ZUS">
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <and>
                        <token postag="ZUS"/>
                        <token postag_regexp="yes" postag="PRP:.+"/>
                    </and>
                </marker>
                <token>,</token>
                <token postag="KON:UNT"/>
            </pattern>
            <disambig action="filter" postag="PRP:.+"/>
            <example type="ambiguous" inputform="zu[zu/ADV:MOD,zu/PRP:LOK+TMP+CAU+MOD:DAT+AKK,zu/ZUS]" outputform="zu[zu/PRP:LOK+TMP+CAU+MOD:DAT+AKK]">Sie gab <marker>zu</marker>, dass sie im Unrecht war.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token postag_regexp="yes" postag="VER:[123]:.+" skip="-1"/>
                <marker>
                    <and>
                        <token postag="ZUS"/>
                        <token postag_regexp="yes" postag="PRP:.+"/>
                    </and>
                </marker>
                <token postag="SENT_END" regexp="yes">\W</token>
            </pattern>
            <disambig action="filter" postag="ZUS"/>
            <example type="ambiguous" inputform="zu[zu/ADV:MOD,zu/PRP:LOK+TMP+CAU+MOD:DAT+AKK,zu/ZUS]" outputform="zu[zu/ZUS]">Sie gab es <marker>zu</marker>.</example>
        </rule>
    </rulegroup>
    <rule name="WORKAROUND_GH_635" id="WORKAROUND_GH_635">
        <!-- workaround for github issue mentioned in  https://github.com/languagetool-org/languagetool/issues/635 -->
        <pattern case_sensitive="yes">
            <marker>
                <token>-</token>
            </marker>
        </pattern>
        <disambig action="remove" postag=".+"/>
    </rule>
    <rule name="EIN_AM_SATZENDE" id="EIN_AM_SATZENDE">
        <pattern case_sensitive="yes">
            <token/>
            <marker>
                <token>ein</token>
            </marker>
            <token postag="SENT_END" regexp="yes">[\!\.\?]</token>
        </pattern>
        <disambig postag="ZUS"/>
    </rule>
    <rule name="FIDEL" id="FIDEL">
        <pattern case_sensitive="yes">
            <marker>
                <token>Fidel</token>
            </marker>
            <token regexp="yes">Castros?</token>
        </pattern>
        <disambig action="remove" postag="(ADJ|SUB).*"/>
    </rule>
    <rule id="HOCHDRAMATISCH" name="kein Verb: charismatischen / hochdramatischen">
        <pattern case_sensitive="yes">
            <marker>
                <token inflected="yes" regexp="yes">(charis|hochdra)matischen|minimalistischen</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="EX_LEGE" name="kein Verb: charismatischen / hochdramatischen">
        <pattern case_sensitive="yes">
            <token regexp="yes">de|ex|sine</token>
            <marker>
                <token>lege</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="FASSUNGSLOS" name="kein Substantiv: Fassungslos">
        <pattern case_sensitive="yes">
            <token>
                <exception postag="SENT_START"/>
                <exception regexp="yes">\W</exception>
            </token>
            <marker>
                <token postag="SUB:.+" postag_regexp="yes" regexp="yes">[A-Z][a-zäöüß]+ungslose?</token>
            </marker>
        </pattern>
        <disambig postag="ADJ:PRD:GRU"/>
        <example type="untouched">„Fassungslos bestieg sie das Schiff.“</example>
        <example type="untouched">Erbarmungslos bestieg sie das Schiff.</example>
    </rule>
    <rule id="BITTE" name="kein Verb: 'bitte' am Satzende">
        <pattern case_sensitive="yes">
            <marker>
                <token>bitte</token>
            </marker>
            <token postag="PKT" regexp="yes">[\.!]</token>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
        <example type="untouched">Und wenn ich dich ganz lieb bitte?</example>
    </rule>
    <rule id="EINIGE" name="kein Verb: 'einige' nach Verb">
        <pattern case_sensitive="yes">
            <token postag="VER:.+" postag_regexp="yes" skip="5"><exception scope="next" postag="PKT"/></token>
            <marker>
                <token regexp="yes">einige|Versuche</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
        <!-- Sie hat <marker>einige</marker> wichtige Dokumente vorbeigebracht-->
        <!-- Er unternahm verzweifelte <marker>Versuche</marker>, ...-->
    </rule>
    <rule id="ALTBEKANNTE" name="kein Partizip: altbekannte">
        <pattern case_sensitive="yes">
            <marker>
                <token>altbekannte</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="(PA2|VER):.+"/>
    </rule>
    <rule id="RECHTSCHAFFEN" name="kein Verb: rechtschaffen">
        <pattern case_sensitive="yes">
            <marker>
                <token>rechtschaffen</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="ERHALTENSWUERDIGEN" name="kein Verb: erhaltenswürdigen">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes" postag_regexp="yes" postag="VER:.+">[a-zäöü]{6,30}würdigen
                    <exception postag_regexp="yes" postag="VER:.+" negate_pos="yes"/>
                </token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="KAUFVERHALTEN" name="kein Verb: Kaufverhalten">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes" postag_regexp="yes" postag="VER:.+">[A-Z].+verhalten
                </token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="SUBSTANTIVIERTES_VERB" name="kein Verb: substantiviertes Verb">
        <pattern case_sensitive="yes">
            <token postag="PRP:LOK:DAT|ART:DEF:.+:NEU" postag_regexp="yes"/>
            <marker>
                    <and>
                        <token postag_regexp="yes" postag="SUB:.+:INF" regexp="yes">[A-ZÄÖÜ].+</token>
                        <token postag_regexp="yes" postag="VER:INF.+"/>
                    </and>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="SEIN_PA2" name="PA2 nach 'sein'">
        <pattern case_sensitive="yes">
            <token inflected="yes">sein</token>
            <marker>
                <token postag=".*PA2:.+" postag_regexp="yes"/>
            </marker>
            <token postag="PKT"/>
        </pattern>
        <disambig action="remove" postag="VER:[1-3I].+"/>
        <example type="ambiguous" inputform="belegt[belegen/VER:2:PLU:PRÄ:SFT,belegen/VER:3:SIN:PRÄ:SFT,belegen/VER:IMP:PLU:SFT,belegen/VER:PA2:SFT,belegt/PA2:PRD:GRU:VER]" outputform="belegt[belegen/VER:PA2:SFT,belegt/PA2:PRD:GRU:VER]">Gleichzeitig ist <marker>belegt</marker>, dass .</example>
    </rule>
    <rule id="ZU_MIT_INFINITIV" name="Infinitiv nach 'zu'">
        <pattern case_sensitive="yes">
            <token>zu</token>
            <marker>
                <token postag="VER:INF:.+" postag_regexp="yes"/>
            </marker>
            <token postag="PKT|KON:NEB" postag_regexp="yes"/>
        </pattern>
        <disambig action="remove" postag="VER:[1-3]:.+"/>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Sie kommen, um dich zu <marker>sehen</marker>.</example>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">"Sie kommen, um dich zu <marker>sehen</marker>."</example>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Sie kommen, um dich zu <marker>sehen</marker> und dich zu pflegen.</example>
    </rule>
    <rule id="MODALVERB_MIT_INFINITIV" name="Infinitiv mit Modalverb">
        <pattern case_sensitive="yes">
            <marker>
                <token postag_regexp="yes" postag="VER:INF:.+"/>
            </marker>
            <token postag_regexp="yes" postag="VER:(AUX|MOD):[1-3]:SIN:.+"/>
        </pattern>
        <disambig action="remove" postag="VER:[1-3]:.+"/>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Ich glaube nicht , dass er es <marker>sehen</marker> wird.</example>
    </rule>
    <rule id="MODALVERB_MIT_INFINITIV_2" name="Infinitiv mit Modalverb">
        <pattern case_sensitive="yes">
            <token postag_regexp="yes" postag="VER:(AUX|MOD):[1-3]:SIN:.+"/>
            <marker>
                <token postag_regexp="yes" postag="VER:INF:.+"/>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:[1-3]:.+"/>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Er kann <marker>sehen</marker>.</example>
    </rule>
    <rule id="RIW" name="Reit im Winkl">
        <pattern case_sensitive="yes">
            <marker>
                <token>Reit</token>
            </marker>
            <token>im</token>
            <token>Winkl</token>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="WUERDIGE" name="eine würdige (keine Verbform)">
        <pattern case_sensitive="yes">
            <token regexp="yes">[kdms]?eine|die(se)?|viele</token>
            <marker>
                <token>würdige</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="ZAHLEN" name="Zahlen">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(zw(ei|an)|drei|vier|fünf|sechs?|sieb(en)?|acht|neun)(zehn|(ss|ß|z)ig|hundert|tausend){0,2}((und)?(eins?|zwei|zwan|drei|vier|fünf|sechs|sieb(en)?|acht|neun)(.*zehn|.*(ss|ß|z)ig)?)?|(hundert|tausend).*(eins|zwei|drei|vier|fünf|sechs|sieben|acht|neun|zehn|(zwan|vier|fünf|sechs|sieb|acht|neun)zig|drei(ss|ß)ig|hundert)<exception postag="ZAL"/></token>
            </marker>
        </pattern>
        <disambig action="add"><wd pos="ZAL"/></disambig>
        <example type="ambiguous" inputform="achtzig[achtzig]" outputform="achtzig[achtzig/ZAL]">Er hat <marker>achtzig</marker> Pfennige.</example>
        <example type="ambiguous" inputform="dreihundertdreißig[dreihundertdreißig]" outputform="dreihundertdreißig[dreihundertdreißig/ZAL]">Das Ungeheuer verbrachte <marker>dreihundertdreißig</marker> Jahre in der Höhle.</example>
        <example type="ambiguous" inputform="hundertdreiundzwanzig[hundertdreiundzwanzig]" outputform="hundertdreiundzwanzig[hundertdreiundzwanzig/ZAL]">Meine Lieblingszahl ist <marker>hundertdreiundzwanzig</marker>.</example>
        <example type="ambiguous" inputform="tausendundeins[tausendundeins]" outputform="tausendundeins[tausendundeins/ZAL]">Zähl erst bis <marker>tausendundeins</marker> und such mich dann.</example>
        <example type="ambiguous" inputform="tausendeins[tausendeins]" outputform="tausendeins[tausendeins/ZAL]">Zähl erst bis <marker>tausendeins</marker> und such mich dann.</example>
    </rule>
    <!--<rule id="ZAHLEN_2" name="Zahlen (2)">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">\d+</token>
            </marker>
        </pattern>
        <disambig action="add"><wd pos="ZAL"/></disambig>
    </rule>-->
    <rulegroup id="KOENNEN" name="Können">
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:1:PLU:KJ1">können</wd></disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:1:PLU:PRÄ">können</wd></disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:3:PLU:KJ1">können</wd></disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:3:PLU:PRÄ">können</wd></disambig>
        </rule>
    </rulegroup>
    <rulegroup id="MODALVERB_AGREEMENT" name="Modalverben">
        <rule>
            <pattern>
                <token>ich</token>
                <marker>
                    <and>
                        <token postag="VER:MOD:1:SIN:.+" postag_regexp="yes"/>
                        <token postag="VER:MOD:3:SIN:.+" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|IMP).+"/>
            <example type="ambiguous" inputform="darf[dürfen/VER:MOD:1:SIN:PRÄ,dürfen/VER:MOD:3:SIN:PRÄ]" outputform="darf[dürfen/VER:MOD:1:SIN:PRÄ]">Ich <marker>darf</marker> das nicht.</example>
        </rule>
        <rule>
            <pattern>
                <token>er</token>
                <marker>
                    <and>
                        <token postag="VER:MOD:1:SIN:.+" postag_regexp="yes"/>
                        <token postag="VER:MOD:3:SIN:.+" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:(1|IMP).+"/>
            <example type="ambiguous" inputform="darf[dürfen/VER:MOD:1:SIN:PRÄ,dürfen/VER:MOD:3:SIN:PRÄ]" outputform="darf[dürfen/VER:MOD:3:SIN:PRÄ]">Er <marker>darf</marker> das nicht.</example>
        </rule>
    </rulegroup>
    <rulegroup id="KONJUNKTIV" name="Konjunktiv">
        <rule>
            <pattern>
                <token regexp="yes">e[rs]|sie</token>
                <marker>
                    <token postag="VER:.*3:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e
                        <exception scope="next">ich</exception><!-- für sie würde ich durchs Feuer gehen -->
                    </token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:1:.+"/>
            <example type="ambiguous" inputform="ginge[gehen/VER:1:SIN:KJ2:NON,gehen/VER:3:SIN:KJ2:NON]" outputform="ginge[gehen/VER:3:SIN:KJ2:NON]">Sie sagte, er <marker>ginge</marker> jetzt.</example>
        </rule>
        <rule>
            <pattern>
                <token>ich</token>
                <marker>
                    <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:3:.+"/>
            <example type="ambiguous" inputform="ginge[gehen/VER:1:SIN:KJ2:NON,gehen/VER:3:SIN:KJ2:NON]" outputform="ginge[gehen/VER:1:SIN:KJ2:NON]">Sie sagte, ich <marker>ginge</marker> merkwürdig.</example>
        </rule>
        <rule>
            <pattern>
                <token skip="5">,<exception scope="next" regexp="yes">,|ich</exception>
                    <exception scope="next" postag="PA[12]:.+|VER:.*INF.*" postag_regexp="yes"/></token>
                <marker>
                    <token postag="VER:.*3:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
                <token><exception>ich</exception></token>
            </pattern>
            <disambig action="remove" postag="VER.*:1:.+"/>
            <example type="ambiguous" inputform="ginge[gehen/VER:1:SIN:KJ2:NON,gehen/VER:3:SIN:KJ2:NON]" outputform="ginge[gehen/VER:3:SIN:KJ2:NON]">Sie sagte, wenn der Mann <marker>ginge</marker>, könne man beginnen.</example>
            <example type="untouched">Seit er mich angelogen hat, spreche ich nicht mehr mit ihm.</example>
        </rule>
        <rule>
            <pattern>
                <token>,</token>
                <marker>
                    <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
                <token>ich</token>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|IMP):.+"/>
            <example type="ambiguous" inputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT,sagen/VER:3:SIN:KJ1:SFT,sagen/VER:IMP:SIN:SFT]" outputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT]">Weil sie es wollte, <marker>sage</marker> ich ihr diw Wahrheit.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token postag="EIG:NOM:SIN.+" postag_regexp="yes"/>
                <marker>
                    <token postag="VER:.*3:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
                <token><exception>ich</exception></token>
            </pattern>
            <disambig action="remove" postag="VER.*:1:.+"/>
            <example type="ambiguous" inputform="ginge[gehen/VER:1:SIN:KJ2:NON,gehen/VER:3:SIN:KJ2:NON]" outputform="ginge[gehen/VER:3:SIN:KJ2:NON]">Jeremy <marker>ginge</marker> jetzt, wenn er noch den Heimweg fände.</example>
            <example type="untouched">Tom traue ich mehr als Maria.</example>
        </rule>
    </rulegroup>
    <rulegroup id="TASCHENMESSER" name="Taschenmesser">
        <rule>
            <pattern>
                <token inflected="yes">Taschenmesser</token>
            </pattern>
            <disambig action="remove" postag="SUB:.*:MAS"/>
        </rule>
    </rulegroup>
    <rulegroup id="REICHEN" name="Entferne Adjektivform von 'reiche'">
        <rule>
            <pattern case_sensitive="yes">
                <token postag_regexp="yes" postag="ART:.+"/>
                <marker><token>reiche</token></marker>
                <token regexp="yes">aus|von</token>
            </pattern>
            <disambig action="remove" postag="ADJ:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="KEIN_IMPERATIV" name="Entferne Imperativ am Satzende langer Sätze">
        <rule>
            <antipattern><!-- schreit = schrei(e)t!, schreit(e)!, (er) schreit -->
                <token postag="VER:IMP:SIN.*" postag_regexp="yes"><exception postag="VER:[123].*" postag_regexp="yes"/></token>
                <token postag="SENT_END"/>
            </antipattern>
            <pattern case_sensitive="yes">
                <token/>
                <token/>
                <token skip="-1"/>
                <marker><token postag_regexp="yes" postag="VER:IMP.+"><exception scope="previous" postag="KON:NEB|PKT" postag_regexp="yes"/></token></marker>
                <token postag="SENT_END"/>
            </pattern>
            <disambig action="remove" postag="VER:IMP.+"/>
            <example type="untouched">Schade, dass er immer so leise sprich.</example><!-- literal tagging here is useful for finding this error -->
            <example type="untouched">Los, komm!</example>
        </rule>
    </rulegroup>
    <rulegroup id="VERB_AGREEMENT_WIR" name="Verbform: 1. Person Plural">
        <rule>
            <pattern>
                <token><exception postag_regexp="yes" postag="VER:.+"/></token>
                <marker>
                    <token postag="VER:.*1:PLU:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+en</token>
                </marker>
                <token>wir</token>
                <token><exception postag_regexp="yes" postag="VER:.+"/></token>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|I..):.+"/>
            <example type="ambiguous" inputform="singen[singen/VER:1:PLU:KJ1:NON,singen/VER:1:PLU:PRÄ:NON,singen/VER:3:PLU:KJ1:NON,singen/VER:3:PLU:PRÄ:NON,singen/VER:INF:NON]" outputform="singen[singen/VER:1:PLU:KJ1:NON,singen/VER:1:PLU:PRÄ:NON]">Weil sie es wollte, <marker>singen</marker> wir dieses Lied.</example>
        </rule>
        <rule>
            <pattern>
                <token><exception postag_regexp="yes" postag="VER:.+"/></token>
                <token>wir</token>
                <marker>
                    <token postag="VER:.*1:PLU:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+en</token>
                </marker>
                <token><exception postag_regexp="yes" postag="VER:.+"/></token>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|I..):.+"/>
            <example type="ambiguous" inputform="singen[singen/VER:1:PLU:KJ1:NON,singen/VER:1:PLU:PRÄ:NON,singen/VER:3:PLU:KJ1:NON,singen/VER:3:PLU:PRÄ:NON,singen/VER:INF:NON]" outputform="singen[singen/VER:1:PLU:KJ1:NON,singen/VER:1:PLU:PRÄ:NON]">Wenn wir <marker>singen</marker>, hört jeder zu.</example>
            <example type="untouched">Die Stadt, in die wir fahren werden, ist sehr schön.</example>
            <example type="untouched">Bevor wir schwimmen gegangen sind, müssen wir das machen.</example>
        </rule>
        <rule>
            <pattern>
                <token>wir</token>
                <marker>
                    <token postag="VER:MOD:1:PLU:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+en</token>
                </marker>
                <token postag="VER:INF.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|I..).*"/>
            <example type="ambiguous" inputform="können[können/VER:MOD:1:PLU:KJ1,können/VER:MOD:1:PLU:PRÄ,können/VER:MOD:3:PLU:KJ1,können/VER:MOD:3:PLU:PRÄ,können/VER:MOD:INF]" outputform="können[können/VER:MOD:1:PLU:KJ1,können/VER:MOD:1:PLU:PRÄ]">Wir <marker>können</marker> sagen, dass wir alles alles versucht haben.</example>
        </rule>
        <rule>
            <pattern>
                <token>wir</token>
                <token postag="VER:MOD:1:PLU:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+en</token>
                <marker>
                    <token postag="VER:INF.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:[13].*"/>
            <example type="ambiguous" inputform="sagen[sagen/VER:1:PLU:KJ1:SFT,sagen/VER:1:PLU:PRÄ:SFT,sagen/VER:3:PLU:KJ1:SFT,sagen/VER:3:PLU:PRÄ:SFT,sagen/VER:INF:SFT]" outputform="sagen[sagen/VER:INF:SFT]">Wir können <marker>sagen</marker>, dass wir alles alles versucht haben.</example>
        </rule>
    </rulegroup>
    <rulegroup id="VERB_AGREEMENT_ICH" name="Verbform: 1. Person Singular">
        <rule>
            <pattern>
                <marker>
                    <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
                <token case_sensitive="yes">ich</token>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|I..):.+"/>
            <example type="ambiguous" inputform="singe[singen/VER:1:SIN:KJ1:NON,singen/VER:1:SIN:PRÄ:NON,singen/VER:3:SIN:KJ1:NON,singen/VER:IMP:SIN:NON]" outputform="singe[singen/VER:1:SIN:KJ1:NON,singen/VER:1:SIN:PRÄ:NON]">Dann <marker>singe</marker> ich jetzt ein Lied.</example>
        </rule>
    </rulegroup>
    <rulegroup id="VERB_AGREEMENT_IHR" name="Verbform: 2. Person Plural">
        <rule>
            <pattern>
                <token postag="KON:UNT"/>
                <token case_sensitive="yes">ihr</token>
                <marker>
                    <token postag="VER:2:PLU:PRÄ.*" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+t</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|I..):.+"/>
            <example type="ambiguous" inputform="singt[singen/VER:2:PLU:PRÄ:NON,singen/VER:3:SIN:PRÄ:NON,singen/VER:IMP:PLU:NON]" outputform="singt[singen/VER:2:PLU:PRÄ:NON]">Wenn ihr <marker>singt</marker>, dann bin ich zufrieden.</example>
        </rule>
    </rulegroup>
    <rulegroup id="KEIN_IMPERATIV_II" name="Entferne Imperativ von Verkürzungen wie 'ich geh', 'ich lauf'">
         <rule>
            <pattern>
                <token postag_regexp="yes" postag="PRO:PER:NOM:.+">ich<exception postag_regexp="yes" postag="PRO:PER:NOM:.+" negate_pos="yes"/></token>
                <marker>
                    <token postag_regexp="yes" postag="VER:IMP:SIN:.+"/></marker>
            </pattern>
            <disambig action="remove" postag="VER:IMP.+"/>
            <example type="ambiguous" inputform="geh[gehen/VER:1:SIN:PRÄ:NON,gehen/VER:IMP:SIN:NON]" outputform="geh[gehen/VER:1:SIN:PRÄ:NON]">Ich <marker>geh</marker> zu ihm.</example>
        </rule>
    </rulegroup>
    <rulegroup id="RETTUNGSWAGEN" name="Rettungswagen keine Verbform">
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">(Rettungs|Kranken)wagen|[A-Z][a-zäöüß]{4,30}(schmerzen|strecken)</token>
            </pattern>
            <disambig action="remove" postag="SUB:.+:SIN:NEU.*"/>
        </rule>
    </rulegroup>
    <rulegroup id="PRP_NOM" name="kein Nominativ nach Präposition">
        <rule>
            <pattern case_sensitive="yes">
                <token postag_regexp="yes" postag="PRP:LOK(\+TMP)?:DAT"/>
                <marker>
                    <and>
                        <token postag_regexp="yes" postag=".+(NOM|AKK):.+"/>
                        <token postag_regexp="yes" postag=".+(DAT|GEN):.+"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag=".+:(NOM|AKK):.+"/>
        </rule>
        <rule>
            <antipattern>
                <token>von</token>
                <token>Natur</token>
                <token>aus</token>
            </antipattern>
            <pattern case_sensitive="yes">
                <token postag_regexp="yes" postag="PRP.+">
                    <exception>gleich</exception>
                    <exception>zu</exception>
                    <exception postag_regexp="yes" postag="PRP:NOM.*"/>
                </token>
                <marker>
                    <and>
                        <token postag_regexp="yes" postag=".+NOM:.+"/>
                        <token postag_regexp="yes" postag=".+(AKK|DAT|GEN):.+"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag=".+:NOM:.+"/>
            <example type="untouched">Es gilt als das wichtigste Schriftstück des 20. Jhds.</example>
            <example type="untouched">Das passiert nur, wenn der zu Pflegende bereit ist.</example>
        </rule>
    </rulegroup>
    <rulegroup id="ZURATE" name="'zurate' keine Verbform in Verbindung mit 'ziehen'">
        <rule>
            <pattern case_sensitive="yes">
                <token inflected="yes" skip="5">ziehen<exception scope="next" postag="PKT"/></token>
                <marker><token>zurate</token></marker>
            </pattern>
            <disambig><wd lemma="zurate" pos="ADV">zurate</wd></disambig>
            <example type="ambiguous" inputform="zurate[zuraten/VER:1:SIN:KJ1:NON:NEB,zuraten/VER:1:SIN:PRÄ:NON:NEB,zuraten/VER:3:SIN:KJ1:NON:NEB]" outputform="zurate[zurate/ADV]">Bitte ziehe einen lokalen Experten <marker>zurate</marker>.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <marker><token>zurate</token></marker>
                <token inflected="yes">ziehen</token>
            </pattern>
            <disambig><wd lemma="zurate" pos="ADV">zurate</wd></disambig>
        </rule>
    </rulegroup>
    <rulegroup id="PRAEP_DAT" name="Präposition mit Dativ">
        <rule>
            <pattern>
                <token postag="PRP:TMP+MOD+CAU:DAT"/>
                <marker>
                    <token postag="ADJ:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes" min="0">[a-zäöüß]-+</token>
                    <token postag="SUB:.+" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="remove" postag=".*:(NOM|AKK):.*"/>
        </rule>
    </rulegroup>
    <rulegroup id="DIREKTVERTRIEB" name="Kompositum mit 'Vertrieb' keine Verbform">
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">[A-Z].+vertrieb</token>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="SUB_PRT_VERB" name="Entferne Präteritum von Substantiv">
        <!-- TODO: großgeschriebenes Imperativ (z.B. "Quell") und Konjunktiv -->
        <rule>
            <pattern case_sensitive="yes">
                <token><exception postag="SENT_START"/><exception regexp="yes">[:;]</exception></token>
                <marker>
                    <and>
                        <token postag="SUB:.+" postag_regexp="yes"/>
                        <token postag="VER:[1-3]:[A-Z]{3}:PRT:.+" postag_regexp="yes" regexp="yes">[A-ZÄÖÜ].+</token>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
            <example type="ambiguous" inputform="Abstand[Abstand/SUB:AKK:SIN:MAS,Abstand/SUB:DAT:SIN:MAS,Abstand/SUB:NOM:SIN:MAS,abstehen/VER:1:SIN:PRT:NON:NEB,abstehen/VER:3:SIN:PRT:NON:NEB]" outputform="Abstand[Abstand/SUB:AKK:SIN:MAS,Abstand/SUB:DAT:SIN:MAS,Abstand/SUB:NOM:SIN:MAS]">Ich habe Verständnis und halte <marker>Abstand</marker>.</example>
        </rule>
    </rulegroup>
    <rulegroup id="SUB_BEAMTE" name="Substantiv: Justiz-/Vollzugs-/Schalterbeamte">
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">[A-ZÄÖÜ][a-zäöüß]{3,30}beamte</token>
            </pattern>
            <disambig postag="SUB:NOM:SIN:MAS"/>
            <example type="ambiguous" inputform="Schalterbeamte[Schalterbeamte/SUB:NOM:SIN:MAS:ADJ]" outputform="Schalterbeamte[Schalterbeamte/SUB:NOM:SIN:MAS]">Beamte, <marker>Schalterbeamte</marker>.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">[A-ZÄÖÜ][a-zäöüß]{3,30}beamte</token>
            </pattern>
            <disambig action="add"><wd pos="SUB:AKK:PLU:MAS"/></disambig>
            <example type="ambiguous" inputform="Schalterbeamte[Schalterbeamte/SUB:NOM:SIN:MAS:ADJ]" outputform="Schalterbeamte[Schalterbeamte/SUB:AKK:PLU:MAS,Schalterbeamte/SUB:NOM:SIN:MAS:ADJ]">Beamte, <marker>Schalterbeamte</marker>.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">[A-ZÄÖÜ][a-zäöüß]{3,30}beamte</token>
            </pattern>
            <disambig action="add"><wd pos="SUB:NOM:PLU:MAS"/></disambig>
            <example type="ambiguous" inputform="Schalterbeamte[Schalterbeamte/SUB:NOM:SIN:MAS:ADJ]" outputform="Schalterbeamte[Schalterbeamte/SUB:NOM:PLU:MAS,Schalterbeamte/SUB:NOM:SIN:MAS:ADJ]">Beamte, <marker>Schalterbeamte</marker>.</example>
        </rule>
    </rulegroup>
    <rulegroup id="WEISS" name="Verb/Adjektiv: weiß">
        <rule>
            <pattern>
                <token regexp="yes">ich|er|sie<exception scope="previous" inflected="yes" regexp="yes">werden|sein</exception></token>
                <marker><token case_sensitive="yes">weiß
                    <exception scope="next" postag="VER:.*(INF|1|3).*" postag_regexp="yes"/></token></marker>
            </pattern>
            <disambig action="remove" postag="ADJ:PRD:GRU"/>
            <example type="untouched">Ich glaube, dass er weiß streichen wird.</example>
            <example type="untouched">Wir lesen beide Tag und Nacht die Bibel, aber Sie lesen dort schwarz, wo ich weiß lese.</example>
        </rule>
        <rule>
            <pattern>
                <token inflected="yes">sein</token>
                <marker><token case_sensitive="yes">weiß</token></marker>
            </pattern>
            <disambig action="remove" postag="VER:[13]:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="PA2_PRT_VERB" name="Entferne Präteritum von Partizip">
        <rule>
            <antipattern>
                <token>das</token>
                <token regexp="yes">bestätigte?n?|erwähnte?n?|betonte?n?</token>
            </antipattern>
            <pattern case_sensitive="yes">
                <token inflected="yes" regexp="yes">ein|der</token>
                <marker>
                    <and>
                        <token postag="PA2:.+" postag_regexp="yes" />
                        <token postag="VER:[1-3]:[A-Z]{3}:PRT:.+" postag_regexp="yes" regexp="yes">
                            [a-zäöü].+
                            <exception inflected="yes">betonen</exception>
                        </token>
                    </and>
                </marker>
                <token postag="SUB:.+" postag_regexp="yes" regexp="yes">[A-ZÄÖÜ].+</token>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
            <example type="untouched">Das betonte Bundeskanzlerin Angela Merkel.</example>
        </rule>
    </rulegroup>
    <rulegroup id="PA2_WERDEN" name="Entferne Adjektiv von Partizip">
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <and>
                        <token postag="PA2:.+" postag_regexp="yes"/>
                        <token postag="ADJ:PRD:GRU"/>
                    </and>
                </marker>
                <token regexp="yes">w[eo]rden</token>
            </pattern>
            <disambig action="remove" postag="ADJ:PRD:GRU"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token inflected="yes" skip="3">werden<exception scope="next" postag="PKT"/></token>
                <marker>
                    <and>
                        <token postag="PA2:.+" postag_regexp="yes"/>
                        <token postag="ADJ:PRD:GRU"/>
                    </and>
                </marker>
                <token postag="PKT"/>
            </pattern>
            <disambig action="remove" postag="ADJ:PRD:GRU"/>
        </rule>
    </rulegroup>
    <rulegroup id="RARE_PRT" name="Entferne Präteritum">
        <rule>
            <pattern case_sensitive="yes">
                <token><exception>ihr</exception></token>
                <marker>
                    <token>schlicht</token>
                </marker>
                <token><exception>ihr</exception></token>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="VER_3" name="Entferne 1./2. Person von Verb">
        <rule>
            <pattern case_sensitive="yes">
                <token postag="SENT_START"/>
                <token regexp="yes">D(a|ie)s|E[rs]|Sie</token>
                <marker>
                    <and>
                       <token postag="VER:3:SIN.+" postag_regexp="yes"/>
                       <token postag="VER:([12]|IMP):.+" postag_regexp="yes"/>
                    </and>
                </marker>
                <token><exception regexp="yes">ich|du|wir</exception></token>
            </pattern>
            <disambig action="remove" postag="VER:(IMP|[12]):.+"/>
            <example type="ambiguous" inputform="geht[gehen/VER:2:PLU:PRÄ:NON,gehen/VER:3:SIN:PRÄ:NON,gehen/VER:IMP:PLU:NON]" outputform="geht[gehen/VER:3:SIN:PRÄ:NON]">Das <marker>geht</marker> selten gut aus.</example>
            <example type="untouched">Das dachte ich mir schon.</example>
        </rule>
    </rulegroup>

    <!-- ============================================================================================================== -->
    <!-- IGNORE SPELLING -->

    <rulegroup name="Ofenbach Duo" id="OFENBACH"><!--Ofenbach ist ein französisches House-Duo aus Paris.-->
        <rule><!--1-->
            <pattern>
                <token regexp="yes" skip="-1">Ofenbachs?</token>
                <token regexp="yes">Duo|Musik.*|französisch(e[smnr]?)?|House.*|Paris|DJs?|Produzent(en)?|César|Laurent|Rummel|Dorian|Lauduique|Songs?|Be|Elektropop.*|Remix(er)?</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule><!--2-->
            <pattern>
                <token skip="-1" regexp="yes">Duo|Musik.*|französisch(e[smnr]?)?|House.*|Paris|DJs?|Produzent(en)?|César|Laurent|Rummel|Dorian|Lauduique|Songs?|Be|Elektropop.*|Remix(er)?</token>
                <token regexp="yes">Ofenbachs?</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule name="Acoustic (engl.)" id="IGNORE_ACOUSTIC"><!--Das sogenannte Acoustic Surface sorgt für klaren Sound.-->
        <pattern case_sensitive="yes">
            <token>Acoustic</token>
            <token postag="UNKNOWN" regexp="yes">[A-Z].*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Acoustic (engl.) 2" id="IGNORE_ACOUSTIC2"><!--Wir nutzen eine Acoustic Software dafür.-->
        <pattern case_sensitive="yes">
            <token>Acoustic</token>
            <token regexp="yes">Grand|Groove|Party|(Software|Combo|Tour|Festival|Album)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Acoustic (engl.) 3" id="IGNORE_ACOUSTIC3"><!--Für die musikalische Unterhaltung sorgt Modern Acoustic Four.-->
        <pattern case_sensitive="yes">
            <token postag="UNKNOWN" regexp="yes">[A-Z].*</token>
            <token>Acoustic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Acoustic (engl.) 3" id="IGNORE_ACOUSTIC4"><!--Für die musikalische Unterhaltung sorgt die Band Acoustic Four.-->
        <pattern case_sensitive="yes">
            <token regexp="yes">Bands?|Impact</token>
            <token>Acoustic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="des Machens" id="IGNORE_DES_MACHENS"><!--Das ist alles eine Frage des (simplen) Machens.-->
        <pattern case_sensitive="yes">
            <token skip="1">des</token>
            <token>Machens</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Telecommunications" id="TELECOMMUNICATIONS">
        <pattern>
            <token regexp="yes">International|Personal|FlexDSL</token>
            <token regexp="yes">Telecommunications?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="x-Sitzer" id="X-SITZER">
        <pattern>
            <token regexp="yes">\d+-Sitzer[ns]?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Herr Müller senior" id="NAME_SENIOR">
        <pattern>
            <token postag="EIG.*" postag_regexp="yes"/>
            <token case_sensitive="yes">senior</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Telecommunications_2" id="TELECOMMUNICATIONS_2">
        <pattern>
            <token regexp="yes">Telecommunications?</token>
            <token min="0" regexp="yes">compan(y|ies)|standardization|services?|development|Orbiters?|AG</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Chai latte" id="CHAI_LATTE">
        <pattern case_sensitive="yes">
            <token regexp="yes">Chai|Fior</token>
            <token min="0">di</token>
            <token>latte</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Café crème" id="CAFÉ_CRÈME">
        <pattern>
            <token regexp="yes">Caff?[èéêe]</token>
            <token min="0">con</token>
            <token regexp="yes">crème|mélange|cortado|cheio|leche|latte|lungo|americano</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Espresso doppio" id="ESPRESSO_DOPPIO">
        <pattern case_sensitive="yes">
            <token regexp="yes">Espresso|Latte</token>
            <token>doppio</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Ignore spelling of url protocols" id="URI_PROTOCOL">
        <pattern><!-- chrome://, ftp://, file:// -->
            <token regexp="yes">[a-z\-]+</token>
            <token spacebefore="no">:</token>
            <token spacebefore="no">/</token>
            <token spacebefore="no">/</token>
            <token spacebefore="no" min="0">/</token>
            <token spacebefore="no" regexp="yes">[a-z0-9\-]+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="An- und ..." id="AN_HYPHEN">
        <pattern case_sensitive="yes">
            <token>An-</token>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|beziehungsweise|bzw</token>
            <token min="0" regexp="yes">wieder|dann|\.</token>
            <token regexp="yes">(Ver|Zu|Abver)kauf(en)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Be- und ..." id="BE_HYPHEN">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">[Bb]e-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|beziehungsweise|bzw</token>
            <token min="0" regexp="yes">wieder|dann|\.</token>
            <token regexp="yes">[Ee]nt.+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Nah- und ..." id="NAH_HYPHEN">
        <pattern case_sensitive="yes">
            <marker>
                <token>Nah-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|beziehungsweise|bzw</token>
            <token min="0" regexp="yes">wieder|dann|\.</token>
            <token regexp="yes">Fern.+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Ver- und Ent-" id="VER_HYPHEN">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">[Vv]er-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|beziehungsweise|bzw</token>
            <token min="0" regexp="yes">wieder|dann|\.</token>
            <token regexp="yes">[Ee]nt.+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Runter- und Hochladen" id="RUNTER_HYPHEN">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">([Rr]unter|[Hh]erunter)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|beziehungsweise|bzw</token>
            <token min="0" regexp="yes">wieder|dann|\.</token>
            <token regexp="yes">[Hh]och.+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="IPv4/6" id="IPVx">
        <pattern>
            <token regexp="yes">IPv[46]-(Adressen?|Adressraum(s|es)?|Verbindung|Standard|Präfix|Netzwerke?|Netzwerke[ns]|Paket(e|en|s|es)?|Einstellung|Implementierung|Header|Host|Routing|Gerät(s|es|e|en)?|Kommunikation|fähig(e|er|es|en|em)?)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="1.x" id="ZAHL_X">
        <pattern>
            <!-- Versionsnummern wie "2.x" -->
            <token regexp="yes">\d+</token>
            <token spacebefore="no">.</token>
            <token spacebefore="no">x</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="x-karätig" id="KARAETIG1">
        <pattern>
            <token regexp="yes">\d+-karätig(e[rnms]?)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="x,y-karätig" id="KARAETIG2">
        <pattern>
            <token regexp="yes">\d+</token>
            <token>,</token>
            <token regexp="yes">\d+-karätig(e[rnms]?)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="CO₂-Emission" id="CO2-EMISSION">
        <pattern>
            <token regexp="yes">CO₂-(Emission(en)?|Ausstoß(es)?|Steuern?|Rechnern?|Preis|Zylinder|Fußabdrucks?|Bepreisung)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Stiftischen Gymnasiums" id="STIFTISCHEN">
        <pattern>
            <token>Stiftischen</token>
            <token regexp="yes">Gymnasiums?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Stiftisches Gymnasium" id="STIFTISCHES">
        <pattern>
            <token regexp="yes">Stiftisches?</token>
            <token>Gymnasium</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ayers Rock" id="AYERS_ROCK">
        <pattern case_sensitive="yes">
            <token>Ayers</token>
            <token>Rock</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alice Springs" id="ALICE_SPRINGS">
        <pattern case_sensitive="yes">
            <token>Alice</token>
            <token>Springs</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <!-- FRENCH -->

    <rule name="comme il faut" id="COMME_IL_FAUT">
        <pattern>
            <token>comme</token>
            <token>il</token>
            <token>faut</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="peu à peu" id="PEU_A_PEU">
        <pattern>
            <token>peu</token>
            <token>à</token>
            <token>peu</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="avant la lettre" id="AVANT_LA_LETTRE">
        <pattern>
            <token regexp="yes">avant|avec|après</token>
            <token>la</token>
            <token>lettre</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="en vogue" id="EN_VOGUE">
        <pattern>
            <token>en</token>
            <token regexp="yes">bloc|vogue|gros|masse|miniature|passant|détail|suite|fa(mill|c)e|garde|route|suite</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Île de Ré" id="ILE_DE_FRANCE">
        <pattern>
            <token>Île</token>
            <token>de</token>
            <token regexp="yes">Ré|France|Porquerolles</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Bœuf bourguignon" id="BOEUF_BOURGUIGNON">
        <pattern>
            <token>Bœuf</token>
            <token regexp="yes">bourguignon|Stroganoff</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mise en scène" id="MISE_EN_SCENE">
        <pattern>
            <token>Mise</token>
            <token>en</token>
            <token>scène</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Crème de la Crème" id="CREME_DE_LA_CREME">
        <pattern case_sensitive="yes">
            <token>Crème</token>
            <token>de</token>
            <token>la</token>
            <token>Crème</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Crème fraîche/brûlée" id="CREME_FRAICHE">
        <pattern case_sensitive="yes">
            <token>Crème</token>
            <token regexp="yes">br[ûu]lée|Caramel|double|fraîche</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="d'accord" id="D_ACCORD">
        <pattern>
            <token>d</token>
            <token regexp="yes">['’]</token>
            <token>accord</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="laissez faire" id="LAISSEZ_FAIRE">
        <pattern>
            <token>laissez</token>
            <token>faire</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="corps diplomatique" id="CORPS_DIPLOMATIQUE">
        <pattern>
            <token>corps</token>
            <token>diplomatique</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="rien ne va plus" id="RIEN_NE_VA_PLUS">
        <pattern>
            <token>rien</token>
            <token>ne</token>
            <token>va</token>
            <token>plus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="à la carte" id="A_LA_CARTE">
        <pattern>
            <token>à</token>
            <token>la</token>
            <token>carte</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="carte blanche" id="CARTE_BLANCHE">
        <pattern>
            <token>carte</token>
            <token>blanche</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="par excellence" id="PAR_EXCELLENCE">
        <pattern case_sensitive="yes">
            <token>par</token>
            <token>excellence</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Tour de Force/France" id="TOUR_DE_FORCE">
        <pattern case_sensitive="yes">
            <token>Tour</token>
            <token>de</token>
            <token regexp="yes">F(or|ran)ce|S(ki|uisse)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Tour d'Horizon/Honneur" id="TOUR_D_HORIZON">
        <pattern case_sensitive="yes">
            <token regexp="yes">Tours?</token>
            <token>d</token>
            <token regexp="yes">['’]</token>
            <token regexp="yes">Ho(nneur|rizon)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pas de deux" id="PAS_DE_DEUX">
        <pattern case_sensitive="yes">
            <token>Pas</token>
            <token>de</token>
            <token>deux</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pièce de résistance" id="RESISTANCE">
        <pattern>
            <token>pièce</token>
            <token>de</token>
            <token>résistance</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Arc de Triomphe" id="ARC_DE_TRIOMPHE">
        <pattern case_sensitive="yes">
            <token>Arc</token>
            <token>de</token>
            <token>Triomphe</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="nom de guerre" id="NOM_DE_GUERRE">
        <pattern>
            <token regexp="yes">noms?</token>
            <token>de</token>
            <token regexp="yes">guerre|plume</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Coq au Vin" id="COQ_AU_VIN">
        <pattern>
            <token>Coq</token>
            <token>au</token>
            <token>Vin</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Cordon bleu" id="CORDON_BLEU">
        <pattern case_sensitive="yes">
            <token>Cordon</token>
            <token regexp="yes">bleu|sanitaire</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Jour fixe" id="JOUR_FIXE">
        <pattern>
            <token regexp="yes">Blanc|Jour|Idée</token>
            <token>fixe</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Nouvelle Cuisine/Vague" id="NOUVELLE_VAGUE">
        <pattern>
            <token>Nouvelle</token>
            <token regexp="yes">Cuisine|Vague</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Saucen" id="SAUCEN">
        <pattern>
            <token>Sauce</token>
            <token regexp='yes'>hollandaise|béarnaise|bordelaise|Bolognese|Béchamel|tartare</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Casus" id="CASUS">
        <pattern>
            <token>Casus</token>
            <token regexp='yes'>Belli|Foederis|knacksus|obliquus|rectus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ignore words with -Sekünder or -Minüter" id="SEKUENDER">
        <pattern><!-- 60-Sekünder, 30-Minüter -->
            <token regexp="yes">[\d]{1,2}-(Sekünder|Minüter)[ns]?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Sambal Oelek" id="SAMBAL_OELEK">
        <pattern case_sensitive="yes">
            <token>Sambal</token>
            <token>Oelek</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Pulled Pork" id="PULLED_PORK">
        <pattern case_sensitive="yes">
            <token>Pulled</token>
            <token>Pork</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Earl Grey" id="EARL_GREY">
        <pattern case_sensitive="yes">
            <token>Earl</token>
            <token>Grey</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Sierra Madre" id="SIERRA_MADRE">
        <pattern case_sensitive="yes">
            <token>Sierra</token>
            <token regexp="yes">Madre|Negra</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Los Angeles" id="LOS_ANGELES">
        <pattern>
            <token>Los</token>
            <token regexp="yes">A(lamo|ngele)s</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Las Vegas" id="LAS_VEGAS">
        <pattern case_sensitive="yes">
            <token>Las</token>
            <token regexp="yes">Ramblas|Vegas</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="ABBEY" id="ABBEY">
        <pattern case_sensitive="yes">
            <token>Westminster</token>
            <token>Abbey</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Valleys" id="VALLEYS">
        <pattern case_sensitive="yes">
            <token regexp="yes">Death|Napa|Silicon</token>
            <token regexp="yes">Valleys?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Oak Ridge" id="OAK_RIDGE">
        <pattern case_sensitive="yes">
            <token>Oak</token>
            <token>Ridge</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Rhythm and Blues" id="RHYTHM_AND_BLUES">
        <pattern>
            <token>Rhythm</token>
            <token>and</token>
            <token>Blues</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="World of Warcraft" id="WOW">
        <pattern case_sensitive="yes">
            <token>World</token>
            <token>of</token>
            <token>Warcraft</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="World Trade Center" id="WTC">
        <pattern case_sensitive="yes">
            <token>World</token>
            <token>Trade</token>
            <token regexp="yes">Centers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Christopher Street Day" id="CSD">
        <pattern case_sensitive="yes">
            <token>Christopher</token>
            <token>Street</token>
            <token>Day</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Rock and Roll" id="ROCK_AND_ROLL">
        <pattern>
            <token>Rock</token>
            <token>and</token>
            <token>Roll</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alexius Meinong" id="ALEXIUS_MEINONG">
        <pattern>
            <token>Alexius</token>
            <token regexp="yes">Meinongs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="starker Tobak" id="STARKER_TOBAK">
        <pattern>
            <token regexp="yes">alter|starker|anno</token>
            <token>Tobak</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alfred Nobel" id="ALFRED_NOBEL">
        <pattern>
            <token>Alfred</token>
            <token>Nobel</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="São Paulo" id="SAO_PAULO">
        <pattern>
            <token>São</token>
            <token regexp="yes">(Paulo|Vicente|Miguel|José)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Addis Abeba" id="ADDIS_ABEBA">
        <pattern>
            <token>Addis</token>
            <token>Abeba</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="La Paz" id="LA_PAZ">
        <pattern case_sensitive="yes">
            <token>La</token>
            <token regexp="yes">Paz|[Tt]raviata|Sapienza|Spezia|Rambla</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Santo Domingo" id="SANTO_DOMINGO">
        <pattern>
            <token>Santo</token>
            <token>Domingo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="San Bernardino" id="SAN_BERNARDINO">
        <pattern case_sensitive="yes">
            <token>San</token>
            <token regexp="yes">Bernardino|Gottardo|Remo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>


    <rule name="Cinque Terre" id="CINQUE_TERRE">
        <pattern case_sensitive="yes">
            <token>Cinque</token>
            <token>Terre</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Le Havre/Le Mans" id="LE_HAVRE">
        <pattern>
            <token>Le</token>
            <token regexp='yes'>Havre|Mans|Monde|Pens?|Corbusiers?|Figaros?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Phnom Penh" id="PHNOM_PENH">
        <pattern>
            <token>Phnom</token>
            <token>Penh</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mozilla/Wikimedia Foundation" id="FOUNDATIONS">
        <pattern>
            <token regexp="yes">Wikimedia|Mozilla</token>
            <token>Foundation</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Open Source" id="OPEN_SOURCE">
        <pattern>
            <token>Open</token>
            <token>Source</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Visual Studio/Basic" id="VISUAL_STUDIO">
        <pattern case_sensitive="yes">
            <token>Visual</token>
            <token regexp="yes">Studio|Basic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="European Standardisation" id="EUROPEAN_STANDARDISATION">
        <pattern case_sensitive="yes">
            <token>European</token>
            <token>Standardisation</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Jungle World" id="JUNGLE_WORLD">
        <pattern>
            <token>Jungle</token>
            <token>World</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Rolling Stones" id="STONES">
        <pattern>
            <token>Rolling</token>
            <token regexp='yes'>Stones?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ein und Alles" id="EIN_UND_ALLES">
        <pattern>
            <!-- http://canoonet.eu/blog/2008/11/14/zum-einen-zum-anderen/ -->
            <token>Ein</token>
            <token regexp="yes">und|&amp;</token>
            <token>Alles</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Big Ben" id="BIG_BEN">
        <pattern>
            <token>Big</token>
            <token regexp="yes">Apple|B(en|an[dg]|rother)s?|Datas?|Macs?|Points?|Pushs?|Vegans?|Business|Player[sn]?|Tech|Four</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Chief" id="CHIEF"><!-- common job titles -->
      <pattern case_sensitive="yes">
        <token>Chief</token>
        <token regexp="yes">Executive|Growth|Product|Technology|Technical|Digital|Design|Data|Operating|Operations?|Financial|Sales|Business|Administrative|Analytics|Brand(ing)?|Information|Investment|Learning|Petty|People|Customer|Communications?|Creative|Support|Commercial|Procurement|Privacy|Project|Research|Risk|Strategy|Sales|Security|Visionary|Marketing|Innovation</token>
        <token regexp="yes">Officers?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <!-- LATIN PHRASES -->

    <rule name="sapere aude" id="SAPERE_AUDE">
        <pattern>
            <token>sapere</token>
            <token>aude</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="cui bono" id="CUI_BONO">
        <pattern>
            <token>cui</token>
            <token>bono</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="do ut des" id="DO_UT_DES">
        <pattern>
            <token>do</token>
            <token>ut</token>
            <token>des</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="quid pro quo" id="QUID_PRO_QUO">
        <pattern>
            <token>quid</token>
            <token>pro</token>
            <token>quo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="coram publico" id="CORAM_PUBLICO">
        <pattern>
            <token>coram</token>
            <token>publico</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="nomen est omen" id="NOMEN_EST">
        <pattern>
            <token>nomen</token>
            <token case_sensitive="yes">est</token>
            <token case_sensitive="yes">omen</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="habeas corpus" id="HABEAS_CORPUS">
        <pattern>
            <token>habeas</token>
            <token>corpus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="habemus Papam" id="HABEMUS_PAPAM">
        <pattern>
            <token>habemus</token>
            <token>Papam</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="et al." id="ET_AL">
        <pattern>
            <token>et</token>
            <token>al</token>
            <token>.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="rigor mortis" id="RIGOR_MORTIS">
        <pattern>
            <token>rigor</token>
            <token>mortis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="carpe diem" id="CARPE_DIEM">
        <pattern>
            <token>carpe</token>
            <token>diem</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="tabula rasa" id="TABULA_RASA">
        <pattern>
            <token>tabula</token>
            <token>rasa</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="vox populi" id="VOX_POPULI">
        <pattern>
            <token>vox</token>
            <token>populi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="coitus interruptus" id="COITUS_INTERRUPTUS">
        <pattern>
            <token>coitus</token>
            <token>interruptus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Delirium tremens" id="DELIRIUM_TREMENS">
        <pattern case_sensitive="yes">
            <token>Delirium</token>
            <token>tremens</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ius primae noctis" id="IUS_PRIMAE_NOCTIS">
        <pattern>
            <token>ius</token>
            <token>primae</token>
            <token>noctis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="argumentum ad ..." id="ARGUMENTUM_AD">
        <pattern>
            <token>argumentum</token>
            <token>ad</token>
            <token regexp="yes">antiquitatem|misericordiam|passiones|hominem|veritatem|personam|populum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="similia similibus curantur" id="SIMILIA_SIMILIBUS">
        <pattern>
            <token>similia</token>
            <token>similibus</token>
            <token>curantur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="tu quoque" id="TU_QUOQUE">
        <pattern>
            <token>tu</token>
            <token>quoque</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="homo homini lupus" id="HOMO_HOMINI_LUPUS">
        <pattern>
            <token>homo</token>
            <token>homini</token>
            <token>lupus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ultra posse nemo obligatur" id="ULTRA_POSSE">
        <pattern>
            <token>ultra</token>
            <token>posse</token>
            <token>nemo</token>
            <token>obligatur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="corpus delicti" id="CORPUS_DELICTI">
        <pattern>
            <token>corpus</token>
            <token>delicti</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Opus Dei" id="OPUS_DEI">
        <pattern case_sensitive="yes">
            <token>Opus</token>
            <token>Dei</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alma Mater" id="ALMA_MATER">
        <pattern case_sensitive="yes">
            <token>Alma</token>
            <token>Mater</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="homo faber" id="HOMO_FABER">
        <pattern case_sensitive="yes">
            <token>Homo</token>
            <token regexp="yes">erectus|faber|habilis|ludens|neanderthalensis|novus|oeconomicus|oecologicus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="lege artis" id="LEGE_ARTIS">
        <pattern>
            <token>lege</token>
            <token>artis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="summa summarum" id="SUMMARUM">
        <pattern>
            <token>summa</token>
            <token>summarum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="modus operandi" id="MODUS_OPERANDI">
        <pattern>
            <token>modus</token>
            <token>operandi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ars vivendi" id="ARS_VIVENDI">
        <pattern>
            <token>ars</token>
            <token>vivendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pars pro toto" id="PRO_TOTO">
        <pattern>
            <token>pars</token>
            <token>pro</token>
            <token>toto</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="da capo" id="DA_CAPO">
        <pattern>
            <token>da</token>
            <token>capo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ex oriente lux" id="EX_ORIENTE_LUX">
        <pattern>
            <token>ex</token>
            <token>oriente</token>
            <token>lux</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sit venia verbo" id="VENIA_VERBO">
        <pattern>
            <token>sit</token>
            <token>venia</token>
            <token>verbo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="mutatis mutandis" id="MUTATIS_MUTANDIS">
        <pattern>
            <token>mutatis</token>
            <token>mutandis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in dubio pro reo" id="IN_DUBIO">
        <pattern>
            <token>in</token>
            <token>dubio</token>
            <token>pro</token>
            <token>reo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="cum/sine/ex tempore" id="CUM_TEMPORE">
        <pattern>
            <token regexp="yes">cum|sine|ex</token>
            <token>tempore</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pax/dominus vobiscum" id="VOBISCUM">
        <pattern>
            <token regexp="yes">pax|dominus</token>
            <token>vobiscum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sensu stricto/lato" id="SENSU_LATO">
        <pattern>
            <token>sensu</token>
            <token regexp="yes">lato|stricto</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in praesentia" id="IN_PRAESENTIA">
        <pattern>
            <token>in</token>
            <token regexp="yes" case_sensitive="yes">(ab|prae)sentia|memoriam|effectu</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="nolens volens" id="NOLENS_VOLENS">
        <pattern>
            <token>nolens</token>
            <token>volens</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="principiis obsta" id="PRINCIPIIS_OBSTA">
        <pattern>
            <token>principiis</token>
            <token>obsta</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pro domo" id="PRODOMO">
        <pattern>
            <token>pro</token>
            <token>domo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="opus magnum" id="OPUS_MAGNUM">
        <pattern>
            <token>opus</token>
            <token>magnum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in vino veritas" id="VINO_VERITAS">
        <pattern>
            <token>in</token>
            <token>vino</token>
            <token>veritas</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="bona fide" id="BONA_FIDE">
        <pattern>
            <token>bona</token>
            <token>fide</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ex nihilo" id="EX_NIHILO">
        <pattern>
            <token>ex</token>
            <token regexp="yes">aequo|eventu|officio|nihilo|nunc|tunc|voto</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="suum cuique" id="SUUM_CUIQUE">
        <pattern>
            <token>suum</token>
            <token>cuique</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Urbi et orbi" id="URBI_ORBI">
        <pattern>
            <token>Urbi</token>
            <token>et</token>
            <token>orbi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Spiritus Rector" id="SPIRITUS_RECTOR">
        <pattern>
            <token>Spiritus</token>
            <token>Rector</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Terra incognita" id="TERRA_INCOGNITA">
        <pattern>
            <token>terra</token>
            <token regexp="yes">incognita|nova|preta</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sine ira et studio" id="SINE_IRA">
        <pattern>
            <token>sine</token>
            <token>ira</token>
            <token>et</token>
            <token>studio</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="non sequitur" id="NON_SEQUITUR">
        <pattern>
            <token>non</token>
            <token>sequitur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="reductio ad absurdum" id="REDUCTIO_AD_ABSURDUM">
        <pattern>
            <token>reductio</token>
            <token>ad</token>
            <token>absurdum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="conditio sine qua non" id="CONDITIO_SINE_QUA_NON">
        <pattern>
            <token>conditio</token>
            <token>sine</token>
            <token>qua</token>
            <token>non</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="contradictio in adiecto" id="CONTRADICTIO_IN_ADIECTO">
        <pattern>
            <token>contradictio</token>
            <token>in</token>
            <token>adiecto</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="tertium non datur" id="TERTIUM_NON_DATUR">
        <pattern>
            <token>tertium</token>
            <token>non</token>
            <token>datur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="requiescat in pace" id="RIP">
        <pattern>
            <token>requiescat</token>
            <token>in</token>
            <token>pace</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in statu nascendi" id="IN_STATU_NASCENDI">
        <pattern>
            <token>in</token>
            <token>statu</token>
            <token>nascendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="stante pede" id="STANTE_PEDE">
        <pattern>
            <token>stante</token>
            <token>pede</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="honoris causa" id="HC">
        <pattern>
            <token>honoris</token>
            <token>causa</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in situ" id="IN_SITU">
        <pattern>
            <token regexp="yes">in|ex</token>
            <token>situ</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="noch und nöcher" id="NOCH_UND_NOECHER">
        <pattern>
            <token>noch</token>
            <token>und</token>
            <token>nöcher</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Air Force" id="AIR_FORCE">
        <pattern>
            <token>Air</token>
            <token regexp="yes">F(or|ran)ce|Berlin</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Air China (Air kein SUB)" id="AIR_CHINA">
        <pattern>
            <marker>
                <token case_sensitive="yes">Air</token>
            </marker>
            <token postag="SUB.*|UNKNOWN|EIG.*" postag_regexp="yes" />
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule name="Air Force One" id="AIR_FORCE_ONE">
        <pattern case_sensitive="yes">
            <token>Air</token>
            <token>Force</token>
            <token>One</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="In- und Ausland" id="IN_UND_AUSLAND">
        <pattern>
            <token>In-</token>
            <token regexp='yes' case_sensitive="yes">und|oder|&amp;|\/|beziehungsweise|sowie|noch|\+|plus|bzw</token>
            <token min="0">.</token>
            <token regexp="yes" case_sensitive="yes">Ausland|außerhalb</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Master- und Bachelorarbeit" id="MASTER_UND_BACHELORARBEIT">
        <pattern>
            <marker>
                <token regexp="yes">(Master|Bachelor)-</token>
            </marker>
            <token regexp='yes' case_sensitive="yes">und|oder|&amp;|\/|beziehungsweise|bzw|sowie|noch|\+|plus</token>
            <token min="0">.</token>
            <token regexp="yes">(Master|Bachelor).+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in- und ausländisch" id="IN_UND_AUSLAENDISCH">
        <pattern>
            <token>in-</token>
            <token regexp='yes' case_sensitive="yes">und|oder|&amp;|\/|beziehungsweise|sowie|noch|\+|plus|bzw</token>
            <token min="0">.</token>
            <token regexp='yes'>ausländisch(e[mnrs]?)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="an- und abgewöhnen" id="AN_UND_ABGEWOEHNEN">
        <pattern>
            <marker>
                <token>an-</token>
            </marker>
            <token regexp='yes'>und|oder|&amp;|\/|beziehungsweise|sowie|noch|\+|plus|bzw</token>
            <token min="0">.</token>
            <token regexp='yes'>ab.+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Memento mori" id="MEMENTO_MORI">
        <pattern>
            <token>Memento</token>
            <token>mori</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ad hoc" id="AD_HOC">
        <pattern>
            <token>ad</token>
            <token regexp='yes'>ho(c|minem)|infinitum|libitum|nauseam</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="salva veritate" id="SALVA_VERITATE">
        <pattern>
            <token>salva</token>
            <token>veritate</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ab ovo" id="AB_OVO">
        <pattern>
            <token>ab</token>
            <token>ovo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Persona non grata" id="PERSONA_NON_GRATA">
        <pattern>
            <token>Persona</token>
            <token min="0">non</token>
            <token regexp="yes">(in)?grata</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Enfant terrible" id="ENFANT_TERRIBLE">
        <pattern>
            <token>Enfant</token>
            <token>terrible</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fair Play" id="FAIR_PLAY">
        <!-- http://www.korrekturen.de/wortliste/fair_play.shtml -->
        <pattern case_sensitive="yes">
            <token>Fair</token>
            <token regexp="yes">Play|Trade</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="University of" id="UNIVERSITY_OF">
        <pattern case_sensitive="yes">
            <token>University</token>
            <token>of</token>
            <token regexp="yes">[A-Z][a-z]+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Journal of" id="JOURNAL_OF">
        <pattern case_sensitive="yes">
            <token>Journal</token>
            <token>of</token>
            <token regexp="yes">[A-Z][a-z]+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Yad Vashem" id="YAD_VASHEM">
        <pattern>
            <token>Yad</token>
            <token>Vashem</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="El Niño" id="EL_NINO">
        <pattern>
            <token>El</token>
            <token regexp="yes">Niño|Salvador|Paso</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Reih und Glied" id="REIH_UND_GLIED">
        <pattern>
            <token>Reih</token>
            <token>und</token>
            <token>Glied</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Magna cum laude" id="MAGNA_CUM_LAUDE">
        <pattern>
            <token regexp="yes" min="0">magna|summa</token>
            <token>cum</token>
            <token>laude</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in medias res" id="IN_MEDIAS_RES">
        <pattern>
            <token>in</token>
            <token>medias</token>
            <token>res</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="conditio humana" id="CONDITIO_HUMANA">
        <pattern>
            <token>conditio</token>
            <token>humana</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Facultas Docendi" id="FACULTAS_DOCENDI">
        <pattern>
            <token>Facultas</token>
            <token>Docendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Venia Legendi" id="VENIA_LEGENDI">
        <pattern>
            <token>Venia</token>
            <token>Legendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sui generis" id="SUI_GENERIS">
        <pattern>
            <token>sui</token>
            <token>generis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ceteris paribus" id="CETERIS_PARIBUS">
        <pattern>
            <token>ceteris</token>
            <token>paribus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pacta" id="PACTA_SUNT_SERVANDA">
        <pattern>
            <token>pacta</token>
            <token>sunt</token>
            <token>servanda</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pater familias" id="PATER_FAMILIAS">
        <pattern>
            <token>pater</token>
            <token>familias</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="High" id="HIGH">
        <pattern case_sensitive="yes">
            <token>High</token>
            <token regexp='yes'>Noon|Potential|Society</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Grand Canyon" id="GRAND_CANYON">
        <pattern case_sensitive="yes">
            <token>Grand</token>
            <token regexp='yes'>Canyons?|Jury|Slams?|Hyatt|Prix|Cru|Marnier|Fleet|Lit</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="die Grand Jury" id="GRAND_JURY">
        <pattern case_sensitive="yes">
            <token regexp="yes">[dD]ie</token>
            <token>Grand</token>
            <token>Jury</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="horribile dictu" id="HORRIBILE_DICTU">
        <pattern>
            <token>horribile</token>
            <token>dictu</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Diabetes mellitus" id="DIABETES_MELLITUS">
        <pattern>
            <token>Diabetes</token>
            <token regexp="yes">mellitus|renalis|insipidus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Javaanse Jongens" id="JAVAANSE_JONGENS">
        <pattern case_sensitive="yes">
            <token>Javaanse</token>
            <token>Jongens</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Böhse Onkelz" id="BOEHSE_ONKELZ">
        <pattern case_sensitive="yes">
            <token regexp="yes">Böhsen?</token>
            <token>Onkelz</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Potz Blitz" id="POTZ_BLITZ">
        <pattern>
            <token>potz</token>
            <token regexp="yes">Blitz|Blut|Donner(wetter)?|Marter|Teufel</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="dolce vita" id="DOLCE_VITA">
        <pattern>
            <token>dolce</token>
            <token>vita</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Grana Padano" id="GRANA_PADANO">
        <pattern case_sensitive="yes">
            <token>Grana</token>
            <token>Padano</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="dolce far niente" id="DOLCE_FAR_NIENTE">
        <pattern>
            <token>dolce</token>
            <token>far</token>
            <token>niente</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Wall Street" id="WALL_STREET">
        <pattern>
            <token regexp="yes">Wall|Downing|Baker</token>
            <token>Street</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Trafalgar Square" id="TRAFALGAR_SQUARE">
        <pattern case_sensitive="yes">
            <token regexp="yes">Madison|Trafalgar</token>
            <token>Square</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fifth Avenue" id="FIFTH_AVENUE">
        <pattern case_sensitive="yes">
            <token regexp="yes">Fifth|[4-9]th</token>
            <token>Avenue</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="on the rocks" id="ON_THE_ROCKS">
        <pattern>
            <token>on</token>
            <token>the</token>
            <token>rocks</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Cuba Libre" id="CUBA_LIBRE">
        <pattern case_sensitive="yes">
            <token>Cuba</token>
            <token>Libre</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Tequila Sunrise" id="TEQUILA_SUNRISE">
        <pattern case_sensitive="yes">
            <token>Tequila</token>
            <token>Sunrise</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Gin Tonic" id="GIN_TONIC">
        <pattern case_sensitive="yes">
            <token>Gin</token>
            <token regexp="yes" min="0">and|&amp;</token>
            <token>Tonic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Bloody Mary" id="BLOODY_MARY">
        <pattern case_sensitive="yes">
            <token>Bloody</token>
            <token>Mary</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="American Ginger Ale" id="AMERICAN_GINGER_ALE">
    <!-- Produktname von Schweppes, sonst ist lt. Duden Ginger-Ale richtig -->
        <pattern case_sensitive="yes">
            <token>American</token>
            <token>Ginger</token>
            <token>Ale</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule name="American Dream" id="AMERICAN_DREAM">
        <pattern case_sensitive="yes">
            <token>American</token>
            <token regexp="yes">Airlines|Dreams?|Express|Football|Horror|Dad|Cookies?|Ways?|Bar</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Financial Times" id="FINANCIAL_TIMES">
        <pattern case_sensitive="yes">
            <token>Financial</token>
            <token regexp="yes">Times|Services?|Engineerings?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Daily" id="DAILY">
        <pattern case_sensitive="yes">
            <token>Daily</token>
            <token regexp="yes">Mail|Telegraphs?|Express|Mirrors?|Talks?|Soaps?|Work</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Electronic" id="ELECTRONIC">
        <pattern case_sensitive="yes">
            <token>Electronic</token>
            <token regexp="yes">Mails?|Books?|Cards?|Drums?|Bankings?|Cash|Shoppings?|Votings?|Publishings?|Business(es)?|Commerce|Learnings?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="National Geographic" id="NATIONAL_GEOGRAPHIC">
        <pattern case_sensitive="yes">
            <token>National</token>
            <token>Geographic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="per se" id="PER_SE">
        <pattern>
            <token>per</token>
            <token regexp="yes">annum|procura|rectum|saldo|se|pedes</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pour le Mérite" id="POUR_LE_MERITE">
        <pattern>
            <token>Pour</token>
            <token>le</token>
            <token>Mérite</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="virtual" id="VPN">
        <pattern case_sensitive="yes">
            <token>Virtual</token>
            <token>Private</token>
            <token>Network</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <!-- Eigennamen -->
    <rule name="Umberto Eco" id="UMBERTO_ECO">
        <pattern>
            <token>Umberto</token>
            <token regexp="yes">Ecos?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="François Hollande" id="FRANCOIS_HOLLANDE">
        <pattern>
            <token>François</token>
            <token regexp="yes">Hollandes?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Liza Minnelli" id="LIZA_MINNELLI">
        <pattern>
            <token>Liza</token>
            <token regexp="yes">Minnellis?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ho Chi Minh" id="HO_CHI_MINH">
        <pattern case_sensitive="yes">
            <token>Ho</token>
            <token>Chi</token>
            <token>Minh</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Hồ Chí Minh" id="HO_CHI_MINH_SPECIAL">
        <pattern case_sensitive="yes">
            <token>Hồ</token>
            <token>Chí</token>
            <token>Minh</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fra Angelico" id="FRA_ANGELICO">
        <pattern case_sensitive="yes">
            <token>Fra</token>
            <token regexp="yes">Angelicos?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Geert Wilders" id="GEERT_WILDERS">
        <pattern case_sensitive="yes">
            <token>Geert</token>
            <token>Wilders</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Cem Özdemir" id="CEM_OEZDEMIR">
        <pattern case_sensitive="yes">
            <token>Cem</token>
            <token regexp='yes'>Özdemirs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Kellyanne Elizabeth Conway" id="KELLYANNE_CONWAY">
        <pattern case_sensitive="yes">
            <token>Kellyanne</token>
            <token min="0">Elizabeth</token>
            <token regexp='yes'>Conways?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fethullah Gülen" id="GUELEN">
        <pattern case_sensitive="yes">
            <token>Fethullah</token>
            <token regexp='yes'>Gülens?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Bjarne Stroustrup" id="BJARNE_STROUSTRUP">
        <pattern case_sensitive="yes">
            <token>Bjarne</token>
            <token regexp='yes'>Stroustrups?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ringo Starr" id="RINGO_STARR">
        <pattern case_sensitive="yes">
            <token>Ringo</token>
            <token regexp='yes'>Starrs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Justin Bieber" id="JUSTIN_BIEBER">
        <pattern case_sensitive="yes">
            <token>Justin</token>
            <token regexp='yes'>Biebers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Recep Tayyip Erdoğan" id="ERDOGAN">
        <pattern case_sensitive="yes">
            <token>Recep</token>
            <token>Tayyip</token>
            <token regexp='yes'>Erdoğans?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Hillary Clinton" id="HILLARY_CLINTON">
        <pattern case_sensitive="yes">
            <token regexp='yes'>Hillary|Bill</token>
            <token regexp='yes'>Clintons?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Abu" id="ABU_DHABI">
        <pattern case_sensitive="yes">
            <token>Abu</token>
            <token>Dhabi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Great Barrier Reef" id="GREAT_BARRIER_REEF">
        <pattern case_sensitive="yes">
            <token>Great</token>
            <token>Barrier</token>
            <token>Reef</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Rocky Mountains" id="ROCKY_MOUNTAINS">
        <pattern case_sensitive="yes">
            <token>Rocky</token>
            <token>Mountains</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Energie-, Zeit- und Längeneinheiten" id="EINHEITEN">
        <pattern case_sensitive="yes">
            <token regexp="yes">\d+</token>
            <token regexp="yes">[hμnpf][ms]|[MG]?eV<exception>hs</exception></token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="de Beauvoir" id="BEAUVOIR">
        <pattern case_sensitive="yes">
            <token>de</token>
            <token regexp="yes">Beauvoirs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Côte d'Azur" id="COTE_DAZUR">
        <pattern case_sensitive="yes">
            <token>Côte</token>
            <token>d</token>
            <token regexp="yes">['’]</token>
            <token>Azur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alpha Centauri" id="ALPHA_PROXIMA_CENTAURI">
        <pattern case_sensitive="yes">
            <token regexp="yes">Alpha|Proxima</token>
            <token>Centauri</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pearl Harbor" id="PEARL_HARBOR">
        <pattern case_sensitive="yes">
            <token>Pearl</token>
            <token>Harbor</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mark Twain" id="MARK_TWAIN">
        <pattern>
            <token>Mark</token>
            <token regexp="yes">Twains?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Isle of Man" id="ISLE_OF_MAN">
        <pattern case_sensitive="yes">
            <token>Isle</token>
            <token>of</token>
            <token regexp="yes">Man|Wight|Arran|Mull</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Sex and the City" id="SEX_CITY">
        <pattern case_sensitive="yes">
            <token>Sex</token>
            <token>and</token>
            <token>the</token>
            <token>City</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Addams Family" id="ADDAMS_FAMILY">
        <pattern case_sensitive="yes">
            <token>Addams</token>
            <token>Family</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Breaking Bad" id="BREAKING_BAD">
        <pattern case_sensitive="yes">
            <token>Breaking</token>
            <token>Bad</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Star Wars" id="STARWARS">
        <pattern case_sensitive="yes">
            <token>Star</token>
            <token regexp="yes">Wars|Trek</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Google Maps" id="GOOGLE_MAPS">
        <pattern case_sensitive="yes">
            <token>Google</token>
            <token regexp="yes">Ads|Assistant|Docs|Drive|Earth|Groups|Hangouts|Maps|Wallet</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Vienna Capitals" id="VIENNA_CAPITALS">
        <pattern case_sensitive="yes">
            <token>Vienna</token>
            <token>Capitals</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Human Rights Watch" id="HUMAN_RIGHTS_WATCH">
        <pattern case_sensitive="yes">
            <token>Human</token>
            <token>Rights</token>
            <token>Watch</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ruby on Rails" id="RUBY_ON_RAILS">
        <pattern case_sensitive="yes">
            <token>Ruby</token>
            <token>on</token>
            <token>Rails</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="con Carne" id="CON_CARNE">
        <pattern case_sensitive="yes">
            <token>con</token>
            <token>Carne</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Special Olympics" id="SPECIAL_OLYMPICS">
        <pattern case_sensitive="yes">
            <token>Special</token>
            <token regexp="yes">Olympics|Agents?|Effects?|Offers?|Inspectors?|Operations?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Scotland Yard" id="SCOTLAND_YARD">
        <pattern case_sensitive="yes">
            <token>Scotland</token>
            <token>Yard</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Buckingham Palace" id="BUCKINGHAM_PALACE">
        <pattern case_sensitive="yes">
            <token>Buckingham</token>
            <token>Palace</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Parks" id="PARKS">
        <pattern case_sensitive="yes">
            <token regexp="yes">Bletchley|Central|Hyde</token>
            <token>Park</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Transparency International" id="TRANSPARENCY">
        <pattern case_sensitive="yes">
            <token>Transparency</token>
            <token>International</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Aurora" id="AURORA">
        <pattern case_sensitive="yes">
            <token>Aurora</token>
            <token regexp="yes">(bore|austr)alis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Top Ten" id="TOP_TEN">
        <pattern case_sensitive="yes">
            <token>Top</token>
            <token>Ten</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Secret" id="SECRET">
        <pattern case_sensitive="yes">
            <token>Secret</token>
            <token>Service</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mexico" id="MEXICO">
        <pattern case_sensitive="yes">
            <token>New</token>
            <token regexp="yes">Haven|Mexico|Age|Economy</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="LHC" id="LHC">
        <pattern>
            <token>Large</token>
            <token>Hadron</token>
            <token>Collider</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Enola Gay" id="ENOLA_GAY">
        <pattern case_sensitive="yes">
            <token>Enola</token>
            <token>Gay</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Little Boy" id="LITTLE_BOY">
        <pattern case_sensitive="yes">
            <token>Little</token>
            <token regexp="yes">Bighorn|Boy|Italy|John|Rock</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fat Man" id="FAT_MAN">
        <pattern>
            <token>Fat</token>
            <token regexp="yes">Clients?|Mans?|Joes?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Moulin Rouge" id="MOULIN_ROUGE">
      <pattern case_sensitive="yes">
        <token regexp="yes">Baton|Moulin</token>
        <token>Rouge</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Corned Beef" id="CORNED_BEEF">
      <pattern case_sensitive="yes">
        <token>Corned</token>
        <token>Beef</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Belle Epoque" id="BELLE_EPOQUE">
      <pattern case_sensitive="yes">
        <token>Belle</token>
        <token regexp="yes">[EÉ]poque</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Happy End" id="HAPPY_END">
      <pattern case_sensitive="yes">
        <token>Happy</token>
        <token regexp="yes">Ends?|Hours?|Fews?|Meals?|Birthdays?|Weekends?|Slappings?|Days?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Pietra dura" id="PIETRA_DURA">
      <pattern case_sensitive="yes">
        <token>Pietra</token>
        <token>dura</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Tadsch Mahal" id="TADSCH_MAHAL">
      <pattern case_sensitive="yes">
        <token regexp="yes">Ta(dsch|j)</token>
        <token regexp="yes">Mahals?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Royal Society" id="ROYAL_SOCIETY">
      <pattern case_sensitive="yes">
        <token>Royal</token>
        <token regexp="yes">Academy|British|Navy|Society</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Institute of Technology" id="MIT">
      <pattern case_sensitive="yes">
        <token>Institute</token>
        <token>of</token>
        <token regexp="yes">Technology|Research</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="School of" id="SCHOOL_OF">
      <pattern case_sensitive="yes">
        <token>School</token>
        <token>of</token>
        <token regexp="yes">Advanced|Aviation|Law|Medicine</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Doktortitel" id="PHD">
      <pattern case_sensitive="yes">
        <token>Dr</token>
        <token spacebefore="no">.</token>
        <token regexp="yes">iur|med|oec|phil|rer|theol</token>
        <token spacebefore="no">.</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="68ern" id="ZAHL_ERN">
      <pattern case_sensitive="yes">
        <token regexp="yes">\d{2,4}ern?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Mont" id="MONT">
      <pattern case_sensitive="yes">
        <token>Mont</token>
        <token regexp="yes">Blanc|Ventoux|Vully</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Primus" id="PIP">
      <pattern>
        <token>Primus</token>
        <token>inter</token>
        <token>Pares</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Prince" id="PRINCE">
      <pattern case_sensitive="yes">
        <token regexp="yes">Prince(ss)?</token>
        <token>of</token>
        <token>Wales</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Press" id="PRESS">
      <pattern case_sensitive="yes">
        <token>University</token>
        <token>Press</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Hotdog" id="HOTDOG">
      <pattern case_sensitive="yes">
        <token>Hot</token>
        <token>Dog</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="ich stehe kopf" id="KOPFSTEHEN">
      <pattern>
        <token inflected="yes">stehen</token>
        <token case_sensitive="yes">kopf</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Machu Picchu" id="MACHU_PICCHU">
      <pattern case_sensitive="yes">
        <token>Machu</token>
        <token>Picchu</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="-köpfig" id="KOEPFIG">
      <pattern case_sensitive="yes">
        <token regexp="yes">\d+-(&zal_adj_ig;)ig(e[mnsr]?)?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Bachelor/Master of Arts" id="OF_ARTS">
      <pattern case_sensitive="yes">
        <token>of</token>
        <token regexp="yes">Arts|Business|Engineering|Laws|Science</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Low Carb" id="LOW_CARB">
      <pattern case_sensitive="yes">
        <token>Low</token>
        <token>Carb</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Corporate" id="CORPORATE">
      <pattern case_sensitive="yes">
        <token>Corporate</token>
        <token regexp="yes">Designs?|Identit(ies|y)</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Cosa Nostra" id="COSA">
      <pattern case_sensitive="yes">
        <token>Cosa</token>
        <token>Nostra</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Fleur" id="FLEUR">
      <pattern case_sensitive="yes">
        <token>Fleur</token>
        <token>de</token>
        <token>Sel</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Abkürzungen" id="UPPERCASE_ABBREVIATIONS">
      <pattern case_sensitive="yes">
        <token>(</token>
        <token spacebefore="no" regexp="yes">[A-Z]{2,3}</token>
        <token spacebefore="no">)</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="sch (Ohm'sches Gesetz)" id="SCH">
      <pattern case_sensitive="yes">
        <token spacebefore="no" regexp="yes">['´’]</token>
        <token spacebefore="no" regexp="yes">sche[rmns]?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Reit im Winkl" id="REIT_IM_WINKL">
      <pattern case_sensitive="yes">
        <token>Reit</token>
        <token>im</token>
        <token>Winkl</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="à la" id="A_LA">
      <pattern case_sensitive="yes">
        <token>à</token>
        <token>la</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Long Island" id="LONG_ISLAND">
      <pattern case_sensitive="yes">
        <token>Long</token>
        <token regexp="yes">Beach|Island</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Cape Cod" id="CAPE_COD">
      <pattern case_sensitive="yes">
        <token>Cape</token>
        <token regexp="yes">C(anaveral|od|oral)</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Kottbusser" id="KOTTBUSSER">
      <pattern case_sensitive="yes">
        <token>Kottbusser</token>
        <token regexp="yes">Brücke|Damms?|Tors?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Al Kaida" id="AL">
      <pattern case_sensitive="yes">
        <token>Al</token>
        <token regexp="yes">Capones?|Gores?|Jazeeras?|Kaidas?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="hin- und hergerissen" id="HIN_HER">
      <pattern case_sensitive="yes">
        <marker><token regexp="yes">(a[bn]|aus|um|über|unter|auf|hin|nach|vor|zurück)-</token></marker>
          <token postag="KON:.+" postag_regexp="yes"/>
        <token regexp="yes">(a[bn]|aus|um|über|unter|auf|her|hin|nach|vor|weg|zurück)\w+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="hin- und hergerissen" id="HIN_HER_KOMMA">
      <pattern case_sensitive="yes">
        <marker><token regexp="yes">(a[bn]|aus|um|über|unter|auf|hin|nach|vor|zurück)-</token></marker>
        <token>,</token>
        <token regexp="yes">(a[bn]|aus|um|über|unter|auf|her|hin|nach|vor|weg|zurück)[\w-]+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Auf- oder Abwertung" id="HIN_HER_GROSS">
      <pattern case_sensitive="yes">
        <marker><token regexp="yes">(A[bn]|Aus|Um|Über|Unter|Auf|Hin|Nach|Vor|Zurück)-</token></marker>
          <token postag="KON:.+" postag_regexp="yes"/>
        <token regexp="yes">(A[bn]|Aus|Um|Über|Unter|Auf|Her|Hin|Nach|Vor|Weg|Zurück)\w+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Allahu akbar" id="ALLAHU_AKBAR">
      <pattern>
        <token case_sensitive="yes">Allahu</token>
        <token>akbar</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="al dente" id="AL_DENTE">
      <pattern case_sensitive="yes">
        <token>al</token>
        <token regexp="yes">dente|diavolo|fine|pari</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="MANUS" id="MANUS">
      <pattern>
        <token>manus</token>
        <token>manum</token>
        <token>lavat</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Head of XXX" id="HEAD_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Head</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="ARCHITECT" id="ARCHITECT"><!-- common job titles -->
      <pattern case_sensitive="yes">
        <token regexp="yes">Frontend|Backend|Software|Hardware</token>
        <token regexp="yes">Architects?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Director of XXX" id="DIRECTOR_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Director</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Chief of XXX" id="CHIEF_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Chief</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Chief of XXX" id="CHIEF_KEIN_SUB"><!-- common job title -->
      <pattern case_sensitive="yes">
        <marker>
            <token regexp="yes">Chiefs?</token>
        </marker>
        <token>of</token>
      </pattern>
      <disambig action="remove" postag="SUB.*" />
    </rule>
    <rule name="Vice President of XXX" id="VICE_PRESIDENT_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Vice</token>
        <token>President</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="VP of XXX" id="VP_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>VP</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="COURT" id="COURT">
      <pattern case_sensitive="yes">
        <token regexp="yes">Cent(er|re)|Supreme</token>
        <token regexp="yes">Courts?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SOCIAL" id="SOCIAL">
      <pattern case_sensitive="yes">
        <token>Social</token>
        <token regexp="yes">Collaboration|Engineerings?|Learnings?|Networks?|Software|Sponsorings?|Bots?|Media|Costs?|Freezing|Responsibility|Entrepreneurships?|Taggings?|Business|Gamings?|Payments?|Security|Web|Distancings?|Marketings?|Franchisings?|Investments?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="WOODS" id="WOODS"><!-- Bretton/Tiger Woods-->
      <pattern case_sensitive="yes">
          <token postag="UNKNOWN|EIG:.+" postag_regexp="yes"/>
        <token>Woods</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="JEROME" id="JEROME">
      <pattern case_sensitive="yes">
        <token>Jérôme</token>
        <token regexp="yes">Lalandes?|Leroys?|Cahuzacs?|Ferraris?|Bonapartes?|Ferandnez|Bels?|Kerviels?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rulegroup name="CASUAL" id="CASUAL">
        <!-- https://de.wikipedia.org/wiki/Casual -->
        <rule>
            <pattern case_sensitive="yes">
                <token>Casual</token>
                <token regexp="yes">Fridays?|Days?|Games?|Sex|Look</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <!-- https://www.dresscode.de/dresscodes/business-casual/ -->
            <pattern case_sensitive="yes">
                <token>Business</token>
                <token>Casual</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    <rulegroup name="BLACK" id="BLACK">
        <rule>
            <!-- https://www.duden.de/suchen/dudenonline/black -->
            <!-- https://de.wikipedia.org/wiki/Black -->
            <pattern case_sensitive="yes">
                <token>Black</token>
                <token regexp="yes">Fridays?|Mondays?|Thursdays?|Rocks?|Angels?|Box(es)?|Panthers?|Power|Holes?|Tongues?|Mail|Metal|Jack|Sabbaths?|Lives|Site|Lakes?|Paintings?|Forests?|Mirrors?|Butlers?|Honeys?|Edition|Barbies?|Widows?|Tie|Hawk|Krims?|Hats?|Swan</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">Adjutant|Montana|Jack|Jacob|Manhattan|Sirius|Phantom</token>
                <token regexp="yes">Blacks?</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token>Black</token>
                <token regexp="yes">[Aau]nd|&amp;</token>
                <token>White</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    <rule id="HALL_OF_FAME" name="Hall of Fame">
        <pattern case_sensitive="yes">
            <token regexp="yes">Halls?|Walls?</token>
            <token regexp="yes">[Oof]</token>
            <token>Fame</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rulegroup name="BLUE" id="BLUE">
        <rule>
            <pattern case_sensitive="yes">
                <token>Blue</token>
                <token regexp="yes">Origins?|Notes?|Babys?|Movies?|Box(es)?|Chips?|Screens?|Man|Bloods</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    <rule id="FRIDAYS_FOR_FUTURE" name="Fridays for Future">
        <pattern>
            <token case_sensitive="yes" regexp="yes">Fridays|Scientists|Parents</token>
            <token case_sensitive="yes" regexp="yes">[Ff]or</token>
            <token case_sensitive="yes" regexp="yes">Futures?|Hubraums?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="CONNECT" id="CONNECT">
        <pattern case_sensitive="yes">
            <token regexp="yes">Spotify|Staples|Car|OpenI|Conrad|digitec</token>
            <token regexp="yes">Connects?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="WHITE" id="WHITE">
        <pattern case_sensitive="yes">
            <token>White</token>
            <token regexp="yes">House|Collars?|Citys?|Lions?|Supremacy|Islands?|Christmas|Knights?|Noise|Oaks?|Russians?|Labels?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="FULL" id="FULL">
        <pattern case_sensitive="yes">
            <token>Full</token>
            <token regexp="yes">HD|House|Services?|Speed|Dress|Force</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="TECHNICAL" id="TECHNICAL">
        <pattern case_sensitive="yes">
            <token>Technical</token>
            <token regexp="yes">Support|Product|Sergeant</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Let's Encrypt/Dance" id="LETS">
        <pattern case_sensitive="yes">
            <token>Let</token>
            <token regexp="yes">[’']</token>
            <token>s</token>
            <token regexp="yes">Encrypts?|Dances?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="PAID" id="PAID">
        <!-- https://de.wikipedia.org/wiki/Paid_Crowdsourcing -->
        <!-- https://de.wikipedia.org/wiki/Paid_Content -->
        <!-- https://www.duden.de/rechtschreibung/Paid_Content -->
        <pattern case_sensitive="yes">
            <token>Paid</token>
            <token regexp="yes">Content|Crowdsourcing|Services?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="DEAL" id="DEAL">
        <!-- https://de.wikipedia.org/wiki/Green_Deal -->
        <!-- https://www.duden.de/rechtschreibung/New_Deal -->
        <pattern case_sensitive="yes">
            <token regexp="yes">Green|New</token>
            <token min="0">New</token>
            <token>Deal</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="GREEN" id="GREEN">
        <pattern case_sensitive="yes">
            <token>Green</token>
            <token regexp="yes">Bays?|Days?|Lanterns?|Books?|IT|Cards?|Tech</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="CRYSTAL" id="CRYSTAL">
        <pattern case_sensitive="yes">
            <token>Crystal</token>
            <token regexp="yes">Lakes?|Palace|Mountains?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="FRENCH" id="FRENCH">
        <pattern case_sensitive="yes">
            <token>French</token>
            <token regexp="yes">Open|Dressings?|Knickers?|Fries|Montanas?|House</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="DRY" id="DRY">
        <pattern case_sensitive="yes">
            <token>Dry</token>
            <token regexp="yes">Barrels?|Farmings?|Needling|Countys?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SECOND" id="SECOND">
        <pattern case_sensitive="yes">
            <token>Second</token>
            <token regexp="yes">Screens?|Life|Line|Home|Reality|Army</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="CENTER_OF" id="CENTER_OF">
        <pattern><!-- z.B. Center of Automotive Research -->
            <marker>
                <token case_sensitive="yes" regexp="yes">Center|Bank|Institute</token>
                <token regexp="yes" case_sensitive="yes">of|for</token>
            </marker>
            <token regexp="yes">.*[a-z].*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="WHO_S_WHO" id="WHO_S_WHO">
        <!-- https://www.duden.de/rechtschreibung/Who_s_who -->
        <pattern case_sensitive="yes">
            <token>Who</token>
            <token regexp="yes">'|’</token>
            <token>s</token>
            <token>who</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="NEWS" id="NEWS">
        <pattern case_sensitive="yes">
            <token regexp="yes">Breaking|Soft|Fake</token>
            <token>News</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="HUMAN" id="HUMAN">
        <pattern case_sensitive="yes">
            <token>Human</token>
            <token regexp="yes">(Resource|Interface|Interaction|Engineering|Counter|Relation)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="HUMAN_COMPUTER" id="HUMAN_COMPUTER">
        <pattern case_sensitive="yes">
            <token>Human</token>
            <token>Computer</token>
            <token regexp="yes">(Interface|Interaction|Engineering)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="PUBLIC" id="PUBLIC">
        <pattern case_sensitive="yes">
            <token>Public</token>
            <token regexp="yes">(School|Viewing|Relation)s?|Health</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SCHOOL" id="SCHOOL">
        <pattern case_sensitive="yes">
            <token regexp="yes">Business|Grammar|Public|Old|Media|Law|Medical</token>
            <token regexp="yes">Schools?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SLOW" id="SLOW">
        <pattern case_sensitive="yes">
            <token>Slow</token>
            <token regexp="yes">Foods?|Motions?|Cookers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="LONG" id="LONG">
        <pattern case_sensitive="yes">
            <token>Long</token>
            <token regexp="yes">Drinks?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="BRITISH" id="BRITISH">
        <pattern case_sensitive="yes">
            <token>British</token>
            <token regexp="yes">Airways|Columbias?|Army|Empires?|Library|Academy|Museum|Broadcasting</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="DRAGON" id="DRAGON">
        <!-- https://de.wikipedia.org/wiki/Dragon_2 -->
        <!-- https://de.wikipedia.org/wiki/Dragon_Ball -->
        <pattern case_sensitive="yes">
            <token>Dragon</token>
            <token regexp="yes">Balls?|Age|Quests?|\d+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="LETTER" id="LETTER">
        <pattern case_sensitive="yes">
            <token>Letter</token>
            <token>of</token>
            <token regexp="yes">Intents?|Comfort|Credit|Protest</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="ART" id="ART">
        <pattern case_sensitive="yes">
            <token>Art</token>
            <token>of</token>
            <token regexp="yes">Fighting|Anarchy|Balance|War|Belt|Trance|Infinity</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="MIXED" id="MIXED">
        <pattern case_sensitive="yes">
            <token>Mixed</token>
            <token regexp="yes">Zones?|Martial|Ups?|Emotions|Economy|Drinks?|Grills?|Media|Pickles</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="DAY" id="DAY">
        <pattern case_sensitive="yes">
            <token regexp="yes">Boxing|Welcome|Prime|Community</token>
            <token regexp="yes">Days?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="De'Longhi" id="DELONGHI">
        <pattern case_sensitive="yes">
            <token>De</token>
            <token regexp="yes" spacebefore="no">['’]</token>
            <token spacebefore="no">Longhi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rulegroup id="CC" name="cc">
        <!-- https://www.duden.de/rechtschreibung/cc -->
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">cc</token>
                </marker>
                <token min="0">:</token>
                <!-- 
                    cc Peter
                    cc @peter
                -->
                <token postag="EIG:.*|UNKNOWN" postag_regexp="yes" regexp="yes">.*[a-z].*|.*@.+</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <!-- setz mich in cc -->
            <pattern>
                <token>in</token>
                <marker>
                    <token case_sensitive="yes">cc</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <!-- ich hab dich in cc gesetzt -->
            <pattern>
                <marker>
                    <token case_sensitive="yes">cc</token>
                </marker>
                <token inflected="yes">setzen</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    <rule id="CLICK_AND_COLLECT" name="Click and Collect">
        <!-- https://de.wikipedia.org/wiki/Click_and_Collect -->
        <pattern case_sensitive="yes">
            <token>Click</token>
            <token regexp="yes">&amp;|[ua]nd</token>
            <token regexp="yes">Collect|Meet</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="COVID_19" name="Covid-19">
        <!-- doesn't work when listed in spelling.txt -->
        <pattern>
            <token regexp="yes">Covid-19s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="SONN_UND_FEIERTAGEN" name="Sonn- und Feiertagen">
        <pattern>
            <marker>
                <token case_sensitive="yes">Sonn-</token>
            </marker>
            <token regexp="yes">und|oder|bzw|&amp;|\/|sowie</token>
            <token min="0">.</token>
            <token regexp="yes">(Sams|Feier)tag.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="BLIND" name="Poker term"><!-- https://de.wikipedia.org/wiki/Blind_(Poker) -->
        <pattern case_sensitive="yes">
            <token regexp="yes">Big|Small</token>
            <token regexp="yes">Blinds?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="PRODUCTION" name="Lean Production">
        <pattern case_sensitive="yes">
            <token regexp="yes">Lean|Clean</token>
            <token>Production</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="BILLIE" name="Billie Eilish">
        <pattern case_sensitive="yes">
            <token>Billie</token>
            <token regexp="yes">Jeans?|Eilish|Holidays?|Pipers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="AMAZING" name="Amazing Grace">
        <pattern case_sensitive="yes">
            <token>Amazing</token>
            <token regexp="yes">Grace|Spider-Mans?|Stories</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rulegroup name="VON_DER_LEYEN" id="VON_DER_LEYEN">
        <rule>
            <pattern case_sensitive="yes">
                <token postag="SENT_START" />
                <marker>
                    <token>Von</token>
                    <token>der</token>
                    <token regexp="yes">Leyens?</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <token>von</token>
                    <token>der</token>
                    <token regexp="yes">Leyens?</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    
    <rule id="EVERYBODYS_DARLING" name="Ignore spelling of 'Everybody's Darling'">
        <pattern>
            <token>Everybody</token>
            <token spacebefore="no" regexp="yes">['’`´‘]</token>
            <token spacebefore="no">s</token>
            <token>Darling</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="ON_DEMAND" name="Ignore spelling of 'on demand'">
        <pattern>
            <token>on</token>
            <token regexp="yes">demand|air|top|call</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="ON_THE_ROAD" name="Ignore spelling of 'on the road'">
        <pattern>
            <token>on</token>
            <token>the</token>
            <token regexp="yes">road|rocks</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="DOT_HYPHEN" name="ignore spelling of '.-'">
        <!-- ".-" was marked as a spelling mistake -->
        <pattern>
            <token>.</token>
            <token spacebefore="no">-</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="HYPHENS" name="ignore spelling of multiple '-'">
        <pattern>
            <token regexp="yes">[\-]{3,30}</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="ILKAY_GUNDOGAN" name="ignore spelling of multiple 'İlkay Gündoğan'">
        <pattern case_sensitive="yes">
            <token>İlkay</token>
            <token regexp="yes">Gündoğans?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IP_V_6" name="Ignore spelling of 'IPv6'">
        <pattern>
            <token case_sensitive="yes" regexp="yes">IPv[46]</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="GRÜNE_NEUNE" name="Grüne Neune">
        <pattern>
            <token>grüne</token>
            <marker><token case_sensitive="yes">Neune</token></marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="ALLE_NEUNE" name="Alle neune">
        <pattern>
            <token>alle</token>
            <marker><token case_sensitive="yes">neune</token></marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="SCHNICK_SCHNACK_SCHNUCK" name="ignore spelling of 'Schnick, Schnack, Schnuck'">
        <pattern case_sensitive="yes">
            <token>Schnick</token>
            <token min="0">,</token>
            <token>Schnack</token>
            <token min="0">,</token>
            <token>Schnuck</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="DOS_AND_DONTS" name="Dos and Don'ts">
        <pattern case_sensitive="yes">
            <token>Dos</token>
            <token regexp="yes">and|&amp;</token>
            <token>Don</token>
            <token regexp="yes">&apostrophe;</token>
            <token>ts</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rulegroup name="Englische Namen" id="ENGLISH_NAMES">
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">[Tt]he</token>
                <token regexp="yes" min="0">[A-Z].*</token>
                <token regexp="yes">[A-Z].*</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">[A-Z][a-z]+|[A-Z]+</token>
                <token regexp="yes">[Oo]f|[Ff]or|[Bb]y|[Tt]o|[Aa]t</token>
                <token regexp="yes" min="0">[Tt]he|[Mm]y|[Yy]our|[Tt]heir|[Hh]is|[Hh]er|[Oo]ur|[A-Z][a-z]+|[A-Z]+</token>
                <token regexp="yes">[A-Z][a-z]+|[A-Z]+</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">Atlantic|Accepted|Academic|Advanced|Automatic|Automated|Air|Ambient|Authori[sz]ed|Astronomical|Botanical|British|Certified|Decentralized|Electrical|Environmental|Electrified|Financial|United|Active|Electronic|Economic|Scientific|Electric|Federal|Dynamic|Black|White|Blue|Green|Big|Little|World|Travel|Director|Social|My|Deep|Dead|Dark|European|American|Australian|English|Asian|Austrian|Swiss|German|Central|Medical|Custom|Consumer|Energy|Dragon|Child|Technology|Intelligence|Conference|Communication|Freedom|Magic|Direct|Autonomous|Californian?|Climate|Managed|Sponsored|Independent|Success|Technical|Extended|Educational|Deluxe|Public|Safety|Ultimate|Local|Heavy|Diamond|Capital|Industrial|Biomedical|Confidential|Logistic|Critical|Organic|Incorporated|Next|Low|Sunny|Bulk|Virtual|Comfort|Working|Cognitive|Conversational|Convolutional|Speciali[sz]ed|Silent|Physical|Secure|Historical|Hidden|Approved|Diagnostic</token>
                <token postag="UNKNOWN|SUB:.+" postag_regexp="yes" regexp="yes" min="0">[A-Z][a-z]+|[A-Z]+</token>
                <token postag="UNKNOWN|SUB:.+" postag_regexp="yes" regexp="yes">[A-Z][a-z]+|[A-Z]+</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">Atlantic|Accepted|Academic|Advanced|Automatic|Automated|Air|Ambient|Authori[sz]ed|Astronomical|Botanical|British|Certified|Decentralized|Electrical|Environmental|Electrified|Financial|United|Active|Electronic|Economic|Scientific|Electric|Federal|Dynamic|Black|White|Blue|Green|Big|Little|World|Travel|Director|Social|My|Deep|Dead|Dark|European|American|Australian|English|Asian|Austrian|Swiss|German|Central|Medical|Custom|Consumer|Energy|Dragon|Child|Technology|Intelligence|Conference|Communication|Freedom|Magic|Direct|Autonomous|Californian?|Climate|Managed|Sponsored|Independent|Success|Technical|Extended|Educational|Deluxe|Public|Safety|Ultimate|Local|Heavy|Diamond|Capital|Industrial|Biomedical|Confidential|Logistic|Critical|Organic|Incorporated|Next|Low|Sunny|Bulk|Virtual|Comfort|Working|Cognitive|Conversational|Convolutional|Speciali[sz]ed|Silent|Physical|Secure|Historical|Hidden|Approved|Diagnostic</token>
                <token postag="UNKNOWN|SUB:.+" postag_regexp="yes" regexp="yes">[A-Z][a-z]+|[A-Z]+</token>
                <token regexp="yes">and|or|for|of|&amp;|\/</token>
                <token postag="UNKNOWN|SUB:.+" postag_regexp="yes" regexp="yes">[A-Z][a-z]+|[A-Z]+</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <antipattern>
                <token postag="SENT_START" />
                <token postag="UNKNOWN|SUB:.+" postag_regexp="yes" regexp="yes">[A-Z][a-z]+</token>
            </antipattern>
            <pattern case_sensitive="yes">
                <token postag="UNKNOWN|SUB:.+" postag_regexp="yes" regexp="yes">[A-Z][a-z]+|[A-Z]+</token>
                <token postag="UNKNOWN|SUB:.+" postag_regexp="yes" regexp="yes" min="0">[A-Z][a-z]+|[A-Z]+|and|or|for|of|&amp;|\/</token>
                <token regexp="yes">Day|School|Card|One|Room|Black|Green|Blue|White|World|Strategy|Coffee|Kitchen|Society|Council|Advanced|Air|Dark|Health|Desk|Deluxe|Director|Agency|Energy|Care|Connect|Custom|Factory|Buildings?|Consumer|Connectors?|Dragon|Electronics|Technology|Intelligence|Convention|America|Authority|Conference|Culture|University|Corporation|Committee|Commands?|Relations|Communication|Group|Project|Gallery|Cathedral|Foundation|Life|Specialists?|Agents?|Records|Study|Studies|Advisor|Campaigns?|Partnerships?|Squad|Overviews?|Assistants?|Alliance|Pictures?|Journey|Dynamics|Hill|Rights?|Certificates?|Mountains?|Library|Manufacturers?|Commission|Protections?|Economics|Cosmetics|Night|Industries|Marketplace|Console|Contracts?|Institute|Diamond|Europe|Capital|Market|Assurance|Insurance|Logistics|Diagnostics|Villages?|River|Central|Sciences|Centre</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    
    <rule id="ABBREVATIONS_SEPARATED_BY_DOT" name="Abkürzungen mit Punkten">
        <pattern case_sensitive="yes">
            <token regexp="yes">[A-ZÜÄÖ]</token>
            <token spacebefore="no">.</token>
            <token regexp="yes" spacebefore="no">[A-ZÜÄÖ]</token>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rulegroup id="ORDER" name="order">
        <!-- common confusion of 'oder' -->
        <rule><!-- Ich order es / Wenn ich das order -->
            <pattern>
                <token>ich</token>
                <token regexp="yes" min="0">das|diese[sn]|euren|deren|[mds]?einen|den|die|irgendwas|es|sowas</token>
                <marker>
                    <token case_sensitive="yes">order</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule><!-- Bitte order uns ...  -->
            <pattern>
                <token>bitte</token>
                <marker>
                    <token case_sensitive="yes">order</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule><!-- Dann order ich das jetzt -->
            <pattern>
                <token postag="ADV.*" postag_regexp="yes" />
                <marker>
                    <token case_sensitive="yes">order</token>
                </marker>
                <token>ich</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule id="SOG_KEIN_VERB" name="Abkürzung 'sog.'"><!-- abk "sog." -->
        <pattern>
            <marker>
                <token>sog</token>
            </marker>
            <token spacebefore="no">.</token>
            <token regexp="yes" min="0" spacebefore="yes">„|&quot;|“|‹|«</token>
            <token postag="(ADJ|SUB|EIG):.*|UNKNOWN|VER:INF.*" postag_regexp="yes" regexp="yes">.*[a-z].*</token>
        </pattern>
        <disambig action="remove" postag="VER:.+" />
    </rule>

    <rulegroup id="RED_KEIN_VERB" name="'Red' kein Verb"><!-- abk "red." / englische Farbe -->
        <rule>
            <pattern>
                <marker>
                    <token>red</token>
                </marker>
                <token regexp="yes">\.|bulls?|hat|lights?</token>
            </pattern>
            <disambig action="remove" postag="VER:.+" />
        </rule>
        <rule>
            <antipattern>
                <token regexp="yes">ich|bitte|dann</token>
                <token>red</token>
            </antipattern>
            <antipattern>
                <token>red</token>
                <token regexp="yes">ich|nicht</token>
            </antipattern>
            <pattern>
                <token>red</token>
            </pattern>
            <disambig action="remove" postag="VER:.+" />
        </rule>
    </rulegroup>

    <rule id="GUTES_KEIN_SUB" name="'kein/nichts Gutes' kein Substantiv Genitiv">
        <pattern>
            <token regexp="yes">[mksd]?ein|ihr|nichts|(et)?was|irgend(et)?was</token>
            <marker>
                <token case_sensitive="yes" regexp="yes">Gutes|Sinnloses|Wei(ß|ss)es|Festes|Objektives|Subjektives|Unrechtes|Hilfreiches|Wertloses|Kollektives</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="SUB:GEN.*" />
    </rule>

    <rulegroup id="TIME_KEIN_VERB" name="'Time' kein Verb">
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">Time</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*" />
        </rule>
        <rule>
            <pattern>
                <token postag="UNKNOWN" regexp="yes">\p{L}.+</token>
                <marker>
                    <token case_sensitive="yes">time</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*" />
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">time</token>
                </marker>
                <token postag="UNKNOWN" regexp="yes">\p{L}.+</token>
            </pattern>
            <disambig action="remove" postag="VER.*" />
        </rule>
    </rulegroup>

    <rule id="EINEN_TICKEN_KEIN_VERB" name="'Tick' kein Verb">
        <pattern>
            <token regexp="yes">(kl?)?ein|(kl?)?einen</token>
            <marker>
                <token regexp="yes">Tick(en)?</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*" />
    </rule>

    <rule id="GAEBE_KEIN_VERB" name="'gäbe' kein Verb">
        <pattern>
            <token>gang</token>
            <token regexp="yes">und|&amp;</token>
            <marker>
                <token>gäbe</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*" />
    </rule>

    <rule id="LAST_BUT_NOT_LEAST_KEIN_VERB" name="'least' kein Verb">
        <pattern>
            <token>not</token>
            <marker>
                <token>least</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*" />
    </rule>

    <rulegroup id="A_KEIN_PRP" name="'A' keine Präposition in Abkürzungen">
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">A</token>
                </marker>
                <token>.</token>
                <token spacebefore="yes" />
            </pattern>
            <disambig action="remove" postag="PRP.*" />
        </rule>
        <rule>
            <pattern>
                <token>.</token>
                <marker>
                    <token spacebefore="no" case_sensitive="yes">A</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="PRP.*" />
        </rule>
    </rulegroup>

    <rulegroup id="O_KEIN_SUB" name="'O' kein Substantiv in 'O.T.T.O.'">
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">O</token>
                </marker>
                <token>.</token>
                <token spacebefore="no" />
            </pattern>
            <disambig action="remove" postag="SUB.*" />
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">O</token>
                </marker>
                <token>.</token>
                <token regexp="yes" case_sensitive="yes">[A-Z]</token>
            </pattern>
            <disambig action="remove" postag="SUB.*" />
        </rule>
        <rule>
            <pattern>
                <token>.</token>
                <marker>
                    <token spacebefore="no" case_sensitive="yes">O</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="SUB.*" />
        </rule>
    </rulegroup>

    <rule id="ALBERT_KEIN_VERB" name="Name 'Albert'">
        <pattern>
            <marker>
                <token>Albert</token>
            </marker>
            <token regexp="yes">Einsteins?|Schweitzers?|Speers?|Camus</token>
        </pattern>
        <disambig action="remove" postag="VER:.+" />
    </rule>

    <rulegroup id="GEB_KEIN_VERB" name="Abkürzung 'geb.'"><!-- abk "geb." -->
        <rule>
            <pattern>
                <marker>
                    <token>geb</token>
                </marker>
                <token spacebefore="no">.</token>
            </pattern>
            <disambig action="remove" postag="VER:.+" />
        </rule>
        <rule>
            <antipattern>
                <token skip="2">ich</token>
                <token>geb</token>
            </antipattern>
            <antipattern>
                <token>geb</token>
                <token>ich</token>
            </antipattern>
            <pattern>
                <marker>
                    <token>geb</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER:.+" />
        </rule>
    </rulegroup>

    <rule id="WALT_DISNEY" name="'Walt' kein Verb">
        <pattern>
            <marker>
                <token>walt</token>
            </marker>
            <token postag="EIG:.*|UNKNOWN" postag_regexp="yes" regexp="yes" case_sensitive="yes">[A-Z].*</token>
        </pattern>
        <disambig action="remove" postag="VER:.+" />
    </rule>

    <rule id="OPEL_KADETT" name="'Kadett' kein Substantiv in 'Opel Kadett'">
        <pattern>
            <token>Opel</token>
            <marker>
                <token regexp="yes">Kadetts?</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="FIAT_UNO" name="'Uno' kein Substantiv in 'Fiat Uno'">
        <pattern>
            <token>Fiat</token>
            <marker>
                <token regexp="yes">Unos?</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="PAGE_KEIN_SUB_MAS" name="'Page' kein Substantiv in 'Page View'">
        <pattern>
            <marker>
                <token>Page</token>
            </marker>
            <token regexp="yes">Views?|Impressions?</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>
    <rule id="CHAMPIONS_KEIN_SUB" name="'Champions' kein Substantiv in 'Champions League'">
        <pattern>
            <marker>
                <token>Champions</token>
            </marker>
            <token regexp="yes">League.*|Hockey.*</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>
    <rule id="EUROPA_KEIN_SUB" name="'Europa' kein Substantiv in 'Europa League'">
        <!-- Namen: Europa Nations League, Europa League, Europa Conference League -->
        <pattern>
            <marker>
                <token>Europa</token>
            </marker>
            <token regexp="yes">League.*|Conference.*|Nations.*</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>
    <rule id="BLIND_KEIN_ADJ" name="'Blind' kein Substantiv in 'Blind Date'">
        <pattern>
            <marker>
                <token case_sensitive="yes">Blind</token>
            </marker>
            <token regexp="yes">Date.*</token>
        </pattern>
        <disambig action="remove" postag="(ADJ|ZUS).*" />
    </rule>
    <rule id="JOUR_FIXE_KEIN_ADJ" name="'fixe' kein ADJ in 'Jour fixe'">
        <pattern>
            <token case_sensitive="yes">Jour</token>
            <marker>
                <token regexp="yes">fixe?s?</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="(ADJ|VER).*" />
    </rule>

    <rule id="UNION_JACK" name="'Union' kein fem. Substantiv in 'Union Jack'">
        <pattern>
            <marker>
                <token>Union</token>
            </marker>
            <token>Jack</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="UEFA_CUP" name="'Union' kein fem. Substantiv in 'UEFA Cup'">
        <pattern>
            <marker>
                <token regexp="yes">UEFA|FIFA</token>
            </marker>
            <token regexp="yes" case_sensitive="yes">Cups?|Conference|Super|League|World</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="EUROVISION_SONG_CONTEST" name="'Eurovision' kein fem. Substantiv in 'Eurovision Song Context'">
        <pattern>
            <marker>
                <token>Eurovision</token>
            </marker>
            <token>Song</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="GRAND_CANYON_POS" name="'Grand' kein maskulines Substantiv in 'Grand Canyon'">
        <pattern>
            <marker>
                <token>Grand</token>
            </marker>
            <token regexp="yes" case_sensitive="yes">[A-Z].*</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="FREI_KEIN_ZUS" name="'versandkostenfrei' kein 'ZUS'">
        <pattern>
            <token regexp="yes">.+frei</token>
        </pattern>
        <disambig action="remove" postag="ZUS" />
    </rule>

    <rule id="STAR_WARS" name="'Star' kein Substantiv in 'Star Wars'">
        <pattern>
            <marker>
                <token>Star</token>
            </marker>
            <token regexp="yes">Wars|Gates?|Treks?|Games</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="PLANTEN_UN_BLOMEN" name="'Planten' kein Verb in 'Planten un Blomen'">
        <pattern>
            <marker>
                <token>Planten</token>
            </marker>
            <token regexp="yes">und?</token>
            <token regexp="yes">Blomens?</token>
        </pattern>
        <disambig action="remove" postag="VER:.+" />
    </rule>

    <rule id="LIKE_A_PRAYER" name="'Like' kein Substantiv in 'Like a Prayer'">
        <pattern><!-- Like a Prayer (Lied von Madonna)-->
            <marker>
                <token>Like</token>
            </marker>
            <token regexp="yes">an?|the|my|y?our|me</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rule id="TAKE_THAT" name="'TAKE' kein Substantiv in 'Take That'">
        <pattern><!-- -->
            <marker>
                <token>Take</token>
            </marker>
            <token>That</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

<!--    <rule id="IGNORE_SUBDOMAIN_SPELLING" name="Ignore spelling of subdomains">
        <pattern>
            <token regexp="yes">[a-z0-9\-]+</token>
            <token spacebefore="no">.</token>
            <token regexp="yes" spacebefore="no">[a-z0-9\-]+</token>
            <token spacebefore="no">.</token>
            <token regexp="yes" spacebefore="no">org|com|net|de|co|es|fr|nl|be|eu|biz|ru|ai|au|uk|in|ca|gov|edu|info|cn|us|name|ly|ch|at|mx|no|lu|br|jp|se</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>-->

    <rule id="ALOE_VERA" name="Ignore spelling of 'Aloe vera'">
        <pattern case_sensitive="yes">
            <token>Aloe</token>
            <token>vera</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="ID_3" name="ID.3">
        <!-- https://en.wikipedia.org/wiki/Volkswagen_ID.3 -->
        <pattern>
            <marker>
                <token>ID</token>
            </marker>
            <token>.</token>
            <token regexp="yes">[1-8](-[a-zäöüß]+)?</token>
        </pattern>
        <disambig action="remove" postag="SUB:.+" />
    </rule>

    <rulegroup id="IGNORE_SPELLING_OF_ABBREVIATIONS" name="Ignore spelling of some uppercase abbreviations">
        <rule><!-- lowercase word + abbreviation with no vowels -->
            <pattern case_sensitive="yes">
                <token regexp="yes">.*[a-z].*</token>
                <token min="0" regexp="yes">[\)\(,\/]</token>
                <marker>
                    <token regexp="yes">[BCDFGHJKLMNPQRSTVWXZ]{3,6}</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule><!-- abbreviation with no vowels + lowercase word -->
            <pattern case_sensitive="yes">
                <marker>
                    <token regexp="yes">[BCDFGHJKLMNPQRSTVWXZ]{3,6}</token>
                </marker>
                <token min="0" regexp="yes">[\)\(,\/]</token>
                <token regexp="yes">.*[a-z].*</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule id="POWERED_BY_IGNORE_SPELLING" name="powered by">
        <pattern case_sensitive="yes">
            <token regexp="yes">[Pp]owered|POWERED|[Dd]esigned|DESIGNED</token>
            <token regexp="yes">by|BY</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="GEMEIND_EIN" name="Wir gemeinden ein">
        <!-- https://de.wiktionary.org/wiki/eingemeinden -->
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes" skip="1">[Gg]emeinden?</token>
            </marker>
            <token>ein</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rulegroup id="BZW_KONJUNKTION" name="'bzw.' als Konjunktion">
        <!-- "beziehungsweise" is already KON:NEB -->
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">bzw</token>
                    <token spacebefore="no">.</token>
                </marker>
                <token spacebefore="yes" />
            </pattern>
            <disambig action="add">
                <wd pos="KON:NEB"/>
                <wd pos="KON:NEB"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">bzw</token>
                </marker>
                <token spacebefore="yes" />
            </pattern>
            <disambig action="add">
                <wd pos="KON:NEB"/>
            </disambig>
        </rule>
    </rulegroup>

    <rulegroup id="JOINT_VENTURE" name="Joint Venture als Kompositum">
        <rule>
            <pattern>
                <token>joint</token>
                <token>venture</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:SIN:NEU"/>
                <wd pos="SUB:NOM:SIN:NEU"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>joint</token>
                <token>venture</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:SIN:NEU"/>
                <wd pos="SUB:DAT:SIN:NEU"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>joint</token>
                <token>venture</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:SIN:NEU"/>
                <wd pos="SUB:AKK:SIN:NEU"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>joint</token>
                <token>ventures</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:SIN:NEU"/>
                <wd pos="SUB:GEN:SIN:NEU"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>joint</token>
                <token>ventures</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:PLU:NEU"/>
                <wd pos="SUB:NOM:PLU:NEU"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>joint</token>
                <token>ventures</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:PLU:NEU"/>
                <wd pos="SUB:GEN:PLU:NEU"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>joint</token>
                <token>ventures</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:PLU:NEU"/>
                <wd pos="SUB:DAT:PLU:NEU"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>joint</token>
                <token>ventures</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:PLU:NEU"/>
                <wd pos="SUB:AKK:PLU:NEU"/>
            </disambig>
        </rule>
    </rulegroup>


    <rule id="JOINT_CONTROL" name="Joint Control als Kompositum">
        <pattern>
            <marker>
                <token>joint</token>
            </marker>
            <token regexp="yes">control.*</token>
        </pattern>
        <disambig action="remove" postag=".+" />
    </rule>

    <rule id="HOUSE_OF_X" name="'House of XXX' als Kompositum">
        <pattern>
            <marker>
                <token>House</token>
            </marker>
            <token>of</token>
        </pattern>
        <disambig action="remove" postag="SUB.+" />
    </rule>

    <rule id="STAEDTE_MIT_BAD" name="'Bad' kein Substantiv">
        <pattern>
            <marker>
                <token case_sensitive="yes">Bad</token>
            </marker>
            <!-- "Moms" and "Meets" are english words commonly used with "Bad" ("Bad meets evil") -->
            <token case_sensitive="yes" regexp="yes">Kissinger[sn]?|Moms|[mM]eets|(Kreuznach|Soden|Rothenfelde|Urach|Wildungen|Wimpfen|Salzuflen|Teinach-Zavelstein|Vilbel|Vöslau|Saulgau|Tölz|Arolsen|Aibling|Ischl|Oldesloe|Pyrmont|Neuenahr|Bergzabern|Essen|Erlach|Langensalza|Lippspringe|Münstereifel|Ems|Gams|Honnef|Kissingen|Fallingbostel|Reichenhall|Friedrichshall|Rappenau|Cannstatt|Wurzach|[A-ZÄÖÜ].+(heim|berg|burg|hof|hofen|st[ea]dt|stein|bach|see|dorf|tal|hausen|walde|felde?|hafen|ingen))(s|er[ns]?|erin|erinnen|aner[ns]?|anerin|anerinnen)?</token>
        </pattern>
        <disambig action="remove" postag="SUB.+" />
    </rule>

    <rulegroup id="CUSTOMER_JOURNEY" name="Customer Journey als Kompositum">
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journey</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:SIN:FEM"/>
                <wd pos="SUB:NOM:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journey</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:SIN:FEM"/>
                <wd pos="SUB:GEN:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journey</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:SIN:FEM"/>
                <wd pos="SUB:DAT:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journey</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:SIN:FEM"/>
                <wd pos="SUB:AKK:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journeys</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:PLU:FEM"/>
                <wd pos="SUB:NOM:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journeys</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:PLU:FEM"/>
                <wd pos="SUB:GEN:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journeys</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:PLU:FEM"/>
                <wd pos="SUB:DAT:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>journeys</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:PLU:FEM"/>
                <wd pos="SUB:AKK:PLU:FEM"/>
            </disambig>
        </rule>
    </rulegroup>
    
    <rulegroup id="CASE_STUDY" name="Case Study Journey als Kompositum">
        <rule>
            <pattern>
                <token>case</token>
                <token>study</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:SIN:FEM"/>
                <wd pos="SUB:NOM:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>case</token>
                <token>study</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:SIN:FEM"/>
                <wd pos="SUB:GEN:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>case</token>
                <token>study</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:SIN:FEM"/>
                <wd pos="SUB:DAT:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>case</token>
                <token>study</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:SIN:FEM"/>
                <wd pos="SUB:AKK:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>case</token>
                <token regexp="yes">studys|studies</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:PLU:FEM"/>
                <wd pos="SUB:NOM:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>case</token>
                <token regexp="yes">studys|studies</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:PLU:FEM"/>
                <wd pos="SUB:GEN:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>case</token>
                <token regexp="yes">studys|studies</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:PLU:FEM"/>
                <wd pos="SUB:DAT:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>case</token>
                <token regexp="yes">studys|studies</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:PLU:FEM"/>
                <wd pos="SUB:AKK:PLU:FEM"/>
            </disambig>
        </rule>
    </rulegroup>
    
    <rulegroup id="STANDING_OVATIONS" name="Standing Ovations als Kompositum">
        <rule>
            <pattern>
                <marker>
                    <token>Standing</token>
                </marker>
                <token regexp="yes">Ovation|Crop</token>
            </pattern>
            <disambig action="remove" postag="SUB.*" />
        </rule>
        <rule>
            <pattern>
                <token>Standing</token>
                <token>Ovations</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:PLU:FEM"/>
                <wd pos="SUB:NOM:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>Standing</token>
                <token>Ovations</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:PLU:FEM"/>
                <wd pos="SUB:GEN:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>Standing</token>
                <token>Ovations</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:PLU:FEM"/>
                <wd pos="SUB:DAT:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token>Standing</token>
                <token>Ovations</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:PLU:FEM"/>
                <wd pos="SUB:AKK:PLU:FEM"/>
            </disambig>
        </rule>
    </rulegroup>

    <rulegroup id="USER_EXPERIENCE" name="Customer Experience als Kompositum">
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experience</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:SIN:FEM"/>
                <wd pos="SUB:NOM:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experience</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:SIN:FEM"/>
                <wd pos="SUB:GEN:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experience</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:SIN:FEM"/>
                <wd pos="SUB:DAT:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experience</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:SIN:FEM"/>
                <wd pos="SUB:AKK:SIN:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experiences</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:NOM:PLU:FEM"/>
                <wd pos="SUB:NOM:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experiences</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:GEN:PLU:FEM"/>
                <wd pos="SUB:GEN:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experiences</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:DAT:PLU:FEM"/>
                <wd pos="SUB:DAT:PLU:FEM"/>
            </disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">customer|user</token>
                <token>experiences</token>
            </pattern>
            <disambig action="add">
                <wd pos="SUB:AKK:PLU:FEM"/>
                <wd pos="SUB:AKK:PLU:FEM"/>
            </disambig>
        </rule>
    </rulegroup>


    <rule id="EINST_KEIN_VERB" name="'einst' kein Verb">
        <antipattern>
            <token skip="3">du</token>
            <token>einst</token>
        </antipattern>
        <antipattern>
            <token skip="3">einst</token>
            <token>du</token>
        </antipattern>
        <pattern>
            <token>einst</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="LOS_KEIN_NOMEN" name="'Los' kein Nomen">
        <pattern>
            <marker>
                <token>Los</token>
            </marker>
            <token regexp="yes">Angel[oe]s|Zetas|Gatos|Alamos</token>
        </pattern>
        <disambig action="remove" postag="(SUB|VER|ADV|ZUS).*"/>
    </rule>

    <rule id="DAILY_WEEKLY_KEIN_NOMEN" name="'Daily' kein Nomen">
        <pattern>
            <marker>
                <token regexp="yes">Daily|Weekly</token>
            </marker>
            <token postag="SUB.*|UNKNOWN" postag_regexp="yes" />
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>

    <rule id="BIN_KEIN_VERB" name="'bin' kein Verb">
        <pattern>
            <token>
                <exception>ich</exception>
            </token>
            <marker>
                <token>bin</token>
            </marker>
            <token regexp="yes" case_sensitive="yes">Ladens?|Salmans?|Scharifas?|Schamlans?|Abduls?|Dauds?|Mohammeds?|Hafiz|Salims?|Dschawads?</token>
        </pattern>
        <disambig action="remove" postag=".*"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_NUMBER_PERIOD_LETTER" name="ignore '2.a'">
        <pattern>
            <token regexp="yes">\d+</token>
            <marker>
                <token spacebefore="no">.</token>
                <token spacebefore="no" regexp="yes">[a-z]</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_ON_TOUR" name="ignore 'on tour'">
        <pattern>
            <marker>
                <token regexp="yes" case_sensitive="yes">[Oo]n</token>
                <token regexp="yes">[Tt]our</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_AUS_UND_WEITERBILDUNG" name="ignore 'Aus- und Weiterbildung'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(Weiter|Fort|Aus)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Weiter|Fort|Aus)bildung.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_HOL_UND_BRINGDIENST" name="ignore 'Hol- und Bringdienst'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(Hol|Bring)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Hol|Bring).+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_ENT_UND_VERSORGUNG" name="ignore 'Ent- und Versorgung'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(Ent|Ver)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Ent|Ver)sorgung.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_BE_UND_VERARBEITEN" name="ignore 'Be- und Verarbeiten'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">([bB]e|[vV]er)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Be|Ver)arbeit.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_HARD_UND_SOFTWARE" name="ignore 'Hard- und Software'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(Hard|Soft)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Hard|Soft)ware.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_IM_UND_EXPORT" name="ignore 'Im- und Export'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(Ex|Im)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Ex|Im)port.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_AUF_UND_ABWAERTS" name="ignore 'auf- und abwärts'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(ab|auf)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(ab|auf)wärts</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_TAG_UND_NACHTAKTIV" name="ignore 'tag- und dämmerungsaktiv'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(tag|nacht|dämmerungs)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(nacht|tag|dämmerungs).+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_EIN_UND_AUSGANG" name="ignore 'Ein- und Ausgang'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(Aus|Ein)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Aus|Ein).+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_SPELLING_OF_EIN_UND_AUSREISE" name="ignore 'Ein- und Ausreise'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(Aus|Ein|Durch|Weiter)-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus|bzw|beziehungsweise</token>
            <token min="0">.</token>
            <token regexp="yes">(Aus|Ein|Durch|Weiter).+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="IGNORE_MADE_IN_GERMANY" name="ignore 'made in Germany'">
        <pattern case_sensitive="yes">
            <token regexp="yes">[Mm]ade|MADE|[Dd]esigned|DESIGNED</token>
            <token regexp="yes">in|IN</token>
            <token regexp="yes">Europe|EUROPE|Switzerland|SWITZERLAND|Austria|AUSTRIA|Germany|GERMANY|Italy|ITALY|China|CHINA|USA|Thailand|THAILAND|India|INDIA|France|FRANCE</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>


    <rule id="IGNORE_VIRTUE_SIGNALLING" name="ignore 'virtue signalling'">
        <!-- https://de.wikipedia.org/wiki/Virtue_signalling -->
        <pattern>
            <token>virtue</token>
            <token regexp="yes">signall?ing</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rulegroup id="IGNORE_MODEL_NUMBERS" name="ignore 'SX2000'">
        <rule><!-- SX240 -->
            <pattern>
                <token regexp="yes" case_sensitive="yes">[A-Z]{2,6}\d{2,6}</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule><!-- 240SX -->
            <pattern>
                <token regexp="yes" case_sensitive="yes">\d{2,6}[A-Z]{2,6}</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule id="USER_IN" name="'Hautärzt*in' keine Präposition">
        <pattern>
            <token regexp="yes">.*[a-z].*</token>
            <token regexp="yes" spacebefore="no">[*:\/]</token>
            <marker>
                <token spacebefore="no">in</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="PRP.*"/>
    </rule>

    <rule id="USER_INNEN" name="'Hautärzt*innen' keine Adverb">
        <pattern>
            <token regexp="yes" case_sensitive="yes">[A-ZÄÖÜ][a-zäöüß\-]+</token>
            <token regexp="yes" spacebefore="no">[*:\/]</token>
            <marker>
                <token spacebefore="no">innen</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="ADV.*"/>
    </rule>

    <rule id="PROZENT_IGE" name="ignore spelling of '100%ige'">
        <pattern>
            <marker>
                <token regexp="yes" case_sensitive="yes">(\d+)?%ige</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="GPT_THREE" name="ignore spelling of 'GPT-3'">
        <pattern>
            <marker>
                <token regexp="yes" case_sensitive="yes">[A-Z]{2,5}-\d+</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SANKT_KEIN_VERB" name="'Sankt' kein Verb">
        <pattern>
            <marker>
                <token case_sensitive="yes">Sankt</token>
            </marker>
            <token case_sensitive="yes" regexp="yes" postag="UNKNOWN|EIG.*|SUB.*" postag_regexp="yes">[A-Z].+</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="NUETZE_KEIN_VERB" name="'nütze' kein Verb">
        <!-- "Er ist zu nichts nütze"-->
        <pattern>
            <token>zu</token>
            <token postag="ADV.*" postag_regexp="yes" min="0" />
            <token regexp="yes">(irgend)?was|(irgend)?etwas|nix|nichts</token>
            <marker>
                <token case_sensitive="yes" regexp="yes">n[üu]tze</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="NULLTE_KEIN_VERB" name="'nullte' kein Verb">
        <!-- "Das nullte Gesetz"-->
        <pattern>
            <token postag="ART.*|PRO:POS" postag_regexp="yes" />
            <marker>
                <token case_sensitive="yes">nullte</token>
            </marker>
            <token postag="SUB.*" postag_regexp="yes" />
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="FRANZ_KEIN_VERB" name="'franz.' kein Verb">
        <!-- "Auf franz. heißt es Liebe"-->
        <pattern>
            <marker>
                <token case_sensitive="yes">franz</token>
            </marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="UNTER_FERNER_LIEFEN" name="'unter ferner liefen' kein Verb">
        <pattern>
            <token>unter</token>
            <token>ferner</token>
            <marker>
                <token>liefen</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rulegroup id="MAL_KEIN_VERB" name="'mal' kein Verb">
        <rule>
            <antipattern>
                <token skip="1">mal</token>
                <token>ich</token>
            </antipattern>
            <antipattern>
                <token>mal</token>
                <token>und</token>
                <token postag="VER:IMP.*" postag_regexp="yes" />
            </antipattern>
            <pattern>
                <token regexp="yes">schon|zunächst|(vor)?erst|noch|kein</token>
                <marker>
                    <token>mal</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="PKT|SENT_START" postag_regexp="yes" />
                <token min="0">aber</token>
                <token regexp="yes">sage?</token>
                <token min="0">doch</token>
                <marker>
                    <token>mal</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
    </rulegroup>

    <rule id="DE_LAS_KEIN_VERB" name="'de las' kein Verb">
        <pattern>
            <token>de</token>
            <marker>
                <token>las</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="ON_TOUR_KEIN_VERB" name="'on tour' kein Verb">
        <pattern>
            <token>on</token>
            <marker>
                <token>tour</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="VIERTEL_NACH_VOR_KEIN_VERB" name="'viertel nach' kein Verb">
        <antipattern>
            <token>ich</token>
            <token>viertel</token>
        </antipattern>
        <pattern>
            <marker>
                <token>viertel</token>
            </marker>
            <token regexp="yes">nach|vor</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="ZEIT_KEIN_PRP" name="'unizeit' kein PRP">
        <pattern>
            <token regexp="yes">.+zeit</token>
        </pattern>
        <disambig action="remove" postag="PRP.*"/>
    </rule>

    <rule id="WILLIGEN_KEIN_VB" name="'Einkaufswilligen' kein VB">
        <pattern>
            <token regexp="yes">
                .+willigen
                <exception regexp="yes">(ein|be|darein|nachbe)willigen</exception>
            </token>
        </pattern>
        <disambig action="remove" postag="VB.*"/>
    </rule>

    <rulegroup id="HAEUFIGE_NACHNAMEN" name="Häufige Nachnamen, die nicht zur spelling.txt hhinzugefügt werden können">
        <rule>
            <pattern>
                <token postag="EIG.*|UNKNOWN" postag_regexp="yes" case_sensitive="yes" regexp="yes">[A-ZÄÖÜ].*</token>
                <marker>
                    <token regexp="yes" case_sensitive="yes">Haases?|Ungers?|Bischoffs?|Schwaigers?|Baumgarts?|Behrendt?s?|Wüsts?|Pabsts?</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes" case_sensitive="yes">Herr|Frau|Doktor|Professor|Prof|[HFDM]r|Mrs|.*([Pp]räsident|[Mm]inister)</token>
                <token min="0">.</token>
                <marker>
                    <token regexp="yes" case_sensitive="yes">Haases?Ungers?|Bischoffs?|Schwaigers?|Baumgarts?|Behrendt?s?|Wüsts?|Pabsts?</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule id="NEN_IGNORE_SPELLING" name="Ignore spelling of 'nen">
        <pattern>
            <token regexp="yes">[’']</token>
            <marker>
                <token case_sensitive="yes" spacebefore="no" regexp="yes">ne[nm]?</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="LINGUA_FRANCA_IGNORE_SPELLING" name="Ignore spelling of 'Lingua franca">
        <pattern>
            <token case_sensitive="yes">Lingua</token>
            <marker>
                <token regexp="yes">franca|geral</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="INDEFINITPRONOMEN_ALS_SUBJEKT" name="Bei Indefinitpronomen als Subjekt stimmt die finite Verbform und nicht das Partizip">
       <antipattern>
            <token postag="VER.*:PLU.*" postag_regexp="yes"/>
            <token postag="PRO:IND:NOM:PLU.*" postag_regexp="yes"/>
            <token postag="PA2:NOM:PLU.*" postag_regexp="yes"/>
            <token postag="SUB:NOM:PLU.*" postag_regexp="yes"/>
        </antipattern> <!-- Für Fälle wie "Dort finden viele bedrohte Pflanzenarten in den Hochgebirgen einen Lebensraum." -->
        <antipattern>
            <token postag="VER.*:SIN.*" postag_regexp="yes" skip="-1"/>
            <token postag="PRO:IND:NOM:SIN.*" postag_regexp="yes"/>
            <token postag="PA2:NOM:SIN.*" postag_regexp="yes"/>
            <token postag="SUB:NOM:SIN.*" postag_regexp="yes"/>
        </antipattern> <!-- Für Fälle wie "Es zählt jedes studierte Semester in Deutschland" oder "Sie gibt den impliziert definierten Termen keine bestimmte Bedeutung" -->
        <antipattern>
            <token postag="PRO:IND:NOM:PLU.*" postag_regexp="yes"/>
            <token postag="PA2:NOM:PLU.*" postag_regexp="yes"/>
            <token postag="SUB:NOM:PLU.*" postag_regexp="yes"/>
            <token postag="VER.*:PLU.*" postag_regexp="yes"/>
        </antipattern> <!-- Für Fälle wie "Andere verwendete Zeichen sind eingetragene Warenzeichen der jeweiligen Eigentümer." -->
        <antipattern>
            <token postag="PRO:IND:NOM:SIN.*" postag_regexp="yes"/>
            <token postag="PA2:NOM:SIN.*" postag_regexp="yes"/>
            <token postag="SUB:NOM:SIN.*" postag_regexp="yes" skip="-1"/>
            <token postag="VER.*" postag_regexp="yes"/> <!--Für Fälle wie "Wobei standardmäßig jede unterstützte Sprache enthalten ist." oder "Jedes studierte Semester in Deutschland zählt"-->
        </antipattern>
        <antipattern>
            <token postag="PRO:IND:NOM.*" postag_regexp="yes"/>
            <token postag="PA2.*" postag_regexp="yes"/>
            <token postag="SUB:AKK:SIN.*" postag_regexp="yes"/>
            <token postag="VER.*:3:SIN.*" postag_regexp="yes"/> <!--Wenn Verb in 3. Person Singular direkt folgt, spricht das für Partizip: Mancher erlangte Reichtum ist nicht verdient. -->
        </antipattern>
        <antipattern>
            <token postag="PRO:IND:NOM.*" postag_regexp="yes"/>
            <token postag="PA2.*" postag_regexp="yes"/>
            <token postag="SUB:AKK:SIN.*" postag_regexp="yes"/>
            <token postag="PKT" skip="-1"/>
            <token postag="PKT"/>
            <token postag="VER.*:3:SIN.*" postag_regexp="yes"/> <!--Wenn Einschub und direkt danach Verb in der 3. Person Singular folgt, spricht das für Partizip: Mancher erlangte Reichtum, obwohl verdient, ist unredlich. -->
        </antipattern>
        <antipattern>
            <token postag="PRO:IND:NOM.*" postag_regexp="yes"/>
            <token postag="PA2.*" postag_regexp="yes"/>
            <token postag="SUB:AKK:SIN.*" postag_regexp="yes"/>
            <token>und</token>
            <token postag="SUB:AKK:SIN.*" postag_regexp="yes"/>
            <token postag="VER.*:3:SIN.*" postag_regexp="yes"/>  <!--Wenn "und", Substantiv und direkt danach Verb in der 3. Person Singular folgt, spricht das für Partizip: Mancher erlangte Reichtum und Weltruhm ist verdient. -->
        </antipattern>
        <antipattern>
            <token postag="PRO:IND:NOM.*" postag_regexp="yes"/>
            <token postag="PA2.*" postag_regexp="yes"/>
            <token postag="SUB:AKK:SIN.*" postag_regexp="yes"/>
            <token postag="PRP.*" postag_regexp="yes" skip="1"/>
            <token postag="SUB.*" postag_regexp="yes"/>
            <token postag="VER.*:3:SIN.*" postag_regexp="yes"/>  <!--Wenn Präposition, Nomen und direkt danach Verb in der 3. Person Singular folgt, spricht das für Partizip: Manche entwickelte Angst vor großen Spinnen kann damit begründet werden. -->
        </antipattern>
        <antipattern><!-- Du brauchst keine verschwitzten Trucker hier. -->
            <token postag="PRO:IND:NOM.*PLU.*" postag_regexp="yes"/>
            <token postag="PA2.*PLU.*" postag_regexp="yes" />
            <token postag="SUB.*PLU.*" postag_regexp="yes" />
        </antipattern>
        <pattern>
            <token postag="PRO:IND:NOM.*" postag_regexp="yes"/>
            <marker>
                <and>
                    <token postag="PA2.*" postag_regexp="yes"/>
                    <token postag="VER:3:.*:PRT.*" postag_regexp="yes"/>
                </and>
            </marker>
            <token postag="SUB:AKK:SIN.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="remove" postag="PA2:.*"/>
        <example type="untouched">In Bosnien und Herzegowina finden viele bedrohte Pflanzenarten in den Hochgebirgen einen Lebensraum.</example>
        <example type="untouched">Es waren viele begeisterte Anhänger im Stadion.</example>
        <example type="untouched">Es zählt jedes studierte Semester in Deutschland.</example>
        <example type="untouched">Andere verwendete Zeichen sind eingetragene Warenzeichen der jeweiligen Eigentümer.</example><!--neu-->
        <example type="untouched">Wobei standardmäßig jede unterstützte Sprache enthalten ist.</example>
        <example type="untouched">Jedes studierte Semester in Deutschland zählt.</example>
        <example type="untouched">Du brauchst keine verschwitzten Trucker hier.</example>
        <example type="untouched">Mancher erlangte Reichtum ist nicht verdient.</example>
        <example type="untouched">Mancher erlangte Reichtum, erklärt er, sei nicht verdient.</example>
        <example type="untouched">Mancher erlangte Reichtum und Weltruhm kommt nicht von ungefähr.</example>
        <example type="untouched">Manche entwickelte Angst vor großen Spinnen kann damit begründet werden.</example>
    </rule>

    <rule id="DANK_KEIN_VERB" name="'dank' kein Verb">
        <antipattern>
            <token regexp="yes">ich|bitte|dann</token>
            <token>dank</token>
        </antipattern>
        <antipattern>
            <token>dank</token>
            <token>ich</token>
        </antipattern>
        <pattern>
            <token>dank</token>
        </pattern>
        <disambig action="remove" postag="VER:1.*"/>
    </rule>

    <rulegroup id="GAR_KEIN_VERB" name="'gar' kein Verb">
        <antipattern>
            <token regexp="yes">ich|bitte|dann</token>
            <token>gar</token>
        </antipattern>
        <antipattern>
            <token>gar</token>
            <token>ich</token>
        </antipattern>
        <antipattern>
            <token postag="SENT_START" />
            <token>gar</token>
        </antipattern>
        <antipattern>
            <token postag="VER:IMP.*" postag_regexp="yes" />
            <token regexp="yes">und|oder|&amp;|sowie|/</token>
            <token>gar</token>
        </antipattern>
        <antipattern>
            <token>ich</token>
            <token postag="VER:1:SIN.*" postag_regexp="yes" />
            <token regexp="yes">und|oder|&amp;|sowie|/|,</token>
            <token>gar</token>
        </antipattern>
        <rule>
            <pattern>
                <token>gar</token>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token>gar</token>
                </marker>
                <token regexp="yes" case_sensitive="yes">nichts?|nix|kein[se]?</token>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
    </rulegroup>

    <rule id="WIDER_KEIN_VERB" name="'wider' kein Verb">
        <antipattern>
            <token regexp="yes">ich|bitte|dann</token>
            <token>wider</token>
        </antipattern>
        <antipattern>
            <token>wider</token>
            <token>ich</token>
        </antipattern>
        <antipattern>
            <token postag="SENT_START" />
            <token>wider</token>
        </antipattern>
        <pattern>
            <token>wider</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="SCHNELL_KEIN_VERB" name="'schnell' kein Verb">
        <antipattern>
            <token>ich</token>
            <token>schnell</token>
        </antipattern>
        <antipattern>
            <token>schnell</token>
            <token>ich</token>
        </antipattern>
        <pattern>
            <token>schnell</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="BLEU_KEIN_VERB" name="'bleu' kein Verb">
        <pattern>
            <token>Cordon</token>
            <marker>
                <token>bleu</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <!-- TODO: (ohne meine neue ..., durch eine alte ...)-->
    <!-- <rulegroup id="EINE_ARTIKEL" name="eine/meine als Artikel">
        <rule>
            <pattern>
                <token postag="VER.*|SENT_START|KON:NEB" postag_regexp="yes" />
                <marker>
                    <token regexp="yes" case_sensitive="yes">m?eine</token>
                </marker>
                <token postag="ADJ:.*:FEM.*" postag_regexp="yes" />
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="VER.*|SENT_START|KON:NEB" postag_regexp="yes" />
                <marker>
                    <token regexp="yes" case_sensitive="yes">m?eine</token>
                </marker>
                <token postag="UNKNOWN" regexp="yes" case_sensitive="yes">[a-zäöüß]+e</token>
                <token postag="SUB:.*:FEM.*" postag_regexp="yes" />
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="VER.*|SENT_START|KON:NEB" postag_regexp="yes" />
                <marker>
                    <token regexp="yes" case_sensitive="yes">m?ein</token>
                </marker>
                <token postag="ADJ:.*:NEU.*" postag_regexp="yes" />
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="VER.*|SENT_START|KON:NEB" postag_regexp="yes" />
                <marker>
                    <token regexp="yes" case_sensitive="yes">m?ein</token>
                </marker>
                <token postag="UNKNOWN" regexp="yes" case_sensitive="yes">[a-zäöüß]+es</token>
                <token postag="SUB:.*:NEU.*" postag_regexp="yes" />
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="VER.*|SENT_START|KON:NEB" postag_regexp="yes" />
                <marker>
                    <token regexp="yes" case_sensitive="yes">m?einen</token>
                </marker>
                <token postag="ADJ:.*:MAS.*" postag_regexp="yes" />
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="VER.*|SENT_START|KON:NEB" postag_regexp="yes" />
                <marker>
                    <token regexp="yes" case_sensitive="yes">m?einen</token>
                </marker>
                <token postag="UNKNOWN" regexp="yes" case_sensitive="yes">[a-zäöüß]+en</token>
                <token postag="SUB:.*:MAS.*" postag_regexp="yes" />
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
    </rulegroup> -->

    <rulegroup id="AB_UND_ZUNEHMEN" name="ab- und zunehmen">
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes" regexp="yes">[Aa]b-</token>
                </marker>
                <token regexp="yes">noch|oder|und|&amp;|\/|sowie|\+|beziehungsweise|bzw</token>
                <token min="0">.</token>
                <token regexp="yes">zu.+</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes" regexp="yes">[Zz]u-</token>
                </marker>
                <token regexp="yes">noch|oder|und|&amp;|\/|sowie|\+|beziehungsweise|bzw</token>
                <token min="0">.</token>
                <token regexp="yes">ab.+</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule id="SPANISCHSPRECHEND" name="ignore spelling of 'spanischsprechend'">
        <pattern>
            <token regexp="yes">(&sprachadj1;)(sprechend|klingend|rappend|korrigierend|singend|übersetzend|verstehend)(e[srnm]?)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SAT_1" name="ignore spelling of 'Sat.1'">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">Sat|SAT</token>
                <token spacebefore="no">.</token>
            </marker>
            <token spacebefore="no" regexp="yes">1(-.+)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="PROZENTIG" name="ignore spelling of '100%ig'">
        <pattern>
            <token case_sensitive="yes" regexp="yes">\d+?%ig(e[srnm]?)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rulegroup id="NEHME_TEIL" name="'teil' kein Verb">
        <antipattern>
            <token>teil</token>
            <token>ich</token>
        </antipattern>
        <antipattern>
            <token regexp="yes">ich|bitte|dann</token>
            <token>teil</token>
        </antipattern>
        <rule>
            <pattern>
                <token inflected="yes" skip="10">nehmen</token>
                <token regexp="yes" skip="10">a[mn]|daran</token>
                <marker>
                    <token case_sensitive="yes">teil</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token skip="10" regexp="yes">a[mn]</token>
                <token inflected="yes" skip="10">nehmen</token>
                <marker>
                    <token case_sensitive="yes">teil</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
    </rulegroup>
    <rule id="BMW_3ER" name="'3er' ignore spelling">
        <pattern>
            <marker>
                <token regexp="yes" case_sensitive="yes">\d+er[ns]?</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="FÜNFZIG_STE" name="'50ste' ignore spelling">
        <pattern>
            <marker>
                <token regexp="yes">\d+(ste|te)(r|n|s|m)?</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="MP_3" name="'mp3' ignore spelling">
        <pattern>
            <marker>
                <token regexp="yes">mp[34]</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="EXE_DATEI" name="ignore spelling of '.exe-Datei'">
        <pattern>
            <token>.</token>
            <token spacebefore="no" regexp="yes" case_sensitive="yes">(&filename_extensions;)-(Erweiterung(en)?|Suffixe?|Textdatei(en)?|Datei(en|typs?|formats?|endung(en)?|suffixe?)?|Format(e[sn]?|s)?)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="AUF_UND_AUS" name="ignore spelling 'Auf- und Ausbau'">
        <pattern>
            <marker>
                <token>auf-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus</token>
            <token regexp="yes">(aus|ab).+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="GE_UND_VER" name="ignore spelling 'ge- und verordnet'">
        <pattern>
            <marker>
                <token>ge-</token>
            </marker>
            <token regexp="yes">und|oder|&amp;|\/|sowie|noch|\+|plus</token>
            <token regexp="yes">(ver|ent).+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="NATIONAL_INSTITUTE_OF" name="ignore spelling of 'National Institute'">
        <pattern case_sensitive="yes">
            <token regexp="yes">National|International</token>
            <token regexp="yes">Institutes?</token>
            <token regexp="yes">of|for</token>
            <token regexp="yes">[A-Z].+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="TRADE_KEIN_SUB" name="'Trade' kein Substantiv">
        <pattern>
            <marker>
                <token>Trade</token>
            </marker>
            <token regexp="yes">Republic.*|Union|of</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="CASE_KEIN_SUB" name="'Case' kein Substantiv">
        <pattern>
            <marker>
                <token>Case</token>
            </marker>
            <token regexp="yes">Study.*|Western</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="INNOVATION_KEIN_SUB" name="'Innovation' kein Substantiv">
        <pattern>
            <marker>
                <token>Innovation</token>
            </marker>
            <token regexp="yes">(Lab|Hub|Camp).*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="LAST_KEIN_SUB" name="'Last' kein Substantiv">
        <pattern>
            <marker>
                <token>Last</token>
            </marker>
            <token regexp="yes">Minute.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="GENDER_KEIN_SUB" name="'Gender' kein Substantiv">
        <pattern>
            <marker>
                <token>Gender</token>
            </marker>
            <token regexp="yes">Studies.*</token>
        </pattern>
        <disambig action="remove" postag="(SUB|VER).*"/>
    </rule>
    <rule id="CREDIT_KEIN_SUB" name="'Credit' kein Substantiv">
        <pattern>
            <marker>
                <token>Credit</token>
            </marker>
            <token regexp="yes">Suisse.*|Karma.*|Agricole.*|Sesame.*|Card.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="PREMIER_KEIN_SUB" name="'Premier' kein Substantiv"><!-- Premier League (Sportliga) -->
        <pattern>
            <marker>
                <token>Premier</token>
            </marker>
            <token regexp="yes">League.*|Academy.*|Classics</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="SUPER_KEIN_SUB" name="'Super' kein Substantiv"><!-- Super League (Sportliga) -->
        <pattern>
            <marker>
                <token>Super</token>
            </marker>
            <token regexp="yes">League.*|RTL.*|Audio.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="CALL_KEIN_SUB" name="'Call' kein Substantiv"><!-- Call of Duty (Computerspiel) -->
        <pattern>
            <marker>
                <token>Call</token>
            </marker>
            <token regexp="yes">of|me|my</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="FIFA_KEIN_SUB" name="'Fifa' kein Substantiv"><!-- FIFA Federations Cup  -->
        <pattern>
            <marker>
                <token regexp="yes">FIFA|UEFA</token>
            </marker>
            <token regexp="yes">Conf.*|Fed.*|Nations.*|World.*|Champion.*|Europa.*|Youth.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="JUNIOR_KEIN_SUB" name="'Junior' kein Substantiv"><!-- Junior Suite  -->
        <pattern>
            <marker>
                <token>Junior</token>
            </marker>
            <token regexp="yes">Suites?|Manager(s|in|innen)?|High.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="COOKIE_KEIN_SUB" name="'Cookie' kein Substantiv"><!-- Cookie Policy  -->
        <pattern>
            <marker>
                <token>Cookie</token>
            </marker>
            <token regexp="yes">Policy.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="COCKTEIL_KEIN_SUB" name="'Junior' kein Substantiv"><!-- Die Cocktail Happy Hour  -->
        <pattern>
            <marker>
                <token>Cocktail</token>
            </marker>
            <token regexp="yes">Happy.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="BALANCE_KEIN_SUB" name="'Balance' kein Substantiv"><!-- Junior Suite  -->
        <pattern>
            <marker>
                <token>Balance</token>
            </marker>
            <token regexp="yes">Sheets?</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="NORD_KEIN_SUB" name="'Nord' kein Substantiv"><!-- Gas-Pipeline -->
        <pattern>
            <marker>
                <token>Nord</token>
            </marker>
            <token regexp="yes">Stream.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="FUNKE_KEIN_SUB" name="'Funke' kein Substantiv"><!-- Medienunternehmen -->
        <pattern>
            <marker>
                <token>Funke</token>
            </marker>
            <token regexp="yes">Mediengruppe.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="THW_KEIN_SUB" name="'THW' kein Substantiv"><!-- Handballclub -->
        <pattern>
            <marker>
                <token>THW</token>
            </marker>
            <token regexp="yes">Kiel.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="LEOPARD_KEIN_SUB" name="'Leopard' kein Substantiv"><!-- Panzermodell -->
        <pattern>
            <marker>
                <token>Leopard</token>
            </marker>
            <token regexp="yes">1|2|3|.*panzer.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="NOVA_KEIN_SUB" name="'Nova' kein Substantiv"><!-- Rockfestival, Stadt, ... -->
        <pattern>
            <marker>
                <token>Nova</token>
            </marker>
            <token regexp="yes">(Rock|Scotia|Motors).*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="SPECIAL_KEIN_SUB" name="'Special' kein Substantiv">
        <pattern>
            <marker>
                <token>Special</token>
            </marker>
            <token regexp="yes">(Olympic|Agent|Offer|Effect|Air|Operations|Inspector|Boat).*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="TASK_KEIN_SUB" name="'Task' kein Substantiv">
        <pattern>
            <marker>
                <token>Task</token>
            </marker>
            <token regexp="yes">Force.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*MAS.*"/>
    </rule>
    <rule id="INTERNET_EXPLORER" name="'Internet' kein Substantiv">
        <pattern>
            <marker>
                <token>Internet</token>
            </marker>
            <token regexp="yes">Explorer.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*NEU.*"/>
    </rule>
    <rule id="BUSINESS_SCHOOL" name="'Internet' kein Substantiv">
        <pattern>
            <marker>
                <token>Business</token>
            </marker>
            <token regexp="yes">School.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*NEU.*"/>
    </rule>
    <rule id="SLOT_MACHINE" name="'Slot' kein Substantiv">
        <pattern>
            <marker>
                <token>Slot</token>
            </marker>
            <token regexp="yes">Machine.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*MAS.*"/>
    </rule>
    <rule id="LAKE_KEIN_SUB" name="'Lake' kein Substantiv"><!-- Lake Mead-->
        <pattern>
            <marker>
                <token>Lake</token>
            </marker>
            <token regexp="yes" case_sensitive="yes" postag="UNKNOWN">[A-Z].+</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="SHOOTING_KEIN_SUB" name="'Shooting' kein Substantiv"><!-- Shooting Guard -->
        <pattern>
            <marker>
                <token>Shooting</token>
            </marker>
            <token regexp="yes">Guards.*|Brake.*|Fish.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="GAME_KEIN_SUB" name="'Game' kein Substantiv"><!-- Game of Thrones -->
        <pattern>
            <marker>
                <token>Game</token>
            </marker>
            <token>of</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="GIRO_KEIN_SUB" name="'Giro' kein Substantiv"><!-- Giro d'Italia -->
        <pattern>
            <marker>
                <token>Giro</token>
            </marker>
            <token>d</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="TOP_KEIN_SUB" name="'Top' kein Substantiv"><!-- Top 10 -->
        <pattern>
            <marker>
                <token>Top</token>
            </marker>
            <token regexp="yes">\d+|Three|Five|Ten|Zehn|Fünf|Hundert|Tausend</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="TRACK_KEIN_SUB" name="'Track' kein Substantiv"><!-- Track Pants -->
        <pattern>
            <marker>
                <token regexp="yes">Track|Jump</token>
            </marker>
            <token regexp="yes">Pant.*|Suit.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="USER_KEIN_SUB" name="'User' kein Substantiv"><!-- die User Experience -->
        <pattern>
            <marker>
                <token>User</token>
            </marker>
            <token regexp="yes">Experience.*|Story.*|Agent.*|Datagram.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*MAS.*"/>
    </rule>
    <rule id="CONTENT_KEIN_SUB" name="'Content' kein Substantiv"><!-- die Content Creators -->
        <pattern>
            <marker>
                <token>Content</token>
            </marker>
            <token regexp="yes">Creator.*|Delivery.*|Farm|Collaboration.*|Security.*|Wiki</token>
        </pattern>
        <disambig action="remove" postag="SUB.*MAS.*"/>
    </rule>
    <rule id="TRIPLE_KEIN_SUB" name="'Triple' kein Substantiv"><!-- Triple Entente -->
        <pattern>
            <marker>
                <token>Triple</token>
            </marker>
            <token regexp="yes">Entente.*|Crown.*|9</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="UNION_KEIN_SUB" name="'Union' kein Substantiv">
        <pattern>
            <marker>
                <token>Union</token>
            </marker>
            <token regexp="yes">Investment.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="BUS_KEIN_SUB" name="'Bus' kein Substantiv"><!-- die Bus Ostschweiz -->
        <pattern>
            <marker>
                <token>Bus</token>
            </marker>
            <token regexp="yes">Ostschweiz.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="VON_DER_OSTEN_KEIN_SUB" name="'von der Osten' kein Substantiv"><!-- https://de.wikipedia.org/wiki/Osten_(Adelsgeschlechter) -->
        <pattern>
            <token>von</token>
            <token>der</token>
            <marker>
                <token case_sensitive="yes">Osten</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="VAN_DER_NAME" name="van der Valk">
        <pattern>
            <token>van</token>
            <token regexp="yes">der?</token>
            <marker>
                <token case_sensitive="yes" regexp="yes">[A-Z][a-zäöü\-]+</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rulegroup id="ZEIT_ONLINE" name="'Zeit' kein Sub">
        <rule>
            <pattern>
                <marker>
                    <token>Zeit</token>
                </marker>
                <token case_sensitive="yes">Online</token>
            </pattern>
            <disambig action="remove" postag="SUB.*"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token>Zeit</token>
                </marker>
                <token spacebefore="no">.</token>
                <token spacebefore="no">de</token>
            </pattern>
            <disambig action="remove" postag="SUB.*"/>
        </rule>
    </rulegroup>
    <rule id="BETEILIGUNGS_GMBH" name="häufiger Firmenname mit Fugen-S 'XX Beteiligungs GmbH'">
        <pattern>
            <token postag="EIG.*|SUB.*|UNKNOWN" postag_regexp="yes" regexp="yes">[A-ZÄÖÜ].*</token>
            <marker>
                <token case_sensitive="yes" regexp="yes">Verwaltungs|Beteiligungs</token>
            </marker>
            <token regexp="yes">GmbH|AG|Ltd|UG</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="METAVERSE" name="Metaverse kein Maskulinum">
        <pattern>
            <token regexp="yes">.*metaversen?</token>
        </pattern>
        <disambig action="remove" postag="SUB.*MAS.*"/>
    </rule>
    <rulegroup id="ICH_MAIL" name="Verben erste Person ohne 'e' am Ende">
        <rule>
            <pattern>
                <token>ich</token>
                <marker>
                    <!-- verben, die auch mit einem Imperativ (e.g. helf vs hilf) verwechselt werden könnten -->
                    <token case_sensitive="yes" regexp="yes">helf|ess|fress|tret</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <!-- verben, die auch mit einem Imperativ (e.g. helf vs hilf) verwechselt werden könnten -->
                    <token case_sensitive="yes" regexp="yes">helf|ess|fress|tret</token>
                </marker>
                <token>ich</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">ich|bitte|dann|daher|deswegen</token>
                <token postag="ADV.*" postag_regexp="yes" min="0" />
                <marker>
                    <!-- verben, die großgeschrieben auch ein Substantiv sein könnten oder mit anderen Wörtern verwechselt werden könnten -->
                    <token case_sensitive="yes" regexp="yes">verrat|stimm|kontrollier|betreib|mail|rat|bau|besuch|stream|knutsch|schnall|strick|ruh|futter|zwiebel|gehör|grab|cancel|ras|hinweis|beruf|nerv|zeug|buch|speck</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <!-- verben, die großgeschrieben auch ein Substantiv sein könnten oder mit anderen Wörtern verwechselt werden könnten -->
                    <token case_sensitive="yes" regexp="yes">verrat|stimm|kontrollier|betreib|mail|rat|bau|besuch|helf|stream|knutsch|schnall|strick|ruh|futter|zwiebel|gehör|grab|cancel|ras|beruf|nerv|zeug|buch|speck</token>
                </marker>
                <token>ich</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    <rule id="SIEBEN_KEIN_VERB" name="'sieben' kein Verb">
        <pattern>
            <marker>
                <token>sieben</token>
            </marker>
            <token regexp="yes">Tagen?|Monaten?|Zwergen?|Todsünden|Leben|Weltwundern?|Schwestern?</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>
    <rule id="SCHOEN_KEIN_ADJ" name="'schön' kein Adjektiv">
        <!-- https://de.wikipedia.org/wiki/Sch%C3%B6n_Klinik -->
        <pattern>
            <marker>
                <token case_sensitive="yes">Schön</token>
            </marker>
            <token regexp="yes">Klinik.*</token>
        </pattern>
        <disambig action="remove" postag="ADJ.*"/>
    </rule>
    <rule id="BMW_KEIN_SUB" name="'BMW' kein Nomen">
        <pattern>
            <marker>
                <token>BMW</token>
            </marker>
            <token regexp="yes" case_sensitive="yes">i?[ZXM].+|[zmxi]\d+|Isetta</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="FRONT_KEIN_SUB" name="'Front' kein Nomen">
        <pattern>
            <marker>
                <token>Front</token>
            </marker>
            <token regexp="yes" case_sensitive="yes">(National|Runner|Line).*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="KING_KEIN_SUB" name="'Front' kein Nomen">
        <pattern>
            <marker>
                <token>King</token>
            </marker>
            <token regexp="yes" case_sensitive="yes">(Size|of|Crimson|Arthur|Diamond).*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="THREE_D_SECURE" name="'3D-Secure'">
        <!-- adding this to spelling.txt does not work -->
        <pattern>
            <token case_sensitive="yes" regexp="yes">3D-Secure(-(Verfahren|Bezahlverfahren)s?)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="VORS_KEIN_PRP" name="'vors' kein PRP">
        <pattern>
            <marker>
                <token>vors</token>
            </marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="remove" postag="PRP.*"/>
    </rule>
    <rule id="IN_KEIN_PRP" name="'in' kein PRP">
        <pattern>
            <token spacebefore="no" regexp="yes">[_\*:]</token>
            <marker>
                <token spacebefore="no">in</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="PRP.*"/>
    </rule>
    <rule id="MOORESCHEN_KEIN_SUB" name="Mooreschen Gesetz">
        <pattern>
            <marker>
                <token regexp="yes">Mooresche.*</token>
            </marker>
            <token regexp="yes">Gesetz.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="KUND_KEIN_VERB" name="'Kund' kein Verb in 'Kund:in'">
        <pattern>
            <marker>
                <token>Kund</token>
            </marker>
            <token regexp="yes" spacebefore="no">[:/_*]</token>
            <token regexp="yes" spacebefore="no">in.*</token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>
    <rule id="LATTE_KEIN_SUB" name="'Latte' kein FEM Sub in 'Latte macchiato'">
        <pattern>
            <marker>
                <token>Latte</token>
            </marker>
            <token regexp="yes">macc?hiatt?o.*</token>
        </pattern>
        <disambig action="remove" postag="SUB.*FEM.*"/>
    </rule>
    <rule id="BITTE_KEIN_VER" name="'Bitte' kein Verb">
        <pattern>
            <token>wer</token>
            <marker>
                <token case_sensitive="yes">bitte</token>
            </marker>
            <token postag="VER.*" postag_regexp="yes" />
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>
    <rule id="LANG_KEIN_VER" name="'lang' kein Verb">
        <antipattern>
            <token regexp="yes">ich|bitte|dann|deswegen</token>
            <token>lang</token>
        </antipattern>
        <antipattern>
            <token>lang</token>
            <token regexp="yes">ich|zu|&apostrophe;</token>
        </antipattern>
        <pattern>
            <marker>
                <token case_sensitive="yes">lang</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>
    <rule id="TROTZ_KEIN_VER" name="'trotz' kein Verb">
        <antipattern>
            <token regexp="yes">ich|bitte|dann|deswegen</token>
            <token>trotz</token>
        </antipattern>
        <antipattern>
            <token>trotz</token>
            <token regexp="yes">ich|&apostrophe;</token>
        </antipattern>
        <pattern>
            <marker>
                <token>trotz</token>
            </marker>
            <token postag=".*(GEN|DAT).*" postag_regexp="yes" />
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>
    <rule id="FAHRERLOSEN_KEIN_VER" name="'fahrerlosen' kein Verb">
        <pattern>
            <token regexp="yes">
                .+losen?
                <exception regexp="yes">.*(ver|aus|raus|heraus|herein|hinein|be)(zu)?losen?</exception>
            </token>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>
    <rule id="DRAMATISCHEN_KEIN_VER" name="'...tischen' kein Verb">
        <pattern>
            <marker>
                <token regexp="yes">.*(drama|roman|elas|nazis|narziss)tisch(en?)?</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>
    <rulegroup id="LAUT_KEIN_ADJ_SUB" name="'laut' kein Adjektiv/Substantiv">
        <rule>
            <pattern>
                <marker>
                    <token>laut</token>
                </marker>
                <token postag="SUB:.*|PRO:POS:.+|ADJ.*" postag_regexp="yes">
                    <exception regexp="yes">.*(musik|ton|geräusch|schrei|knall|rums|lied|song|ruf|signal|piep|sound).*</exception><!-- Ein laut Signalton -->
                </token>
            </pattern>
            <disambig action="remove" postag="ADJ.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <marker>
                    <token  case_sensitive="yes">Laut</token>
                </marker>
                <token postag="SUB:.*|PRO:POS:.+|ADJ.*" postag_regexp="yes">
                    <exception regexp="yes">.*(musik|ton|geräusch|schrei|knall|rums|lied|song|ruf|signal|piep|sound).*</exception><!-- Laut Musik -->
                </token>
            </pattern>
            <disambig action="remove" postag="ADJ.*|SUB.*"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token  case_sensitive="yes">laut</token>
                </marker>
                <token postag="PKT"/>
            </pattern>
            <disambig action="remove" postag="PRP.*"/>
            <example type="ambiguous" inputform="laut[laut/ADJ:PRD:GRU,laut/PRP:MOD:GEN]" outputform="laut[laut/ADJ:PRD:GRU]">Es ist hier sehr <marker>laut</marker>.</example>
        </rule>
    </rulegroup>
    <rulegroup id="ADJ_KEINVER_SEIN" name="dunkel werden">
        <rule>
            <pattern>
                <marker>
                    <and>
                      <token postag="VER.*" postag_regexp="yes"/>
                      <token postag="ADJ.*" postag_regexp="yes"/>
                    </and>
                </marker>
                <token inflected="yes" postag="VER.*" postag_regexp="yes" regexp="yes">aussehen|sein|werden</token>
            </pattern>
            <disambig action="remove" postag="VER:(IMP|[123]).*"/>
            <example type="ambiguous" inputform="dunkel[dunkel/ADJ:PRD:GRU,dunkeln/VER:IMP:SIN:SFT]" outputform="dunkel[dunkel/ADJ:PRD:GRU]">Es wird zeitiger <marker>dunkel</marker> werden heute Abend, weil es regnet.</example>
            <example type="ambiguous" inputform="reich[reich/ADJ:PRD:GRU,reichen/VER:1:SIN:PRÄ:SFT,reichen/VER:IMP:SIN:SFT]" outputform="reich[reich/ADJ:PRD:GRU]">Nur weil er <marker>reich</marker> ist, heißt das noch lange nicht, dass er glücklich ist.</example>
            <example type="ambiguous" inputform="tätig[tätig/ADJ:PRD:GRU,tätigen/VER:1:SIN:PRÄ:SFT,tätigen/VER:IMP:SIN:SFT]" outputform="tätig[tätig/ADJ:PRD:GRU]">Diese Unternehmen haben die Pflicht, Ihre Daten zu schützen, und können überall, wo wir <marker>tätig</marker> sind, gefunden werden.</example>
            <example type="ambiguous" inputform="reif[reif/ADJ:PRD:GRU,reifen/VER:1:SIN:PRÄ:SFT,reifen/VER:IMP:SIN:SFT]" outputform="reif[reif/ADJ:PRD:GRU]">Apfel, der vom Baum fällt, wenn er <marker>reif</marker> ist.</example>
        </rule>	
        <rule>
            <pattern>
                <unify>
                  <feature id="number"/>
                  <token inflected="yes" postag="VER.*" postag_regexp="yes" regexp="yes">sein|werden</token>
                  <token regexp="yes">ich|du|er|sie|es|wir|ihr</token>
                </unify>
                <marker>
                    <and>
                      <token postag="VER.*" postag_regexp="yes"/>
                      <token postag="ADJ.*" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER:(IMP|[123]).*"/>
            <example type="ambiguous" inputform="sauer[sauer/ADJ:PRD:GRU,sauern/VER:1:SIN:PRÄ:SFT,sauern/VER:IMP:SIN:SFT]" outputform="sauer[sauer/ADJ:PRD:GRU]">Bist du <marker>sauer</marker> auf mich?</example>
        </rule>
    </rulegroup>
    <rule id="VOLKSWAGEN_KEIN_VER" name="'Wagen' kein Verb">
        <pattern>
            <marker>
                <token>Volkswagen</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="SUB.*INF"/>
    </rule>
    <rule id="INSTITUTE_OF" name="'Institute of' kein Pluralnomen">
        <pattern>
            <marker>
                <token regexp="yes">Institutes?</token>
            </marker>
            <token regexp="yes">of|for</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="DOMAIN_KEIN_VERB" name="'web.de' kein Verb">
        <pattern>
            <marker>
                <token postag="VER.*|ADV.*|PRP.*" postag_regexp="yes" />
            </marker>
            <token spacebefore="no">.</token>
            <token spacebefore="no" regexp="yes">de|net|biz|eu|ru|be|co|uk|us|info|at|ch|nl|lu|org|&filename_extensions;</token>
        </pattern>
        <disambig action="remove" postag="VER.*|ADV.*|PRP.*"/>
    </rule>
    <rulegroup id="ROMAN_HERZOG_KEIN_SUB" name="'Roman Herzog' kein Substantiv">
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <token>Roman</token>
                </marker>
                <token regexp="yes">Herzogs?</token>
            </pattern>
            <disambig action="remove" postag="SUB.*"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token>Roman</token>
                <marker>
                    <token regexp="yes">Herzogs?</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="SUB.*"/>
        </rule>
    </rulegroup>
    <rule id="UNIVERSAL_UNKNOWN" name="'Universal' als englisches Wort/Eigenname">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">Universals?</token>
            </marker>
            <token regexp="yes">[A-ZÄÖÜ].*|records?|music|studios|analytics|edition|serial|design|mobile|plug|orlando</token>
        </pattern>
        <disambig action="remove" postag="(SUB|ADJ).*"/>
    </rule>
    <rule id="PATRIOT_ACT" name="'Patriot' als englisches Wort/Eigenname">
        <pattern case_sensitive="yes">
            <marker>
                <token>Patriot</token>
            </marker>
            <token regexp="yes">Acts?|Movements?|Rails?|Days?|Games?|Hills?|Leagues?</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="REAL_KEIN_SUB" name="'Real' als Eigenname">
        <pattern>
            <marker>
                <token case_sensitive="yes">Real</token>
            </marker>
            <token regexp="yes">Madrids?|Mallorcas?|Murcias?|Valladolids?|Sitio|Sociedads?|Universidad|Oviedos?|Times?|Lifes?|People|Racings?|Estates?|Academia|Bras[ií]lias?|BIP|Betis|Cartagenas?|Canoes?|de|Espa[nñ]a|Hospicios?|Hospitals?|Irish|Jard[ií]n|Kakamoras?</token>
        </pattern>
        <disambig action="remove" postag="SUB.*"/>
    </rule>
    <rule id="WEISE_KEIN_ADJ" name="Wörter, die mit 'weise' enden sind kein Adjektiv">
        <pattern>
                <token regexp="yes" postag="ADJ.*" postag_regexp="yes">.+weise</token>
        </pattern>
        <disambig action="remove" postag="ADJ.*"/>
    </rule>
    <rulegroup id="LANGE_UND_NAHE_KEIN_VER" name="'lang' kein Verb">
        <antipattern>
            <token regexp="yes">lange?|nahe?</token>
            <token>ich</token>
            <token>zu</token>
        </antipattern>
        <rule>
            <pattern>
                <token regexp="yes">wie|so</token>
                <marker>
                    <token regexp="yes" postag="VER.*" postag_regexp="yes">lange?|nahe?</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <antipattern>
                <token>ich</token>
                <token min="0">zu</token>
                <token regexp="yes">lange?</token>
            </antipattern>
            <pattern>
                <marker>
                    <token regexp="yes" postag="VER.*" postag_regexp="yes">lange?</token>
                </marker>
                <token>her</token>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
        <rule>
            <pattern>
                <token postag="VER:(MOD|AUX).*" postag_regexp="yes" skip="-1" />
                <marker>
                    <token regexp="yes" postag="VER.*" postag_regexp="yes">nahe?</token>
                </marker>
                <token inflected="yes">kommen</token>
            </pattern>
            <disambig action="remove" postag="VER.*"/>
        </rule>
    </rulegroup>

    <rule id="ÄUSSERST_KEIN_VERB" name="'äußerst' kein Verb">
        <pattern>
            <token postag="VER.*|PRP.*" postag_regexp="yes">
                <exception postag="ADV.*" postag_regexp="yes" />
            </token>
            <marker>
                <token case_sensitive="yes" regexp="yes">äu(ss|ß)erst</token>
            </marker>
            <token postag="ADJ:PRD:GRU" />
        </pattern>
        <disambig action="remove" postag="VER.*"/>
    </rule>

    <rule id="DENN_EIG" name="denn's kein Adverb">
        <pattern>
            <marker>
                <token>denn</token>
            </marker>
            <token spacebefore="no" regexp="yes">&apostrophe;</token>
            <token spacebefore="no">s</token>
        </pattern>
        <disambig action="remove" postag="ADV.*|KON.*"/>
    </rule>

    <rule id="SMART_SPEAKER" name="'Smart' kein Adjektiv">
        <pattern>
            <marker>
                <token case_sensitive="yes">Smart</token>
            </marker>
            <token regexp="yes">Speaker[sn]?|Homes?|For.*|Citys?|Roadster[sn]?|Meter[sn]?</token>
        </pattern>
        <disambig action="remove" postag="ADJ.*"/>
    </rule>

    <rule name="Gruner und Jahr" id="GRUNER_UND_JAHR">
        <pattern case_sensitive="yes">
            <token regexp="yes">Gruner|GRUNER</token>
            <token regexp="yes">UND|und|&amp;|\+</token>
            <token regexp="yes">Jahr|JAHR</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="KU_DAMM" name="Ku'damm">
        <pattern case_sensitive="yes">
            <token>Ku</token>
            <token regexp="yes">['’]</token>
            <token>damm</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="NACH_WIE_VOR" name="nach wie vor ('vor' keine Präposition)">
        <pattern>
            <token>nach</token>
            <token>wie</token>
            <marker>
                <token>vor</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="(PRP|ZUS).*" />
    </rule>

    <rulegroup id="SEGELT_EINHAND" name="Er segelt einhand (ignore spelling)">
        <!-- https://de.wikipedia.org/wiki/Einhandsegeln -->
        <rule>
            <pattern>
                <token inflected="yes" regexp="yes" skip="-1">(um)?segeln</token>
                <marker>
                    <token case_sensitive="yes">einhand</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes" skip="-1">einhand</token>
                </marker>
                <token inflected="yes" regexp="yes">(um)?segeln</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule id="EINE_KEIN_VERB" name="'eine' kein Verb in 'eine der besten'">
        <pattern>
            <marker>
                <token regexp="yes">einen?</token>
            </marker>
            <token>der</token>
            <token min="0">am</token>
            <token regexp="yes" postag="ADJ.*SUP.*" postag_regexp="yes">.+sten</token>
        </pattern>
        <disambig action="remove" postag="VER.*" />
    </rule>
    <rule id="RECHT_KEIN_VERB" name="'eine' kein Verb in 'eine der besten'">
        <antipattern>
            <token skip="6" regexp="yes">er|sie|ihr|bitte</token>
            <token>recht</token>
        </antipattern>
        <antipattern>
            <token skip="6">recht</token>
            <token regexp="yes">er|sie|ihr</token>
        </antipattern>
        <pattern>
            <marker>
                <token case_sensitive="yes">recht</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER.*" />
    </rule>

    <rule id="IN_UND_AUSWENDIG" name="ignore spelling of 'in-'">
        <pattern>
            <marker>
                <token>in-</token>
            </marker>
            <token regexp="yes">und|&amp;</token>
            <token regexp="yes">auswendig.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="DICHTE_KEIN_ADJ" name="Nomen mit 'Dichte' am ende">
        <pattern>
            <token case_sensitive="yes" regexp="yes" postag="SUB.+ADJ" postag_regexp="yes">[A-ZÄÖÜ].+dichten?</token>
        </pattern>
        <disambig action="remove" postag="SUB.+ADJ" />
    </rule>

     <rule id="IN_VITRO_NO_PREPOSITION" name="in vitro (in = keine Präposition)">
        <pattern>
            <marker>
                <token>in</token>
            </marker>
            <token>vitro</token>
        </pattern>
        <disambig action="remove" postag="PRP.*" />
    </rule>

    <rule id="PRAIA_DA" name="ignore spelling of 'Praia da Luz'">
        <pattern case_sensitive="yes">
            <marker>
                <token>Praia</token>
                <token regexp="yes">d[oa]</token>
                <token regexp="yes">[A-Z].+</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="RÄTSEL-" name="ignore spelling of '(Rätsel-)Spaß'"> <!--TEST - LT marks 'Rätsel-' as a typo when in brackets-->
        <pattern case_sensitive="yes">
            <marker>
                <token>(</token>
                <token>Rätsel-</token>
                <token>)</token>
            </marker>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="NUMMER_TLG" name="ignore spelling of '2-tlg.'">
        <pattern>
            <token regexp="yes" case_sensitive="yes">\d+-(tlg|TLG)</token>
            <token>.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rulegroup id="OCH_IGNORE_SPELLING" name="ignore spelling of 'och'">
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes" regexp="yes">[Oo]ch</token>
                </marker>
                <token>man</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START" />
                <marker>
                    <token case_sensitive="yes" regexp="yes">[Oo]ch</token>
                </marker>
                <token>,</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <token>:</token>
                <marker>
                    <token case_sensitive="yes" regexp="yes">[Oo]ch</token>
                </marker>
                <token>,</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">&anfauf;</token>
                <marker>
                    <token case_sensitive="yes" regexp="yes" spacebefore="no">[Oo]ch</token>
                </marker>
                <token>,</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>

    <rule id="INTER_NATIONAL" name="ignore spelling of (inter)national">
        <pattern>
            <token>(</token>
            <marker>
                <token regexp="yes">inter|multi</token>
            </marker>
            <token>)</token>
            <token regexp="yes">national.*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule id="DEUTSCHE_HAERTE_IGNORE_SPELLING" name="ignore spelling of 'dH'">
        <!-- https://de.wikipedia.org/wiki/Wasserh%C3%A4rte -->
        <pattern>
            <token case_sensitive="yes" regexp="yes">°?dH</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="EIGTL_ABK" name="ignore spelling of 'eigtl'">
        <pattern>
            <token postag="SENT_START" />
            <marker>
                <token case_sensitive="yes">Eigtl</token>
            </marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="HOLST_KEIN_VERB" name="'Holst' kein Verb">
        <!-- https://de.wikipedia.org/wiki/Holst_(Familienname) -->
        <!-- https://de.wikipedia.org/wiki/Holt -->
        <antipattern>
            <token>du</token>
            <token>holst</token>
        </antipattern>
        <antipattern>
            <token>holst</token>
            <token>du</token>
        </antipattern>
        <antipattern>
            <token regexp="yes">er|sie|es|das|dieses</token>
            <token>holt</token>
        </antipattern>
        <antipattern>
            <token>holt</token>
            <token regexp="yes">er|sie|es|das|dieses</token>
        </antipattern>
        <antipattern>
            <token postag="SENT_START" />
            <token regexp="yes">hols?t</token>
        </antipattern>
        <antipattern>
            <token>:</token>
            <token regexp="yes">hols?t</token>
        </antipattern>
        <pattern>
            <token case_sensitive="yes" regexp="yes">Hols?t</token>
        </pattern>
        <disambig action="remove" postag="EIG.*" />
    </rule>

    <rulegroup id="LAS_KEIN_VERB" name="'Las' kein Verb">
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">Las</token>
                </marker>
                <token regexp="yes">(Palmas|Vegas|Flores|Juntas|Nieves|Olas|Piedras).*</token>
            </pattern>
            <disambig action="remove" postag="VER.*" />
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">Las</token>
                </marker>
                <token regexp="yes" case_sensitive="yes" postag="UNKNOWN">[A-Z][a-z].*</token>
            </pattern>
            <disambig action="remove" postag="VER.*" />
        </rule>
    </rulegroup>

    <rule id="IGNORE_2ND_LEVEL_SUPPORT" name="ignore '2nd-Level-Support'">
        <pattern>
            <token regexp="yes" case_sensitive="yes">(1st|First|2nd|Second|3rd|Third)-Level-(Kundensupport|Support)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
</rules>
