<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/rules/print.xsl" title="Pretty print" ?>
<?xml-stylesheet type="text/css" href="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/rules/rules.css" title="Easy editing stylesheet" ?>
<!--
English Style Rules for LanguageTool
See tagset.txt for the meaning of the POS tags
Copyright (C) 2001-2023 Daniel Naber (http://www.danielnaber.de),
  Marcin Miłkowski, and the LanguageTool contributors

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
USA
-->
<rules lang="en" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/languagetool-org/languagetool/master/languagetool-core/src/main/resources/org/languagetool/rules/rules.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <category id="AMERICAN_ENGLISH_STYLE" name="American English Style" type="style">
        <rulegroup id="EG_NO_COMMA" name="'e.g.' without a comma" tags="picky">
            <rule>
                <antipattern>
                    <token>e</token>
                    <token>.</token>
                    <token>g</token>
                    <token>.</token>
                    <token regexp="yes" spacebefore="no">[a-z]{1,2}</token>
                </antipattern>
                <antipattern>
                    <token>.</token>
                    <token spacebefore="no">e</token>
                    <token>.</token>
                    <token>g</token>
                    <token>.</token>
                </antipattern>
                <pattern>
                    <marker>
                        <token>e</token>
                        <token>.</token>
                        <token spacebefore="no">g</token>
                        <token>.</token>
                    </marker>
                    <token negate="yes">,</token>
                </pattern>
                <message>A comma is missing here.</message>
                <suggestion>e.g.,</suggestion>
                <short>Punctuation error</short>
                <example>There are several grammar checkers for English, e.g., LanguageTool.</example>
                <example correction="e.g.,">There are several grammar checkers for English, <marker>e.g.</marker> LanguageTool.</example>
                <example>Davies, R.E.G. Delta - An Airline and Its Aircraft.</example>
            </rule>
            <rule>
                <pattern>
                    <marker>
                        <token>eg</token>
                    </marker>
                    <token negate="yes" regexp="yes">,|\.</token>
                </pattern>
                <message>A comma and a dot are missing here.</message>
                <suggestion>e.g.,</suggestion>
                <short>Punctuation error</short>
                <example>There are several grammar checkers for English, e.g., LanguageTool.</example>
                <example correction="e.g.,">There are several grammar checkers for English, <marker>eg</marker> LanguageTool.</example>
            </rule>
        </rulegroup>
        <rulegroup id="IE_NO_COMMA" name="'i.e.' without a comma" tags="picky">
            <rule>
                <pattern>
                    <marker>
                        <token>i</token>
                        <token>.</token>
                        <token spacebefore="no">e</token>
                        <token>.</token>
                    </marker>
                    <token negate="yes" regexp="yes">,|-|–|:|;|\.|\/</token>
                </pattern>
                <message>A comma is missing here.</message>
                <suggestion>i.e.,</suggestion>
                <short>Punctuation error</short>
                <example>Who's responsible for providing public facilities, <marker>i.e.,</marker> a post office, library, etc. for the Northwest?</example>
                <example correction="i.e.,">Who's responsible for providing public facilities, <marker>i.e.</marker> a post office, library, etc. for the Northwest?</example>
            </rule>
            <rule>
                <antipattern>
                    <token>ie</token>
                    <token>:</token>
                </antipattern>
                <antipattern>
                    <token case_sensitive="yes">IE</token>
                    <token regexp="yes">\d+</token>
                </antipattern>
                <antipattern>
                    <token regexp="yes">the|in</token>
                    <token case_sensitive="yes">IE</token>
                </antipattern>
                <antipattern>
                    <token>.</token>
                    <token spacebefore="no">ie</token>
                </antipattern>
                <antipattern>
                    <token>ie</token>
                    <token>'s</token>
                </antipattern>
                <antipattern case_sensitive="yes">
                    <token>IE</token>
                    <token regexp="yes">[a-z].*</token>
                </antipattern>
                <pattern>
                    <marker>
                        <token>ie</token>
                    </marker>
                    <token negate="yes" regexp="yes">,|-|–|:|;|\.|\/</token>
                </pattern>
                <message>The comma and dots are missing here:<suggestion>i.e.,</suggestion>.</message>
                <short>Punctuation error</short>
                <example>Who's responsible for providing public facilities, <marker>i.e.,</marker> a post office, library, etc. for the Northwest?</example>
                <example correction="i.e.,">Who's responsible for providing public facilities, <marker>ie</marker> a post office, library, etc. for the Northwest?</example>
                <example>Atlantipedia.ie: Encyclopedic collection of information on Atlantis.</example>
            </rule>
            <rule>
                <antipattern>
                    <token>.</token>
                    <token spacebefore="no">ie</token>
                </antipattern>
                <pattern>
                    <marker>
                        <token>ie</token>
                        <token>.</token>
                    </marker>
                    <token negate="yes">,</token>
                </pattern>
                <message>The comma and dots are missing here.</message>
                <suggestion>i.e.,</suggestion>
                <short>Punctuation error</short>
                <example>Who's responsible for providing public facilities, <marker>i.e.,</marker> a post office, library, etc. for the Northwest?</example>
                <example correction="i.e.,">Who's responsible for providing public facilities, <marker>ie.</marker> a post office, library, etc. for the Northwest?</example>
            </rule>
        </rulegroup>
        <rule id="ETC_PERIOD" name="period after abbreviation 'etc.'">
            <antipattern>
                <token>etc</token>
                <token regexp="yes">/|_|…|#</token>
            </antipattern>
            <pattern>
                <marker>
                    <token case_sensitive="yes">etc</token>
                </marker>
                <token><exception>.</exception></token>
            </pattern>
            <message>A period is needed after the abbreviation 'etc.'</message>
            <suggestion>etc.</suggestion>
            <url>https://languagetool.org/insights/post/spelling-etc-or-ect/</url>
            <example correction="etc.">Tennis, soccer, baseball, <marker>etc</marker> are outdoor games.</example>
            <example correction="etc.">I use things like Java, Microsoft, Unix, <marker>etc</marker> at work.</example>
            <example correction="etc.">Make sure you bring your fishing pole, tackle, bait, <marker>etc</marker> as we will not make any stops.</example>
            <example correction="etc.">No check engine lights <marker>etc</marker>?</example>
            <example correction="etc.">Removed the alarm listener and replaced with lights, <marker>etc</marker>, etc.</example>
            <example>Process: 4264 ExecStart=/etc/rc.d/init.d/newrelic-daemon start (code=exited, status=0/SUCCESS)</example>
            <example>DND_ETC__List1</example>
            <example>Device Handlers, etc…</example>
            <example>root@de1lvapp098p:/etc# ls -l /dev/disk/by-uuid</example>
            <example>Diversity Dick Liebert reported that questions for the ETC survey are currently being developed.</example>
        </rule>
        <rule id="MISSING_COMMA_AFTER_YEAR" name="Potentially missing comma after year">
            <pattern>
                <token regexp="yes">&months;</token>
                <token regexp="yes">[0123]?[0-9]</token>
                <token min="0">,</token>
                <marker>
                    <token regexp="yes">[0-9]{4}</token>
                </marker>
                <token regexp="yes">[a-z]+</token>
            </pattern>
            <message>Some style guides suggest that commas should set off the year in a month-day-year date.</message>
            <suggestion>\4,</suggestion>
            <url>http://www.thepunctuationguide.com/comma.html#dates</url>
            <short>Potentially missing comma</short>
            <example correction="2011,">The meeting scheduled for July 10, <marker>2011</marker> was canceled.</example>
            <example>My birthday is October 8, <marker>1983,</marker> but I usually do not celebrate.</example>
        </rule>
        <rulegroup id="US_ONE_ENTITY" name="The United States are (is) 246 years old">
            <rule>  <!-- 'United States' -->
                <antipattern>
                    <token>the</token>
                    <token>united</token>
                    <token>states</token>
                    <token>are</token>
                    <token min="0" max="2" postag="RB" />
                    <token chunk="B-NP-plural">
                        <exception postag="CD" />
                    </token>
                </antipattern>
                <antipattern>
                    <token chunk="E-NP-plural" />
                    <token regexp="yes">of|for</token>
                    <token>the</token>
                    <token>united</token>
                    <token>states</token>
                </antipattern>
                <antipattern>
                    <token regexp="yes">.+s</token>
                    <token regexp="yes">of|for</token>
                    <token>the</token>
                    <token>united</token>
                    <token>states</token>
                </antipattern>
                <antipattern>
                    <token skip="5" chunk="B-PP" />
                    <token>the</token>
                    <token>united</token>
                    <token>states</token>
                </antipattern>
                <pattern>
                    <token postag="SENT_START|CC|PCT" postag_regexp="yes">
                        <exception>and</exception>
                    </token>
                    <token>the</token>
                    <token>united</token>
                    <token>states</token>
                    <marker>
                        <token postag="VBP?" postag_regexp="yes" chunk="B-VP">
                            <exception postag="MD|VB[DN]" postag_regexp="yes" />
                        </token>
                    </marker>
                </pattern>
                <message>In American English, 'the United States' is considered a singular entity, and therefore takes a third-person verb form.</message>
                <suggestion><match no="5" postag="VBZ" /></suggestion>
                <example correction="is">The United States <marker>are</marker> 246 years old.</example>
                <example correction="tries">If the United States <marker>try</marker> to hit and annihilate Iran, this will be its last war.</example>
                <example correction="does">Whenever the United States <marker>do</marker> not succeed in invading, annihilating, dividing or controlling a country, they feel humiliated.</example>
                <example>The United States are not currently the only cultural imperialists, but today, as a global economic and political superpower, the spread of American values in the entire world is at the leading edge of a wave of spread of Western goods and consumerist culture.</example>
                <example>A noted series of HPIs for the United States are the Case–Shiller indices, devised by American economists Karl Case, Robert J. Shiller, and Allan Weiss.</example>
                <example>In another twenty years, the United States will no longer be able to be the police for the world.</example>
                <example>In that final, the United States upset the Cubans, beating them 4–0.</example>
                <example>Fur company posts that became cities in what is now the United States include Vancouver, Washington (Fort Vancouver), formerly the "capital" of Hudson's Bay operations in the Columbia District, Colville, Washington and Walla Walla, Washington (old Fort Nez Percés).</example>
            </rule>
            <rule>  <!-- 'US' -->
                <antipattern>
                    <token chunk="E-NP-plural" />
                    <token regexp="yes">of|for</token>
                    <token>the</token>
                    <token regexp="yes" case_sensitive="yes">USA?</token>
                </antipattern>
                <antipattern>
                    <token regexp="yes">.+s</token>
                    <token regexp="yes">of|for</token>
                    <token>the</token>
                    <token regexp="yes" case_sensitive="yes">USA?</token>
                </antipattern>
                <pattern>
                    <token postag="SENT_START|CC|PCT" postag_regexp="yes">
                        <exception>and</exception>
                    </token>
                    <token>the</token>
                    <token regexp="yes" case_sensitive="yes">USA?</token>
                    <marker>
                        <token postag="VBP?" postag_regexp="yes" chunk="B-VP">
                            <exception postag="MD|VB[DN]" postag_regexp="yes" />
                        </token>
                    </marker>
                </pattern>
                <message>In American English, 'the \3' is considered a singular entity, and therefore takes a third-person verb form.</message>
                <suggestion><match no="4" postag="VBZ" /></suggestion>
                <example correction="tries">If the US <marker>try</marker> to hit and annihilate Iran, this will be its last war.</example>
                <example correction="gets">How much longer until the US <marker>get</marker> full blown “Shithole Country” status? </example>
            </rule>
            <rule>  <!-- 'U.S.' -->
                <antipattern>
                    <token chunk="E-NP-plural" />
                    <token regexp="yes">of|for</token>
                    <token>the</token>
                    <token case_sensitive="yes">U</token>
                    <token>.</token>
                    <token case_sensitive="yes">S</token>
                    <token>.</token>
                    <token min="0" case_sensitive="yes">A</token>
                    <token min="0">.</token>
                </antipattern>
                <antipattern>
                    <token regexp="yes">.+s</token>
                    <token regexp="yes">of|for</token>
                    <token>the</token>
                    <token case_sensitive="yes">U</token>
                    <token>.</token>
                    <token case_sensitive="yes">S</token>
                    <token>.</token>
                    <token min="0" case_sensitive="yes">A</token>
                    <token min="0">.</token>
                </antipattern>
                <pattern>
                    <token postag="SENT_START|CC|PCT" postag_regexp="yes">
                        <exception>and</exception>
                    </token>
                    <token>the</token>
                    <token case_sensitive="yes">U</token>
                    <token>.</token>
                    <token case_sensitive="yes">S</token>
                    <token>.</token>
                    <token min="0" case_sensitive="yes">A</token>
                    <token min="0">.</token>
                    <marker>
                        <token postag="VBP?" postag_regexp="yes" chunk="B-VP">
                            <exception postag="MD|VB[DN]" postag_regexp="yes" />
                        </token>
                    </marker>
                </pattern>
                <message>In American English, 'the United States' is considered a singular entity, and therefore takes a third-person verb form.</message>
                <suggestion><match no="9" postag="VBZ" /></suggestion>
                <example correction="tries">If the U.S. <marker>try</marker> to hit and annihilate Iran, this will be its last war.</example>
            </rule>
        </rulegroup>

        <rulegroup id="TOILET" name="offensive word 'toilet'">
            <rule>
                <pattern>
                    <token>toilet</token>
                    <token regexp='yes' min="0">rooms?</token>
                </pattern>
                <message>This expression can be considered mildly offensive (especially in Canadian and American English).</message>
                <suggestion>rest\2</suggestion>
                <suggestion>wash\2</suggestion>
                <suggestion>bath\2</suggestion>
                <suggestion>powder \2</suggestion>
                <url>http://www.englishteachermelanie.com/vocabulary-do-not-call-it-toilet/</url>
                <example correction="restrooms|washrooms|bathrooms|powder rooms">Have you seen the <marker>toilet rooms</marker>?</example>
            </rule>
            <rule>
                <pattern>
                    <token regexp="yes">go|visit|on|use</token>
                    <token min="0">to</token>
                    <token regexp="yes">the|a</token>
                    <marker>
                        <token>
                            toilet
                            <exception scope="next" regexp="yes">game|song|paper|bowls?|bar|store|seat|plunger|flange|water</exception>
                        </token>
                    </marker>
                </pattern>
                <message>This expression can be considered mildly offensive (especially in Canadian and American English).</message>
                <suggestion>restroom</suggestion>
                <suggestion>washroom</suggestion>
                <suggestion>bathroom</suggestion>
                <suggestion>powder room</suggestion>
                <url>http://www.englishteachermelanie.com/vocabulary-do-not-call-it-toilet/</url>
                <example correction="restroom|washroom|bathroom|powder room">I need to go to the <marker>toilet</marker>.</example>
            </rule>
        </rulegroup>
    </category>
    <category id="STYLE" name="Style" type="style">
        <rule id="HAPPY_CHRISTMAS" name="Happy (Merry) Christmas" tags="picky">
            <antipattern>
                <token>christmas</token>
                <token regexp="yes">holidays?|days?|birthday|eve</token>
            </antipattern>
            <pattern>
                <token>happy</token>
                <token>christmas</token>
            </pattern>
            <message>It's more common to wish someone <suggestion>Merry Christmas</suggestion>.</message>
            <url>https://www.countryliving.com/life/a37128/origin-of-merry-christmas/</url>
            <example correction="Merry Christmas">I wish you a <marker>happy christmas</marker>.</example>
            <example>Happy Christmas Days!</example>
        </rule>
        <rule id="THRU" name="thru / through">
            <antipattern>
                <token>thru</token>
                <token regexp="yes">axles?</token>
            </antipattern>
            <pattern>
                <token>thru</token>
            </pattern>
            <message>The word 'thru' is informal. Consider replacing it with <suggestion>through</suggestion>.</message>
            <url>https://www.merriam-webster.com/dictionary/thru</url>
           <example correction="through">I'm going <marker>thru</marker> hell.</example>
           <example>A thru axle (TA) is a wheel attachment system that secures a wheel on a hub between a pair of dropouts on a bicycle frame or fork.</example>
        </rule>
    </category>
</rules>
