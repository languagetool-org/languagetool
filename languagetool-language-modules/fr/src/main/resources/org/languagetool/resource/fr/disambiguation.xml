<?xml version="1.0" encoding="utf-8"?>
<!--
French Disambiguation Rules for LanguageTool
Copyright (C) 2007 Agnès Souque, 2011-2014 Dominique Pellé
--><!-- ported from Myriam's Gramadoir rules --><!--
RP => Règles Particulières
RD => Règles par Défaut
RB => Règles Brutes

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
-->

  <!DOCTYPE rules [

    <!ENTITY extensions_de_fichiers "aspx?|avi|bak|bat|bmp|cab|cfg|cgi|com|css|csv|dat|db|dbf|dll|docx?|eps|exe|flv|gif|html?|ibooks|ico|ini|jar|jpe?g|js|jsp|lnk|md|mdb|mid|mov|mp3|mp4|mpa|mpg|o[dt][tspfg]|pdf|php|pl|png|pps|pptx?|ps|psd|py|rss|sh|sql|svg|sys|tar|tif|tiff|tmp|txt|wav|wma|xhtml|xlsx?|xsl|xml|zipx?|7z">
    <!ENTITY domaines_internet "(?:cat|ae|ar|asia|at|au|be|bid|biz|br|ca|cc|cf|ch|cl|club|cn|co|com|cz|de|dk|edu|es|eu|fi|fr|ga|gdn|gov|gq|gr|hk|hu|id|ie|il|in|info|int|io|ir|it|jp|kiwi|kr|kz|life|link|loan|lt|me|men|mil|ml|mobi|mx|my|name|net|nl|no|nu|nz|online|org|party|pl|pro|pt|pw|racing|ro|ru|se|sg|shop|site|sk|space|store|su|tech|tk|top|tr|trade|tv|tw|ua|uk|us|vip|vn|wang|website|win|ws|xin|xyz|za)"><!-- the 100 most used + cat -->
    <!ENTITY apostrophe "[’´'‛′‘]">
    <!ENTITY prefixes "mini|anti|pré|nord|sud|néo|méga|ultra|pro|inter|micro|macro|sous|haut|auto|ré|super|vice|hyper|proto|grand|pseudo|multi">
]>
<rules lang="fr" xsi:noNamespaceSchemaLocation="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/resource/disambiguation.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <unification feature="number">
    <equivalence type="sg">
      <token postag=".* sp?" postag_regexp="yes"/>
    </equivalence>
    <equivalence type="pl">
      <token postag=".* s?p" postag_regexp="yes"/>
    </equivalence>
  </unification>
  <unification feature="gender">
    <equivalence type="masc">
      <token postag=".* [me] [sp][sp]?" postag_regexp="yes"/>
    </equivalence>
    <equivalence type="fem">
      <token postag=".* [fe] [sp][sp]?" postag_regexp="yes"/>
    </equivalence>
  </unification>
  <unification feature="person">
    <equivalence type="p1">
      <token postag=".* 1 .*" postag_regexp="yes"/>
    </equivalence>
    <equivalence type="p2">
      <token postag=".* 2 .*" postag_regexp="yes"/>
    </equivalence>
    <equivalence type="p3">
      <token postag=".* 3 .*" postag_regexp="yes"/>
    </equivalence>
  </unification>
  <rule name="C" id="C_APOSTROPHE">
    <pattern>
      <token>C
        <exception scope="next" regexp="yes" negate="yes">&apostrophe;</exception></token>
    </pattern>
    <disambig postag="R dem m s"/>
  </rule>
  <rule id="ROMAN_NUMBER" name="roman number">
    <pattern>
      <!--(?=[MDCLXVI])M*(C[MD]|D?C*)(X[CL]|L?X*)(I[XV]|V?I*)-->
      <token regexp="yes" case_sensitive="yes">(?=.)M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})
        <exception scope="next" regexp="yes">&apostrophe;</exception></token>
    </pattern>
    <disambig postag=""/>
  </rule>
  <rule name="RD : nombres" id="RD-NOMBRES">
    <pattern>
      <marker>
        <token regexp="yes">\d+</token>
      </marker>
    </pattern>
    <disambig postag="Y"/>
  </rule>
  <rule id="L_AN" name="l'an X">
    <pattern>
      <token>l'</token>
      <token>an</token>
      <marker>
        <token postag="K"/>
      </marker>
    </pattern>
    <disambig postag="K"/>
  </rule>
  <rule id="X_AN" name="Nombre suivi de 'an'">
    <pattern>
      <marker>
        <token postag="K"/>
      </marker>
      <token>an</token>
    </pattern>
    <disambig postag="K"/>
  </rule>
  <rulegroup id="DANS" name="dans">
    <rule>
      <pattern>
        <token>dans</token>
      </pattern>
      <disambig postag="P"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">[ld]es</token>
        <token>dans</token>
      </pattern>
      <disambig postag="N m p"/>
    </rule>
  </rulegroup>
  <rule id="VERB_PRON" name="verb + pronoun">
    <pattern>
      <token postag="V.* (ind|sub|imp|inf|cond) .*" postag_regexp="yes">
        <exception>entre</exception></token>
      <token postag="R .*" postag_regexp="yes" spacebefore="no" regexp="yes">['-].*</token>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rulegroup id="PREFIXES" name="prefixes">
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">&prefixes;</token>
        </marker>
        <token spacebefore="no">-</token>
        <token spacebefore="no"/>
      </pattern>
      <disambig action="replace">
        <wd lemma="prefix" pos="A"/>
      </disambig>
    </rule>
    <rule>
      <antipattern>
        <token postag="(P\+)?D [me] (s|sp)" postag_regexp="yes"/>
        <token postag="[NJ] [me] (s|sp)" postag_regexp="yes"/>
      </antipattern>
      <antipattern>
        <token postag="(P\+)?D [fe] (s|sp)" postag_regexp="yes"/>
        <token postag="[NJ] [fe] (s|sp)" postag_regexp="yes"/>
      </antipattern>
      <pattern>
        <unify>
          <feature id="gender"/>
          <feature id="number"/>
          <token postag="(P\+)?D.*" postag_regexp="yes"/>
          <unify-ignore>
            <marker>
              <token regexp="yes">&prefixes;
                <exception postag="J.*" postag_regexp="yes"/></token>
            </marker>
          </unify-ignore>
          <token postag="[NJ].*" postag_regexp="yes"/>
        </unify>
      </pattern>
      <disambig action="replace" postag="A"/>
    </rule>
  </rulegroup>
  <rule name="nom" id="NOM">
    <antipattern>
      <token regexp="yes">Les?|La</token>
      <token postag="V.* [123].*" postag_regexp="yes"/>
      <token postag="D.*" postag_regexp="yes"/>
      <token postag="[NJ].*" postag_regexp="yes"/>
    </antipattern>
    <pattern>
      <token postag="SENT_START"/>
      <token regexp="yes">Les?|La</token>
      <marker>
        <token postag="[NJZK].*" postag_regexp="yes"><exception postag="V ppr"/></token>
      </marker>
    </pattern>
    <disambig action="filter" postag="[NJZK].*"/>
  </rule>
  <!-- Words not tagged in dicollecte -->
  <rule name="adverbes" id="ADVERBES">
    <pattern>
      <marker>
        <token regexp="yes">trop|peu|beaucoup|assez|fort|peut-être</token>
      </marker>
    </pattern>
    <disambig postag="A"/>
  </rule>
  <rule name="années" id="ANNEES">
    <pattern>
      <token regexp="yes">\d+</token>
      <marker>
        <token regexp="yes" case_sensitive="yes">EC|CE|AEC</token>
        <!-- CE is an anglicism -->
      </marker>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
    </disambig>
  </rule>
  <rulegroup id="LE_LA_PR_OBJ" name="le/la pronom objet">
    <rule>
      <pattern>
        <token regexp="yes">je|tu|ils?|ne</token>
        <marker>
          <token regexp="yes">l[ae]?|les</token>
        </marker>
        <token postag="V.*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers.*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">à|de</token>
        <marker>
          <token regexp="yes">les?</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="R.*"/>
    </rule>
  </rulegroup>
  <rule id="L_UN" name="l'un (pronom)">
    <pattern>
      <token postag="D e s">l'</token>
      <token postag="R . s" postag_regexp="yes" regexp="yes">un|une</token>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <!--  <rule name="UN" id="un">
    <pattern><token postag="D m s">un</token></pattern>
    <disambig postag="D m s"/>
  </rule>-->
  <rule name="mi" id="MI">
    <pattern>
      <marker>
        <token>mi</token>
      </marker>
      <token spacebefore="no">-</token>
      <token postag="[NJY].*" postag_regexp="yes" spacebefore="no">
        <exception regexp="yes">\d</exception></token>
    </pattern>
    <disambig postag="N f s"/>
  </rule>
  <rulegroup id="NEUF" name="neuf">
    <rule>
      <pattern>
        <token postag="D [mfe] (p|sp)" postag_regexp="yes">
          <exception>de</exception></token>
        <marker>
          <token regexp="yes">neuf|mille</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="K"/>
    </rule>
    <rule>
      <pattern>
        <token>quoi</token>
        <token>de</token>
        <marker>
          <token>neuf</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="J m s"/>
    </rule>
  </rulegroup>
  <rule name="la (nom)" id="LA_N">
    <pattern>
      <token regexp="yes">un|les?|ce|du|des</token>
      <marker>
        <token>la</token>
      </marker>
    </pattern>
    <disambig postag="N m sp"/>
  </rule>
  <rulegroup id="EN" name="en (preposition/pronoun)">
    <rule>
      <!-- gérondif -->
      <pattern>
        <token postag="P">en</token>
        <token postag="V.* ppr" postag_regexp="yes"/>
      </pattern>
      <disambig action="filterall"/>
    </rule>
    <rule>
      <pattern>
        <token postag="R .*" postag_regexp="yes">
          <exception regexp="yes">y|-.*</exception></token>
        <marker>
          <token postag="R pers obj">en</token>
        </marker>
        <token postag="V .*" postag_regexp="yes"/>
      </pattern>
      <disambig action="remove" postag="P"/>
    </rule>
    <rule>
      <pattern>
        <token>n'</token>
        <marker>
          <token postag="R pers obj">en</token>
        </marker>
        <token postag="V .*" postag_regexp="yes"/>
      </pattern>
      <disambig action="remove" postag="P"/>
    </rule>
  </rulegroup>
  <rulegroup name="est" id="EST">
    <rule>
      <pattern>
        <token postag="P"/>
        <token min="0">l'</token>
        <marker>
          <token>est</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token>l'</token>
        <marker>
          <token>est</token>
        </marker>
        <token min="0" postag="R pers obj.*" postag_regexp="yes"/>
        <token postag="V .* 3 s" postag_regexp="yes"/>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token>ouest</token>
        <token regexp="yes">-|/|et|ou</token>
        <marker>
          <token>est</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token>est</token>
        </marker>
        <token regexp="yes">-|/|et|ou</token>
        <token>ouest</token>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">[ns]e|il|elle|on</token>
        <token>l'</token>
        <marker>
          <token>est</token>
        </marker>
      </pattern>
      <disambig postag="V etre ind pres 3 s"/>
    </rule>
    <rule>
      <!-- it is a verb, unless it is tagged previously as a noun -->
      <pattern>
        <marker>
          <token postag="V etre ind pres 3 s">est</token>
        </marker>
      </pattern>
      <disambig postag="V etre ind pres 3 s"/>
    </rule>
  </rulegroup>
  <rule name="la (pronom pers))" id="LA_R">
    <pattern>
      <token postag="R pers suj.*" postag_regexp="yes"/>
      <marker>
        <token>la</token>
      </marker>
    </pattern>
    <disambig postag="R pers obj 3 f s"/>
  </rule>
  <rulegroup name="la (déterminant/pronom)" id="LA_D">
    <rule>
      <antipattern>
        <token>la</token>
        <token regexp="yes">majeur|mineur|44\d</token>
      </antipattern>
      <pattern>
        <marker>
          <token postag="[RD].*" postag_regexp="yes">la</token>
        </marker>
      </pattern>
      <disambig action="remove" postag="N m sp"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="R pers obj 3 f s">la</token>
        </marker>
        <token postag="V .*inf" postag_regexp="yes"/>
      </pattern>
      <disambig postag="R pers obj 3 f s"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="D f s">la</token>
        </marker>
        <token>
          <exception postag="V .*inf|V .*ind .*|V ppr" postag_regexp="yes"/></token>
      </pattern>
      <disambig postag="D f s"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="D f s">la</token>
        </marker>
        <token postag="A"/>
        <token postag="J.*|V.* ppa.*" postag_regexp="yes"/>  
      </pattern>
      <disambig postag="D f s"/>
    </rule>
  </rulegroup>
  <rule id="FAIT_NO_IND" name="fait (not verbe ind)">
    <pattern>
      <token inflected="yes" regexp="yes">être|avoir</token>
      <token min="0" max="4" postag="R.*|A" postag_regexp="yes"/>
      <marker>
        <token regexp="yes">fait|mis<exception scope="previous" postag="R.*" postag_regexp="yes" regexp="yes">[^\-].*</exception></token>
      </marker>
    </pattern>
    <disambig action="remove" postag="V ind.*"></disambig>
  </rule>
  <rule id="DIT_NO_IND" name="dit (not verbe ind)">
    <pattern>
      <token inflected="yes" regexp="yes">être|avoir</token>
      <token min="0" max="4" postag="R.*|A" postag_regexp="yes"/>
      <marker>
        <token>dit</token>
      </marker>
    </pattern>
    <disambig action="remove" postag="V ind.*"></disambig>
  </rule>
  <rule id="DIT" name="dit (verbe)">
    <pattern>
      <marker>
        <token postag="V ind.*" postag_regexp="yes" regexp="yes">dit|fait<exception scope="previous" inflected="yes">avoir</exception><exception scope="previous" regexp="yes">tas|ma</exception><exception scope="previous" postag="P.*" postag_regexp="yes"/></token>
      </marker>
        <token min="0" max="4" postag="A"/>
        <token regexp="yes">que|qu'</token>
    </pattern>
    <disambig action="filter" postag="V ind.*"></disambig>
  </rule>
  <rule id="DURE" name="dure (verbe)">
    <pattern>
      <marker>
        <token>dure</token>
      </marker>      
      <token postag="D.*" postag_regexp="yes"><exception postag="P|P\+.*" postag_regexp="yes"/></token>
    </pattern>
    <disambig action="filter" postag="V ind.*"></disambig>
  </rule>
  <rule id="RIEN" name="rien">
    <antipattern>
      <token regexp="yes">un|le</token>
      <token>rien</token>
    </antipattern>
    <pattern>
      <token>rien</token>
    </pattern>
    <disambig action="filter" postag="R m s"/>
  </rule>
  <rule id="FUT" name="fut">
    <antipattern>
      <token regexp="yes">un|le</token>
      <token regexp="yes">fut|fût</token>
    </antipattern>
    <pattern>
      <token regexp="yes">fut|fût</token>
    </pattern>
    <disambig action="remove" postag="N m s"/>
  </rule>
  <rule id="DEVENIR" name="devenir">
    <antipattern>
      <token postag="(P\+)?D m s" postag_regexp="yes"/>
      <token>devenir</token>
    </antipattern>
    <pattern>
      <token>devenir</token>
    </pattern>
    <disambig action="filter" postag="V inf"/>
  </rule>
  <rule id="V_IND_PPA" name="ne résout pas">
    <pattern>
      <token>ne</token>
      <marker>
        <and>
          <token postag="V ind .*" postag_regexp="yes"/>
          <token postag="V ppa .*" postag_regexp="yes"/>
        </and>
      </marker>
      <token regexp="yes">pas|point|jamais</token>
    </pattern>
    <disambig action="remove" postag="V ppa .*"/>
  </rule>
  
  <rule id="A_PRIORI" name="a priori (noun/loc adverbial)">
    <pattern>
      <token regexp="yes">ce|cet|un|le</token>
      <marker>
        <token>a</token>
        <token>priori</token>
      </marker>
    </pattern>
    <disambig action="replace">
      <wd lemma="a priori" pos="N m s"/>
      <wd lemma="a priori" pos="J m s"/>
    </disambig>
  </rule>
  <!-- So that word "faute" (etc) as in "des faute", "une fautes" is marked as
 a noun and not a verb, otherwise we don't find the incorrect
 accord in number -->
  <rulegroup name="nom" id="N">
    <rule>
      <pattern>
        <token regexp="yes">une|quelques|plusieurs</token>
        <marker>
          <token regexp="yes">étranges?|larges?|drôles?|doubles?|infimes?|triples?|quadruples?|sales?|solides?</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="J [ef] .*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">aucunes?|certaines?|différentes?|diverses?|nombreuses|nulle|telles?|une
          <exception scope="previous" regexp="yes">&apostrophe;</exception></token>
        <marker>
          <token postag="N [fe] .*" postag_regexp="yes">
            <exception regexp="yes">est|multiples|si</exception></token>
        </marker>
      </pattern>
      <disambig action="filter" postag="N [fe].*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">aucuns?|certains?|différents?|divers|nombreux|touts|un
          <exception scope="previous" regexp="yes">&apostrophe;</exception></token>
        <marker>
          <token postag="N [me] .*" postag_regexp="yes">
            <exception regexp="yes">est|multiples|si|ayant|nouveau</exception>
            <exception case_sensitive="yes">Paris</exception></token>
        </marker>
      </pattern>
      <disambig action="filter" postag="N [me].*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">chaque|sans|des?|maint|mêmes|moult|nul|plusieurs|quelques
          <exception scope="previous" regexp="yes">&apostrophe;</exception></token>
        <marker>
          <token postag="N.*" postag_regexp="yes">
            <exception regexp="yes">est|multiples|si|petite?s?|mauvais|pires?</exception>
            <exception inflected="yes">bon</exception>
            <exception postag="K"/></token>
        </marker>
      </pattern>
      <disambig action="remove" postag="V.* (imp|sub|ind) .*"/>
    </rule>
    <rule>
      <!-- "du monde", but du/dû lire-->
      <pattern>
        <token regexp="yes">du|de|d'</token>
        <marker>
          <token postag="N.*" postag_regexp="yes">
            <exception regexp="yes">est|multiples|si|petite?s?|mauvais|pires?</exception>
            <exception inflected="yes">bon</exception>
            <exception postag="K|V.* inf" postag_regexp="yes"/></token>
        </marker>
      </pattern>
      <disambig action="remove" postag="V.* (imp|sub|ind) .*"/>
    </rule>
  </rulegroup>
  <rule id="DIVERS_J" name="divers (adj, not det)">
    <pattern>
      <unify>
        <feature id="number"/>
        <feature id="gender"/>
        <token postag="N.*" postag_regexp="yes"/>
        <token postag="J.*" postag_regexp="yes" inflected="yes">divers</token>
      </unify>
    </pattern>
    <disambig action="filterall"></disambig>
  </rule>
  
  <rule id="DEVINS" name="devins (verbe)">
    <pattern>
      <marker>
        <token postag="V.*" postag_regexp="yes">devins</token>
      </marker>      
      <token postag="[JND].*" postag_regexp="yes"/>
    </pattern>
    <disambig action="remove" postag="N.*"></disambig>
  </rule>
  <rule id="AFFINE" name="affine (verbe)">
    <pattern>
      <marker>
        <token postag="V.*" postag_regexp="yes">affine</token>
      </marker>     
      <token min="0" postag="A"/>
      <token postag="[JNDC].*" postag_regexp="yes"/>
    </pattern>
    <disambig action="remove" postag="[NJ].*"></disambig>
  </rule>
  <rule id="DIPOSE" name="dispose (not adjective)">
    <antipattern>
      <token>fraîche</token>
      <token>et</token>
      <token>dispose</token>
    </antipattern>
    <antipattern>
      <token postag="D f s"/>
      <token>demeure</token>
    </antipattern>
    <pattern>
      <marker>
        <token postag="V.*" postag_regexp="yes" regexp="yes">dispose|demeure</token>
      </marker>
    </pattern>
    <disambig action="remove" postag="[JN] .*"></disambig>
  </rule>
  
  <rulegroup name="été (nom)" id="ETE">
    <rule>
      <pattern>
        <token regexp="yes">cet|en|un</token>
        <marker>
          <token>été</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token>l'</token>
        <marker>
          <token>été</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
  </rulegroup>
  <rule id="MARRE" name="marre">
    <pattern>
      <token regexp="yes">[mst]e</token>
      <marker>
        <token>marre</token>
      </marker>
    </pattern>
    <disambig action="filter" postag="V.*"/>
  </rule>
  <rule id="JUSTE_TOUS" name="juste tous">
    <pattern>
      <token regexp="yes" inflected="yes">avoir|être|puovoir|vouloir</token>
      <marker>
        <token postag="A" regexp="yes">juste|pas|point|jamai</token>
        <token postag="R.*" postag_regexp="yes" regexp="yes">tous|toutes</token>
      </marker>
      <token postag="V.* inf|V.* ppa.*" postag_regexp="yes"/>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rulegroup id="TOUS_LES_DEUX" name="tous les deux (determiner / pronoun)">
    <rule>
      <pattern>
        <marker>
          <token>tous</token>
          <token>les</token>
          <token regexp="yes">deux|trois|quatre|cinq</token>
        </marker>
        <token>
          <exception postag="[JN] .* (p|sp)" postag_regexp="yes"/></token>
      </pattern>
      <disambig action="replace">
        <wd lemma="tous les deux" pos="R m p"/>
        <wd lemma="tous les deux" pos="R m p"/>
        <wd lemma="tous les deux" pos="R m p"/>
      </disambig>  
    </rule>
    <rule>
      <pattern>
        <marker>
          <token>toutes</token>
          <token>les</token>
          <token regexp="yes">deux|trois|quatre|cinq</token>
        </marker>
        <token>
          <exception postag="[JN] .* (p|sp)" postag_regexp="yes"/></token>
      </pattern>
      <disambig action="replace">
        <wd lemma="toutes les deux" pos="R f p"/>
        <wd lemma="toutes les deux" pos="R f p"/>
        <wd lemma="toutes les deux" pos="R f p"/>
      </disambig>  
    </rule>
  </rulegroup>
  <rulegroup id="TOUS_DEUX" name="tous deux (determiner / pronoun)">
    <rule>
       <pattern>
         <marker>
           <token>tous</token>
           <token regexp="yes">deux|trois|quatre|cinq</token>
         </marker>
         <token>
           <exception postag="[JN] .* (p|sp)" postag_regexp="yes"/></token>
       </pattern>
       <disambig action="replace">
         <wd lemma="tous deux" pos="R m p"/>
         <wd lemma="tous deux" pos="R m p"/>
       </disambig>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token>toutes</token>
          <token regexp="yes">deux|trois|quatre|cinq</token>
        </marker>
        <token>
          <exception postag="[JN] .* (p|sp)" postag_regexp="yes"/></token>
      </pattern>
      <disambig action="replace">
        <wd lemma="toutes deux" pos="R f p"/>
        <wd lemma="toutes deux" pos="R f p"/>
      </disambig>
    </rule>
  </rulegroup>
  <rule name="quelque chose" id="QUELQUE_CHOSE">
    <pattern>
      <token>quelque</token>
      <marker>
        <token>chose</token>
      </marker>
    </pattern>
    <disambig postag="N m s"/>
  </rule>
  <rule name="quelque peu" id="QUELQUE_PEU">
    <pattern>
      <marker>
        <token>quelque</token>
      </marker>
      <token>peu</token>
    </pattern>
    <disambig postag="A"/>
  </rule>
  <rulegroup name="bien entendu" id="BIEN_ENTENDU">
    <rule>
      <pattern>
        <token>bien</token>
        <marker>
          <token>entendu</token>
        </marker>
      </pattern>
      <disambig postag="A"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token>bien</token>
        </marker>
        <token>entendu</token>
      </pattern>
      <disambig postag="A"/>
    </rule>
  </rulegroup>
  <rulegroup name="RP : Pronoms personnels objets" id="RP-PRO_PERS_OBJ">
    <rule name="nous">
      <pattern>
        <token postag="R pers .*" postag_regexp="yes"/>
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="le bus nous">
      <pattern>
        <token postag="SENT_START|M fin .*" postag_regexp="yes" skip="1"/>
        <token postag="D.*" postag_regexp="yes"/>
        <token postag="N.*" postag_regexp="yes"/>
        <marker>
          <token>nous</token>
        </marker>
        <token>
          <exception postag="V .+ .+ 1 p" postag_regexp="yes"/></token>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="qui nous">
      <pattern>
        <token regexp="yes">à|de|ne|chez|sur|sans|entre|parmi|tout|pour</token>
        <!--qui|-->
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="Robert nous">
      <pattern>
        <token postag="SENT_START" skip="1"/>
        <token postag="Z.*" postag_regexp="yes"/>
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="quelqu'un nous">
      <pattern>
        <token>quelqu</token>
        <token regexp="yes">&apostrophe;</token>
        <token regexp="yes">une?s?</token>
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="ça nous">
      <pattern>
        <token postag="SENT_START|M nonfin" postag_regexp="yes" skip="1"/>
        <token regexp="yes">ça|cela|ceci|ceux-ci|celles?-ci
          <exception scope="previous" postag="P"/></token>
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="que ça nous">
      <pattern>
        <token regexp="yes">quand|que|si|lorsque|où</token>
        <token regexp="yes">ça|cela|ceci|ceux-ci|celles?-ci</token>
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="sans_même nous">
      <pattern>
        <token>sans</token>
        <token>même</token>
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="L'homme nous parle">
      <pattern>
        <token postag="N . s" postag_regexp="yes"/>
        <marker>
          <token regexp="yes">vous|nous</token>
        </marker>
        <token postag="V .* 3 s" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers obj .*"/>
      <example type="ambiguous" inputform="nous[nous/R pers obj 1 p,nous/R pers suj 1 p]" outputform="nous[nous/R pers obj 1 p]">L'homme <marker>nous</marker> parle de sa vie.</example>
      <example type="untouched">La plupart du temps nous sommes dans le développement d'une expertise...</example>
    </rule>
    <rule name="Les études nous ont...">
      <pattern>
        <token postag="N . p" postag_regexp="yes"/>
        <marker>
          <token regexp="yes">vous|nous</token>
        </marker>
        <token postag="V .* 3 p" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers obj .*"/>
      <example type="ambiguous" inputform="nous[nous/R pers obj 1 p,nous/R pers suj 1 p]" outputform="nous[nous/R pers obj 1 p]">Les études <marker>nous</marker> ont révélé...</example>
      <example type="untouched">La plupart du temps nous sommes dans le développement d'une expertise...</example>
    </rule>
    <rule name="puis-je vous">
      <pattern>
        <token regexp="yes">.*-(je|tu|ils?|elles?|on|vous|nous)</token>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="puis-je nous">
      <pattern>
        <token regexp="yes">.*-(je|tu|ils?|elles?|on|vous|nous)</token>
        <marker>
          <token>nous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 1 p"/>
    </rule>
    <rule name="vous">
      <pattern>
        <token postag="R pers .*" postag_regexp="yes"/>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="le bus vous">
      <pattern>
        <token postag="SENT_START|M fin .*" postag_regexp="yes" skip="1"/>
        <token postag="D.*" postag_regexp="yes"/>
        <token postag="N.*" postag_regexp="yes"/>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="qui vous">
      <pattern>
        <token regexp="yes">à|de|ne|chez|sur|sans|entre|parmi|tout|pour</token>
        <!--qui|-->
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="qui vous">
      <pattern>
        <token>qui</token>
        <marker>
          <token>vous</token>
        </marker>
        <token postag="V .* 2 p" postag_regexp="yes"/>
      </pattern>
      <disambig postag="R pers suj 2 p"/>
    </rule>
    <rule name="Robert vous">
      <pattern>
        <token postag="SENT_START" skip="1"/>
        <token postag="Z.*" postag_regexp="yes"/>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="quelqu'un vous">
      <pattern>
        <token regexp="yes">quelqu'une?s?</token>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="vous devez le demander">
      <pattern>
        <marker>
          <token>vous</token>
        </marker>
        <token postag="V.* 2 p" postag_regexp="yes" skip="1"/>
        <token postag="V inf"/>
      </pattern>
      <disambig action="filter" postag="R pers suj 2 p"/>
    </rule>
    <rule name="ça vous">
      <pattern>
        <token postag="SENT_START|M nonfin" postag_regexp="yes" skip="1"/>
        <token regexp="yes">ça|cela|ceci|ceux-ci|celles?-ci
          <exception scope="previous" postag="P"/></token>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="R pers obj 2 p"/>
    </rule>
    <rule name="ce que vous v 3 p">
      <pattern>
        <token>ce</token>
        <token>que</token>
        <marker>
          <token regexp="yes">[nv]ous</token>
        </marker>
        <token postag="V.* 3 p" postag_regexp="yes"/>
        <token postag="D . p" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers obj [12] p"/>
    </rule>
    <rule name="ce que vous V 3 s">
      <pattern>
        <token>ce</token>
        <token>que</token>
        <marker>
          <token regexp="yes">[nv]ous</token>
        </marker>
        <token postag="V.* 3 s" postag_regexp="yes"/>
        <token postag="D . s|Z .*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers obj [12] p"/>
    </rule>
    <rule name="ce que ne vous V 3 p">
      <pattern>
        <token>ce</token>
        <token>que</token>
        <token>ne</token>
        <marker>
          <token regexp="yes">[nv]ous</token>
        </marker>
        <token postag="V.* 3 p" postag_regexp="yes"/>
        <token regexp="yes">pas|plus</token>
        <token postag="D . p" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers obj [12] p"/>
    </rule>
    <rule name="ce que vous V 3 s">
      <pattern>
        <token>ce</token>
        <token>que</token>
        <token>ne</token>
        <marker>
          <token regexp="yes">[nv]ous</token>
        </marker>
        <token postag="V.* 3 s" postag_regexp="yes"/>
        <token regexp="yes">pas|plus</token>
        <token postag="D . s|Z .*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers obj [12] p"/>
    </rule>
    <rule name="que ça vous">
      <pattern>
        <token regexp="yes">quand|que|si|lorsque|où</token>
        <token regexp="yes">ça|cela|ceci|ceux-ci|celles?-ci</token>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="sans_même vous">
      <pattern>
        <token>sans</token>
        <token>même</token>
        <marker>
          <token>vous</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 2 p"/>
    </rule>
    <rule name="se">
      <pattern>
        <marker>
          <token>s</token>
        </marker>
        <token regexp="yes">&apostrophe;</token>
        <token postag="V.*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="R pers obj 3 sp"/>
    </rule>
    <rule name="te">
      <pattern>
        <marker>
          <token>t</token>
        </marker>
        <token regexp="yes">&apostrophe;</token>
        <token postag="V.*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="R pers obj 2 s"/>
    </rule>
    <rule name="m'">
      <pattern>
        <marker>
          <token>m</token>
        </marker>
        <token regexp="yes">&apostrophe;</token>
        <token postag="V.*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="R pers obj 1 s"/>
    </rule>
    <rule name="lui">
      <pattern>
        <marker>
          <token>lui</token>
        </marker>
      </pattern>
      <disambig postag="R 3 s"/>
    </rule>
    <rule name="lui (R pers)">
      <pattern>
        <token regexp="yes">[lnj]e|tu|ils?|elles?|on|[nv]ous|la</token>
        <marker>
          <token>lui</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 3 m s"/>
    </rule>
    <rule>
      <pattern>
        <token postag="[NZR].*" postag_regexp="yes"/>
        <marker>
          <token>leur</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 3 p="/>
    </rule>
    <rule>
      <pattern>
        <token>ne</token>
        <marker>
          <token>leur</token>
        </marker>
      </pattern>
      <disambig postag="R pers obj 3 p"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="D e s">leur</token>
        </marker>
        <token postag="[NJ].*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="D e s"/>
    </rule>
    <rule name="le/la/les/l'">
      <pattern>
        <token postag="R pers suj .*" postag_regexp="yes"/>
        <marker>
          <token postag="R pers obj .*" postag_regexp="yes" regexp="yes">l|la|le|les</token>
        </marker>
      </pattern>
      <disambig>
        <match no="2" postag_regexp="yes" postag="R pers obj .*"/>
      </disambig>
    </rule>
    <rule name="ne + le/la/les/l'">
      <pattern>
        <token postag="R pers suj .*" postag_regexp="yes"/>
        <token>ne</token>
        <marker>
          <token postag="R pers obj .*" postag_regexp="yes" regexp="yes">l|la|le|les</token>
        </marker>
      </pattern>
      <disambig>
        <match no="3" postag_regexp="yes" postag="R pers obj .*"/>
      </disambig>
    </rule>
  </rulegroup>
  <rulegroup name="RP : Pronoms personnels sujets" id="RP-PRO_PERS_SUJ">
    <!--<rule name="j'">
      <pattern>
        <marker>
          <token>j</token>
        </marker>
      </pattern>
      <disambig postag="R pers suj 1 s"/>
    </rule>-->
    <rule name="tu">
      <pattern>
        <marker>
          <token>tu</token>
        </marker>
        <token postag="V.*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="R pers suj 2 s"/>
    </rule>
    <rule name="tu te/ne">
      <pattern>
        <marker>
          <token>tu</token>
        </marker>
        <token regexp="yes">[mntl][e']|la|lui|leur|[nv]ous</token>
      </pattern>
      <disambig postag="R pers suj 2 s"/>
    </rule>
    <rule name="nous a-t-elle">
      <pattern>
        <marker>
          <token regexp="yes">[nv]ous</token>
        </marker>
        <token regexp="yes" min="0">le|l'|la|les</token>
        <token postag="V.*" postag_regexp="yes"/>
        <token postag="R pers suj.*" postag_regexp="yes" spacebefore="no"/>
      </pattern>
      <disambig action="filter" postag="R pers obj.*"/>
    </rule>
    <rule name="Nous">
      <pattern>
        <token postag="SENT_START"/>
        <marker>
          <token regexp="yes">nous|vous</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="R pers suj [12] p"/>
    </rule>
    <rule name="que nous offre la nature">
      <pattern>
        <token>que</token>
        <marker>
          <token postag="R pers obj [21] p" postag_regexp="yes" regexp="yes">nous|vous</token>
        </marker>
        <token postag="V.* 3 s" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers obj [12] p"/>
    </rule>
    <rule name="que nous">
      <pattern>
        <token>que</token>
        <marker>
          <token postag="R pers suj [21] p" postag_regexp="yes" regexp="yes">nous|vous</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="R pers suj [12] p"/>
    </rule>
    <rule name="nous croyons">
      <pattern>
        <marker>
          <token>nous</token>
        </marker>
        <token postag="V .* 1 p" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="R pers suj 1 p"/>
    </rule>
  </rulegroup>
  <rulegroup name="RP : étais" id="RP-ETAIS">
    <rule name="j'étais">
      <pattern>
        <token postag="R pers suj 1 s" skip="1"/>
        <marker>
          <token>étais</token>
        </marker>
      </pattern>
      <disambig postag="V etre ind impa 1 s"/>
    </rule>
    <rule name="tu étais">
      <pattern>
        <token skip="1">tu</token>
        <marker>
          <token>étais</token>
        </marker>
      </pattern>
      <disambig postag="V etre ind impa 2 s"/>
    </rule>
  </rulegroup>
  <rulegroup name="ne + verbe" id="NE_V">
    <rule>
      <pattern>
        <token regexp="yes">ne|je|tu|ils?|on|y|cela|ceci</token>
        <marker>
          <token postag="V.*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig>
        <match no="1" postag_regexp="yes" postag="V.*"/>
      </disambig>
    </rule>
    <rule>
      <pattern>
        <token>n</token>
        <token regexp="yes">&apostrophe;</token>
        <marker>
          <token postag="V.*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig>
        <match no="2" postag_regexp="yes" postag="V.*"/>
      </disambig>
    </rule>
  </rulegroup>
  <rulegroup id="SON" name="non (nom)">
    <rule>
      <pattern>
        <token regexp="yes">le|un|au|du|[mts]on</token>
        <marker>
          <token>son</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token>son</token>
        </marker>
        <token>de</token>
        <token regexp="yes">cloches?</token>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token>son</token>
        </marker>
        <token>d</token>
        <token regexp="yes">&apostrophe;</token>
        <token regexp="yes">instruments?</token>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
  </rulegroup>
  <rule name="RP : En + participe présent" id="RP-EN_VPPR">
    <pattern>
      <token>en</token>
      <marker>
        <token postag="V ppr"/>
      </marker>
    </pattern>
    <disambig>
      <match no="1" postag="V ppr"/>
    </disambig>
  </rule>
  <rulegroup name="RP : mon/ton/son" id="RP-MON_TON_SON">
    <rule name="mon">
      <pattern>
        <marker>
          <token regexp="yes" postag="N m s" negate_pos="yes">[mts]on</token>
        </marker>
      </pattern>
      <disambig postag="D e s"/>
    </rule>
  </rulegroup>
  <rule id="AVEC_N" name="avec + verb/nom">
    <pattern>
      <token>avec</token>
      <marker>
        <and>
          <token postag="N.*" postag_regexp="yes"/>
          <token postag="V.*" postag_regexp="yes"/>
        </and>
      </marker>
    </pattern>
    <disambig action="filter" postag="[^V].*"/>
  </rule>
  <rulegroup name="RP : Négation" id="RP-NEGATION">
    <rule name="pas">
      <pattern>
        <token regexp="yes" skip="3">ne|n</token>
        <marker>
          <token regexp="yes">pas|point|plus|jamais</token>
        </marker>
      </pattern>
      <disambig postag="A"/>
    </rule>
    <rule name="ne">
      <pattern>
        <marker>
          <token regexp="yes" skip="3">ne?</token>
        </marker>
        <token regexp="yes">pas|point|plus|jamais</token>
      </pattern>
      <disambig postag="A"/>
    </rule>
  </rulegroup>
  <rule id="FAIRE_PARTIE" name="faire partie">
    <pattern>
      <token postag="V.*" postag_regexp="yes" inflected="yes">faire</token>
      <token postag="N f s">partie</token>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rule id="FAIRE_INF" name="faire + inf">
    <pattern>
      <token postag="V.*" postag_regexp="yes" inflected="yes">faire</token>
      <token postag="V inf"/>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rulegroup id="DONNER" name="donner (verbe)">
    <rule>
      <pattern>
        <marker>
          <token postag="V.*" postag_regexp="yes" inflected="yes">donner</token>
        </marker>
        <token>droit</token>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  <rule name="en pensant" id="EN_PENSANT">
    <pattern>
      <marker>
        <token>en</token>
      </marker>
      <token postag="V ppr"/>
    </pattern>
    <disambig action="filter" postag="P"/>
  </rule>
  <rulegroup id="AVOIR_PARTICIPE" name="avoir + participe">
    <rule>
      <pattern>
        <token inflected="yes">avoir</token>
        <token min="0" max="3" postag="A|R.*" postag_regexp="yes"><exception inflected="yes" regexp="yes">un|ce|plusieurs</exception></token>
        <marker>
          <token postag="V.* ppa .*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* ppa .*"/>      
    </rule>
    <rule>
      <pattern>
        <marker>
          <token inflected="yes" regexp="yes">avoir|rester</token>
        </marker>
        <token min="0" max="3" postag="A|R.*" postag_regexp="yes"><exception inflected="yes" regexp="yes">un|ce|plusieurs</exception></token>
        <token postag="V.* ppa .*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="V.*"/>      
    </rule>
  </rulegroup>
  <rule id="AVIONS" name="avions">
    <pattern>
      <marker>
        <token postag="D.*" postag_regexp="yes">les</token>
        <token postag="N.*" postag_regexp="yes">avions</token>
      </marker>
      <token>
        <exception postag="V.* ppa .*" postag_regexp="yes"/></token>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rule id="PERSONNE" name="personne">
    <pattern>
      <token postag="P|D f s" postag_regexp="yes"/>
      <marker>
        <token>personne</token>
      </marker>
    </pattern>
    <disambig action="remove" postag="R m s"/>
  </rule>
  <rule name="Pronoun + verb" id="PRON_VERB">
    <!-- FIXME: this is not precise -->
    <pattern>
      <token postag="R .*" postag_regexp="yes"/>
      <token postag="V .*" postag_regexp="yes">
        <exception postag="V .*" postag_regexp="yes" negate_pos="yes"/></token>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rulegroup name="Pronoun + Pronoun + verb" id="PRON_PRON_VERB">
    <rule>
      <pattern>
        <token postag="R .*" postag_regexp="yes"/>
        <token postag="R .*" postag_regexp="yes"/>
        <token postag="V .*" postag_regexp="yes">
          <exception postag="V .*" postag_regexp="yes" negate_pos="yes"/></token>
      </pattern>
      <disambig action="filterall"/>
    </rule>
    <rule>
      <pattern>
        <token postag="R pers .*" postag_regexp="yes">
          <exception regexp="yes">y|-.*</exception></token>
        <token postag="R pers .*" postag_regexp="yes"/>
        <token postag="V.* [123].*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filterall"/>
    </rule>
    <rule>
      <pattern>
        <token postag="R.*" postag_regexp="yes">y</token>
        <token postag="R.*" postag_regexp="yes">en</token>
        <token postag="V.*" postag_regexp="yes" inflected="yes">avoir</token>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  <rulegroup name="RP : Infinitif ambigu" id="RP-INFINITIF">
    <rule name="Infinitif être">
      <pattern>
        <token postag="V.*" postag_regexp="yes"/>
        <marker>
          <token postag="V etre inf"/>
        </marker>
      </pattern>
      <disambig postag="V etre inf"/>
    </rule>
    <rule name="Infinitif avoir">
      <pattern>
        <token postag="V .*" postag_regexp="yes"/>
        <marker>
          <token postag="V avoir inf"/>
        </marker>
      </pattern>
      <disambig postag="V avoir inf"/>
    </rule>
  </rulegroup>
  
  <rulegroup id="BON" name="bon (adj)">
    <rule>
      <pattern>
        <unify>
          <feature id="number"/>
          <feature id="gender"/>
            <token postag="D.*" postag_regexp="yes"/>
            <marker>
              <token postag="J.*" postag_regexp="yes" inflected="yes" regexp="yes">bon|meilleur</token>
            </marker>
            <token postag="N.*" postag_regexp="yes"/>
        </unify>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  
  <rulegroup id="DE_P_D" name="de (prep / det )">
    <rule>
      <pattern>
        <token postag="V.*" postag_regexp="yes"><exception inflected="yes">venir|remplir|couvrir|entourer|mourir|trembler|manquer|dépendre|douter|servir|moquer|rêver|méfier</exception></token>
        <unify>
          <feature id="number"/>
          <feature id="gender"/>
          <marker>
            <token postag="D.*" postag_regexp="yes" regexp="yes">de|du|d'|des</token>
          </marker>
          <token postag="J.*" postag_regexp="yes"/>
          <token postag="N.*" postag_regexp="yes">
            <exception regexp="yes">dans|envers|mais|plus|non|contre</exception>
            <exception inflected="yes" regexp="yes">avoir|être</exception></token>
        </unify>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  
  
  <rule name="RP : Det + Adj + Nom" id="RP-D_J_AMBIG_N">
    <pattern>
      <unify>
        <feature id="number"/>
        <feature id="gender"/>
        <token postag="D.*" postag_regexp="yes"><exception regexp="yes">de|du|d'|des</exception></token>
        <token postag="J.*" postag_regexp="yes"/>
        <token postag="N.*" postag_regexp="yes">
          <exception regexp="yes">dans|envers|mais|plus|non|contre</exception>
          <exception inflected="yes" regexp="yes">avoir|être</exception></token>
      </unify>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rule id="OSER_ING" name="oser + inf">
    <pattern>
      <marker>
        <token inflected="yes">oser</token>
      </marker>
      <token postag="V inf"/>
    </pattern>
    <disambig action="filter" postag="V.*"/>
  </rule>
  <rulegroup id="ETRE" name="être">
    <rule id="ETRE_PP" name="être + PP">
      <pattern>
        <marker>
          <token postag="V.*" postag_regexp="yes" inflected="yes">être</token>
        </marker>
        <token postag="V ppa.*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="V.*"/>
    </rule>
    <rule>
      <antipattern>
        <token postag="P.*|D.*" postag_regexp="yes"/>
        <token>est</token>
      </antipattern>
      <antipattern>
        <token>
          <exception postag="SENT_START"/></token>
        <token case_sensitive="yes">Est</token>
      </antipattern>
      <pattern>
        <marker>
          <token postag="V.*" postag_regexp="yes">est</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.*"/>
    </rule>
  </rulegroup>
  <rulegroup id="AVOIR_PP" name="avoir + pp">
    <rule>
      <pattern>
        <token regexp="yes">l'|les</token>
        <marker>
          <token inflected="yes">avoir</token>
        </marker>
        <token postag="V ppa .*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="V.*"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token skip="2">ayant</token>
        </marker>
        <token postag="V ppa .*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="V.*"/>
    </rule>
    <rule name="qu'as donc tu fait">
      <pattern>
        <unify>
          <feature id="number"/>
          <feature id="person"/>
          <token inflected="yes">avoir</token>
          <unify-ignore>
            <token min="0">donc</token>
          </unify-ignore>
          <token postag="R pers suj.*" postag_regexp="yes"/>
        </unify>
        <marker>
          <token postag="V ppa .*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V ppa.*"/>
    </rule>
  </rulegroup>
  <rule id="LEUR" name="leur (unusually noun)">
    <pattern>
      <marker>
        <token inflected="yes">leur</token>
      </marker>
    </pattern>
    <disambig action="remove" postag="N.*"/>
  </rule>
  <rulegroup id="LE_POUVOIR" name="le pouvoir">
    <rule>
      <antipattern>
        <token>pouvoir</token>
        <token postag="V .*inf" postag_regexp="yes"/>
      </antipattern>
      <pattern>
        <token postag="D m s" regexp="yes">le|leur</token>
        <token postag="N m s">pouvoir</token>
      </pattern>
      <disambig action="filterall"/>
    </rule>
    <rule>
      <pattern>
        <token postag="D [me] s" postag_regexp="yes" regexp="yes">son|ton|mon|notre|votre</token>
        <token postag="N m s">pouvoir</token>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  <rulegroup id="POUVOIR_INFINITIF" name="pouvoir + infinitif">
    <rule>
      <pattern>
        <token postag="V.*" postag_regexp="yes" inflected="yes">pouvoir</token>
        <token postag="V.* inf" postag_regexp="yes"/>
      </pattern>
      <disambig action="filterall"/>
    </rule>
    <rule>
      <!--<antipattern>
        <!-\- error: missing hyphen -\->
        <token postag="V.* 1 p" inflected="yes">pouvoir</token>
        <token skip="-1">nous</token>
        <token>?</token>
      </antipattern>-->
      <pattern>
        <token postag="V.*" postag_regexp="yes" inflected="yes">pouvoir</token>
        <token postag="R pers obj.*" postag_regexp="yes"/>
        <token postag="V.* inf" postag_regexp="yes"/>
      </pattern>
      <disambig action="filterall"/>
    </rule>
    <rule>
      <pattern>
        <token postag="V.*" postag_regexp="yes" inflected="yes">pouvoir</token>
        <token postag="A">pas</token>
        <token postag="R pers obj.*" postag_regexp="yes"/>
        <token postag="V.* inf" postag_regexp="yes"/>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  <rulegroup id="PRONOM_SUJET_VERB" name="pronom sujet + verb">
    <rule>
      <pattern>
        <token regexp="yes">je|tu|ils?|on</token>
        <token inflected="yes" min="0">ne</token>
        <marker>
          <token postag="V.* (ind|sub|con).*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* (ind|sub|con).*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">je|tu|ils?|on</token>
        <token inflected="yes" min="0">ne</token>
        <token postag="R pers obj.*" postag_regexp="yes" regexp="yes">[lmst][e']|lui|leur|[nv]ous|la|le|les</token>
        <marker>
          <token postag="V.* (ind|sub|con).*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* (ind|sub|con).*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">je|tu|ils?|on</token>
        <token inflected="yes" min="0">ne</token>
        <token postag="R pers obj.*" postag_regexp="yes" regexp="yes">[lmst]'|lui|leur|[nv]ous|la|le|les</token>
        <token postag="R pers obj.*" postag_regexp="yes" regexp="yes">y|en</token>
        <marker>
          <token postag="V.* (ind|sub|con).*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* (ind|sub|con).*"/>
    </rule>
  </rulegroup>
  <rule name="RP : Det + Nom ambigu" id="RP-D_N_AMBIG">
    <antipattern>
      <token postag="R pers .*" postag_regexp="yes"/>
      <token postag="V .*inf" postag_regexp="yes"/>
    </antipattern>
    <pattern>
      <unify>
        <feature id="number"/>
        <feature id="gender"/>
        <token postag="(P\+)?D.*" postag_regexp="yes">
          <exception>même</exception>
          <exception postag="P"/></token>
        <token postag="N.*|J.*|V ppa.*" postag_regexp="yes">
          <exception regexp="yes">a|dans|envers|si|fut|plus|avoir|fait</exception>
          <exception postag="K"/>
          <exception postag="J e sp"/></token>
      </unify>
    </pattern>
    <disambig action="filterall"/>
    <example type="untouched">Ils sont parti.</example>
    <example type="untouched">Ça le fait.</example>
    <example type="ambiguous" inputform="livre[livre/N e s,livrer/V imp pres 2 s,livrer/V ind pres 1 s,livrer/V ind pres 3 s,livrer/V sub pres 1 s,livrer/V sub pres 3 s]" outputform="livre[livre/N e s]">Il a enfin publié son <marker>livre</marker>.</example>
  </rule>
  <!-- TODO: tu ne l'as; l'avoir rencontrée -->
  <!-- This is to catch frequent errors such as "J'ai manger" which would not
         be caught without disambiguation as "manger" can also be a noun -->
  <rulegroup name="Etre/Avoir + verb" id="ETRE_AVOIR_V_ER">
    <rule>
      <pattern>
        <token postag="V avoir .*" postag_regexp="yes"/>
        <marker>
          <token regexp="yes" postag="V inf">.*er</token>
        </marker>
      </pattern>
      <disambig postag="V inf"/>
    </rule>
    <rule>
      <pattern>
        <token postag="V avoir .*" postag_regexp="yes"/>
        <token regexp="yes">assez|beaucoup|bien|déjà|encore|enfin|énormément|guerre|mieux|moins|parfois|pas|peu|peut-être|plus|presque|toujours|très|trop</token>
        <marker>
          <token regexp="yes" postag="V inf">.*er</token>
        </marker>
      </pattern>
      <disambig postag="V inf"/>
    </rule>
    <rule>
      <pattern>
        <token postag="V avoir .*" postag_regexp="yes"/>
        <token regexp="yes">assez|beaucoup|déjà|pas|plus|presque|peut-être|jamais|toujours|très|trop</token>
        <token regexp="yes">assez|beaucoup|bien|encore|énormément|peu|plus|très|trop</token>
        <marker>
          <token regexp="yes" postag="V inf">.*er</token>
        </marker>
      </pattern>
      <disambig postag="V inf"/>
    </rule>
  </rulegroup>
  <rule id="avoir_trait_a" name="avoir trait à">
    <pattern>
      <token inflected="yes">avoir</token>
      <token postag="N m s">trait</token>
      <token postag="P">à</token>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rulegroup name="RP : Etre/avoir + participe passé ambigu" id="RP-ETRE_AVOIR_VPPA_AMBIG">
    <rule>
      <pattern>
        <token postag="V etre .*|V avoir .*" postag_regexp="yes"/>
        <marker>
          <token postag="V ppa .*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig>
        <match no="2" postag_regexp="yes" postag="V ppa .*"/>
      </disambig>
    </rule>
    <rule>
      <pattern>
        <token postag="V etre .*|V avoir .*" postag_regexp="yes"/>
        <token postag="A"/>
        <marker>
          <token postag="V ppa .*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig>
        <match no="3" postag_regexp="yes" postag="V ppa .*"/>
      </disambig>
    </rule>
    <rule>
      <pattern>
        <token postag="V etre .*|V avoir .*" postag_regexp="yes"/>
        <token postag="A"/>
        <token postag="A"/>
        <marker>
          <token postag="V ppa .*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig>
        <match no="4" postag_regexp="yes" postag="V ppa .*"/>
      </disambig>
    </rule>
    <rule name="avoir été">
      <pattern>
        <token postag="V avoir .*" postag_regexp="yes" skip="2"/>
        <marker>
          <token>été
            <exception scope="previous" postag="D m s"/></token>
        </marker>
      </pattern>
      <disambig action="replace">
        <wd lemma="être" pos="V etre ppa e sp"/>
      </disambig>
    </rule>
    <rule name="avoir été">
      <pattern>
        <token regexp="yes">.*[-‑‐](?:je|tu|ils?|elles?|on|[nv]ous)</token>
        <marker>
          <token>été</token>
        </marker>
      </pattern>
      <disambig action="replace">
        <wd lemma="être" pos="V etre ppa e sp"/>
      </disambig>
    </rule>
  </rulegroup>
  <rulegroup name="RP : Que" id="RP-QUE">
    <rule name="que relatif">
      <pattern>
        <token postag="N.*" postag_regexp="yes"/>
        <marker>
          <token regexp="yes">que|qu'</token>
        </marker>
      </pattern>
      <disambig postag="R rel e sp"/>
    </rule>
    <rule name="que conjonction sub">
      <pattern>
        <token postag="V.*|A" postag_regexp="yes"/>
        <marker>
          <token regexp="yes">que|qu'</token>
        </marker>
      </pattern>
      <disambig postag="C sub"/>
    </rule>
  </rulegroup>
  <rule name="RP : Indicatif être (suis est sommes)" id="RP-SUIS_EST_SOMMES">
    <pattern>
      <token postag="R pers suj .*|J.*|N.*|A" postag_regexp="yes"/>
      <marker>
        <token postag="V etre ind pres .*" postag_regexp="yes"/>
      </marker>
    </pattern>
    <disambig>
      <match no="2" postag_regexp="yes" postag="V etre ind pres .*"/>
    </disambig>
  </rule>
  <rule id="SOMMER_ETRE" name="sommer être">
    <pattern>
      <marker>
        <token>sommes</token>
      </marker>
      <token spacebefore="no">-nous</token>
    </pattern>
    <disambig action="filter" postag=".* 1 p"/>
  </rule>
  <rule name="RP : Indicatif avoir (as a ont)" id="RP-AS_A_ONT">
    <pattern>
      <token postag="R pers suj .*|J.*|N.*|A" postag_regexp="yes"/>
      <marker>
        <token postag="V avoir ind pres .*" postag_regexp="yes"/>
      </marker>
    </pattern>
    <disambig>
      <match no="2" postag_regexp="yes" postag="V avoir ind pres .*"/>
    </disambig>
  </rule>
  <rule name="assez bien + adj" id="ASSEZ_BIEN_ADJ">
    <pattern>
      <marker>
        <token postag="A" regexp="yes">assez|encore</token>
        <token postag="A">bien</token>  
      </marker>
      <token postag="J .*" postag_regexp="yes"/>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rulegroup name="RP : Être + adj ambigu" id="RP-ETRE_ADJ_AMBIG">
    <rule>
      <pattern>
        <token postag="V etre .*" postag_regexp="yes"/>
        <marker>
          <token postag="J.*" postag_regexp="yes">
            <exception>torse</exception></token>
        </marker>
      </pattern>
      <disambig>
        <match no="2" postag_regexp="yes" postag="J.*"/>
      </disambig>
    </rule>
    <rule>
      <pattern>
        <token postag="V etre .*" postag_regexp="yes"/>
        <token postag="A"/>
        <marker>
          <token postag="J.*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig>
        <match no="3" postag_regexp="yes" postag="J.*"/>
      </disambig>
    </rule>
    <rule>
      <pattern>
        <token postag="V etre .*" postag_regexp="yes"/>
        <token postag="A"/>
        <token postag="A"/>
        <marker>
          <token postag="J.*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig>
        <match no="4" postag_regexp="yes" postag="J.*"/>
      </disambig>
    </rule>
  </rulegroup>
  <!--<rule name="RB : le la les" id="RB-LE_LA_LES">
    <antipattern>
      <token postag="R pers .*" postag_regexp="yes"/>
      <token postag="V .*inf" postag_regexp="yes"/>
    </antipattern>
    <pattern>
      <marker>
        <token postag="D.*" postag_regexp="yes" regexp="yes">l|la|le|les</token>
      </marker>
      <token postag="[NJ].*" postag_regexp="yes"><exception>fait</exception></token>
    </pattern>
    <disambig><match no="1" postag_regexp="yes" postag="D.*"/></disambig>
  </rule>-->
  <rule name="la_le_les_leur (déterminant)" id="LA_LE_LES_LEUR_D">
    <pattern>
      <token postag="P"><exception>comme</exception></token>
      <marker>
        <token regexp="yes">la|les?|leurs?</token>
      </marker>
    </pattern>
    <disambig action="filter" postag="D.*"/>
  </rule>
  <rule name="en (no preposition)" id="EN_NO_PREPOSITION">
    <pattern>
      <marker>
        <token>en</token>
      </marker>
      <token postag="V (sub|ind|con).*" postag_regexp="yes">
        <exception>fait</exception>
        <exception postag="N.*" postag_regexp="yes"/></token>
    </pattern>
    <disambig action="remove" postag="P"/>
  </rule>
  <rule id="du_dessous" name="dessous (not preposition)">
    <pattern>
      <token postag="P.*" postag_regexp="yes"/>
      <marker>
        <token>dessous</token>
      </marker>
    </pattern>
    <disambig action="remove" postag="P"/>
  </rule>
  <rule id="entre" name="entre-t-il, entre (not preposition)">
    <pattern>
      <token postag="V.*" postag_regexp="yes"/>
      <token postag="R .*" postag_regexp="yes" regexp="yes">-.*</token>
    </pattern>
    <disambig action="filterall"/>
  </rule>
  <rule id="SUIVANT" name="suivant (préposition)">
    <pattern>
      <marker>
        <token>suivant</token>  
      </marker>
      <token postag="[DJ].*" postag_regexp="yes"/>
    </pattern>
    <disambig postag="P"/>
  </rule>
  <rulegroup name="RB : Infinitif" id="RB-INFINITIF">
    <rule name="infinitif être">
      <pattern>
        <marker>
          <token postag="V etre inf"/>
        </marker>
      </pattern>
      <disambig postag="V etre inf"/>
    </rule>
    <rule name="infinitif avoir">
      <pattern>
        <marker>
          <token postag="V avoir inf"/>
        </marker>
      </pattern>
      <disambig postag="V avoir inf"/>
    </rule>
  </rulegroup>
  <rulegroup name="RB : Pro pers + V" id="RB-PRO_PERS_V">
    <rule name="je + verbe">
      <pattern>
        <token regexp="yes">je|j'</token>
        <marker>
          <token postag="V.* 1 s" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* 1 s"/>
    </rule>
    <rule name="tu + verbe">
      <pattern>
        <token>tu</token>
        <marker>
          <token postag="V.* 2 s" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* 2 s"/>
    </rule>
    <rule name="ne t' + verbe">
      <pattern>
        <token postag="SENT_START"/>
        <token>ne
          <exception scope="previous" postag_regexp="yes" postag="R pers suj.*"/></token>
        <token>t'</token>
        <marker>
          <token postag="V.* 2 s" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* 2 s"/>
    </rule>
    <rule name="il/elle/on + verbe ">
      <pattern>
        <token regexp="yes">il|elle|on</token>
        <marker>
          <token postag="V.* 3 s" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* 3 s"/>
    </rule>
    <rule name="ils/elles + verbe ">
      <pattern>
        <token regexp="yes">ils|elles</token>
        <marker>
          <token postag="V.* 3 p" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.* 3 p"/>
    </rule>
  </rulegroup>
  <rulegroup id="imperative" name="imperative">
    <rule>
      <pattern>
        <token postag="SENT_START"/>
        <token inflected="yes">ne</token>
        <token min="0" max="1" regexp="yes">[lmt][e']|[nv]ous|les|la|leur|lui</token>
        <marker>
          <token postag_regexp="yes" postag="V.* (imp|ppr).*"/>
        </marker>
        <token regexp="yes">pas|plus|jamais|rien</token>
      </pattern>
      <disambig action="filter" postag="V.* (imp|ppr).*"/>
    </rule>
    <rule>
      <pattern>
        <token postag="SENT_START"/>
        <token inflected="yes">ne</token>
        <!-- 2 token (not all combinations are possible) -->
        <token postag="R pers obj.*" postag_regexp="yes" min="1" max="2"/>
        <marker>
          <token postag_regexp="yes" postag="V.* (imp|ppr).*"/>
        </marker>
        <token regexp="yes">pas|plus</token>
      </pattern>
      <disambig action="filter" postag="V.* (imp|ppr).*"/>
    </rule>
    <rule>
      <pattern>
        <token postag="SENT_START"/>
        <token>ne</token>
        <!-- 3 token -->
        <token regexp="yes">[mtl]'</token>
        <token regexp="yes">y|en</token>
        <marker>
          <token postag_regexp="yes" postag="V.* (imp|ppr).*"/>
        </marker>
        <token regexp="yes">pas|plus</token>
      </pattern>
      <disambig action="filter" postag="V.* (imp|ppr).*"/>
    </rule>
  </rulegroup>
  <rulegroup id="not_imperative" name="not imperative">
    <rule>
      <pattern>
        <token postag="R pers.*" postag_regexp="yes">
          <exception regexp="yes">-.*</exception></token>
        <marker>
          <token postag="V .*" postag_regexp="yes"/>
        </marker>
      </pattern>
      <disambig action="remove" postag="V.* imp .*"/>
    </rule>
  </rulegroup>
  <rule name="RD : ambig J/N" id="RD-ADJ_NOM">
    <pattern>
      <token postag="A"/>
      <marker>
        <and>
          <token postag="J.*" postag_regexp="yes"/>
          <token postag="N.*" postag_regexp="yes"/>
        </and>
      </marker>
    </pattern>
    <disambig>
      <match no="1" postag_regexp="yes" postag="J.*"/>
    </disambig>
  </rule>
  <rulegroup id="COMME" name="comme (not adverb)">
    <!-- adverb: Comme vous y allez ! -->
    <rule>
      <pattern>
        <token>comme</token>
      </pattern>
      <disambig action="remove" postag="A"/>
    </rule>
    <rule>
      <pattern>
        <token>comme</token>
      </pattern>
      <disambig action="remove" postag="P"/>
    </rule>
  </rulegroup>
  <rulegroup id="SI" name="si (noun, adverb, conjunction...)">
    <!-- TODO: needs to be improved -->
    <rule>
      <pattern>
        <marker>
          <token>si</token>
        </marker>
        <token postag="J.*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="A"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="C sub">si</token>
        </marker>
        <token postag="R.*" postag_regexp="yes" min="1" max="4"/>
        <token postag="V.*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filter" postag="C sub"/>
    </rule>
    <!-- default: A (it seems the most usual) -->
    <rule>
      <pattern>
        <marker>
          <token postag="A">si</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="A"/>
    </rule>
  </rulegroup>
  <rulegroup id="TOUTES_LES" name="toutes les">
    <rule>
      <pattern>
        <marker>
          <token inflected="yes">tout</token>
        </marker>
        <token inflected="yes">le</token>
      </pattern>
      <disambig action="remove" postag="A"/>
    </rule>
    <rule>
      <pattern>
        <unify>
          <feature id="gender"/>
          <feature id="number"/>
          <token postag="D.*" postag_regexp="yes" inflected="yes">tout</token>
          <token postag="D.*" postag_regexp="yes" inflected="yes">le</token>
        </unify>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  <rulegroup id="TOUT-ADVERB" name="tout (adverb)">
    <rule>
      <pattern>
        <unify>
          <feature id="gender"/>
          <feature id="number"/>
          <token postag="(P\+)?D.*" postag_regexp="yes"/>
          <unify-ignore>
            <marker>
              <token postag="A" regexp="yes">tout|complètement</token>
            </marker>
          </unify-ignore>
          <token postag="[NJ].*" postag_regexp="yes"/>
        </unify>
      </pattern>
      <disambig action="filter" postag="A"/>
    </rule>
  </rulegroup>
  <rule id="ENSEMBLE" name="ensemble (adverb)">
    <pattern>
      <token regexp="yes">tous|toutes</token>
      <marker>
        <token postag="A">ensemble</token>
      </marker>
    </pattern>
    <disambig action="filter" postag="A"/>
  </rule>
  <rule id="PARMI" name="parmi (prep)">
   <!-- rare or old as adverb-->    
    <pattern>
      <marker>
        <token regexp="yes">parmi|selon|hors</token>
      </marker>
    </pattern>
    <disambig postag="P"/>  
  </rule>
  <rule id="DERRIERE" name="derrière (prep)">
    <pattern>
      <marker>
        <token>derrière</token>
      </marker>
      <token min="0">-</token>
      <token regexp="yes">-?(lui|eux|elle|elles|nous|vous|moi|toi|soi)</token>
    </pattern>
    <disambig postag="P"/>  
  </rule>
  <rule id="PENDANT" name="pendant (prep)">
    <pattern>
      <marker>
        <token>pendant</token>
      </marker>
      <token postag="D.*" postag_regexp="yes"/>
    </pattern>
    <disambig postag="P"/>  
  </rule>
  <rule id="DEPUIS" name="depuis (prep)">
    <antipattern>
      <token>depuis</token>
      <token postag="M.*" postag_regexp="yes"/>
    </antipattern>
    <pattern>
      <token>depuis<exception postag="SENT_END"/></token>
    </pattern>
    <disambig postag="P"/>
  </rule>
  <rule name="RB : adverbes" id="RB-ADVERBES">
    <!-- TODO: very poor rule -->
    <antipattern>
      <!-- important to recognize "tout" as a D for common agreement errors, as in "toute homme"-->
      <token inflected="yes">tout</token>
      <token postag="N.*" postag_regexp="yes"/>
    </antipattern>
    <antipattern>
      <token regexp="yes">tout|frais</token>
      <token regexp="yes">de|d'|des</token>
    </antipattern>
    <pattern>
      <marker>
        <token postag="A">
          <exception regexp="yes">causa|puis|soit|comme|si|frais|par-derrière</exception></token>
      </marker>
    </pattern>
    <disambig postag="A"/>
  </rule>
  <rule name="RP : plus" id="RP-PLUS">
    <pattern>
      <marker>
        <token>plus</token>
      </marker>
    </pattern>
    <disambig postag="A"/>
  </rule>
  <rule name="RP : moins" id="RP-MOINS">
    <pattern>
      <marker>
        <token>moins</token>
      </marker>
    </pattern>
    <disambig postag="A"/>
  </rule>
  <rule name="RP : lettre" id="RP-LETTRE">
    <pattern>
      <marker>
        <token>Lettre</token>
      </marker>
    </pattern>
    <disambig postag="N f s"/>
  </rule>
  <rule name="RP : pour" id="RP-POUR">
    <pattern>
      <marker>
        <token>pour</token>
      </marker>
    </pattern>
    <disambig postag="P"/>
  </rule>
  <rule name="RP : sur" id="RP-SUR">
    <pattern>
      <marker>
        <token>sur</token>
      </marker>
    </pattern>
    <disambig postag="P"/>
  </rule>
  <rule name="Tout sauf" id="TOUT_SAUF">
    <pattern>
      <token>tout</token>
      <marker>
        <token>sauf</token>
      </marker>
    </pattern>
    <disambig postag="P"/>
  </rule>
  <rule name="au + N/V" id="AU_NV">
    <pattern>
      <token regexp="yes">aux?</token>
      <marker>
        <and>
          <token postag_regexp="yes" postag="V.*"/>
          <token postag_regexp="yes" postag="[ZNJ].*"/>
        </and>
      </marker>
    </pattern>
    <disambig action="filter">
      <match no="2" postag="[ZNJ].*" postag_regexp="yes"/>
    </disambig>
  </rule>
  <rulegroup id="EXCEPTIONS_PREP_NOM" name="exceptions to prep + nom">
    <rule>
      <pattern>
        <marker>
          <token postag="R pers obj">en</token>
          <token postag="V.*" postag_regexp="yes">tombe</token>
        </marker>
        <token min="0" max="3" postag="A" postag_regexp="yes"/>
        <token postag="J.*" postag_regexp="yes"/>
      </pattern>
      <disambig action="filterall"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="R pers obj">en</token>
          <token postag="V.*" postag_regexp="yes">reste</token>
        </marker>
      </pattern>
      <disambig action="filterall"/>
    </rule>
  </rulegroup>
  <rulegroup id="PREP_NOM" name="prep + noun (not verb)">
    <rule>
      <pattern>
        <token postag="P.*" postag_regexp="yes"><exception postag="P\+R rel.*" postag_regexp="yes"/></token>
        <marker>
          <token postag="[NJ].*|V.* ppa.*" postag_regexp="yes"/>  
        </marker>
      </pattern>
      <disambig action="remove" postag="V.* (ind|sub|imp).*"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="P.*" postag_regexp="yes"><exception postag="P\+R rel.*" postag_regexp="yes"/></token>  
        </marker>
        <marker>
          <token postag="[NJ].*|V.* ppa.*" postag_regexp="yes"/>  
        </marker>
      </pattern>
      <disambig action="remove" postag="R.*"/>
    </rule>
    <rule>
      <pattern>
        <token postag="P"/>
        <token postag="D.*" postag_regexp="yes"/> 
        <marker>
          <token postag="[NJ].*|V.* ppa.*" postag_regexp="yes"/>  
        </marker>
      </pattern>
      <disambig action="remove" postag="V.* (ind|sub|imp).*"/> 
    </rule>
    <rule>
      <pattern>
        <token postag="P"/>
        <marker>
          <token postag="D.*" postag_regexp="yes">des</token>  
        </marker>
        <token postag="[NJ].*|V.* ppa.*" postag_regexp="yes"/>
      </pattern>
      <disambig action="remove" postag="P.*"/> 
    </rule>
  </rulegroup>
  <rule name="RB : Préposition" id="RB-PREPOSITION">
    <!--TODO: too greedy, exceptions? plein? -->
    <pattern>
      <marker>
        <token postag="P">
          <exception regexp="yes">attendu|passé|comme|suivant</exception>
          <exception scope="previous" regexp="yes">.*'</exception></token>
      </marker>
    </pattern>
    <disambig postag="P"/>
  </rule>
  <rulegroup id="UNUSUAL_ADJECTIVE" name="usually noun not adjective">
    <rule>
      <pattern>
        <token postag="(P.)?D .*" postag_regexp="yes"/>
        <marker>
          <token postag="N .*" postag_regexp="yes" inflected="yes" regexp="yes">café|vache</token>
        </marker>
      </pattern>
      <disambig action="remove" postag="J.*"/>
    </rule>
  </rulegroup>
  <rule name="Cela" id="CELA">
    <pattern>
      <marker>
        <token>Cela
          <exception scope="previous" regexp="yes">il|elle|on</exception></token>
      </marker>
    </pattern>
    <disambig postag="R dem m s"/>
  </rule>
  <rule name="Nombres + N" id="NOMBRE-N">
    <pattern>
      <token postag="Y"/>
      <marker>
        <and>
          <token postag_regexp="yes" postag="V .* pres 2 s"/>
          <token postag_regexp="yes" postag="N .* p"/>
        </and>
      </marker>
    </pattern>
    <disambig action="filter">
      <match no="2" postag="N .* p" postag_regexp="yes"/>
    </disambig>
    <example type="untouched">Tu minutes.</example>
    <example type="ambiguous" inputform="minutes[&lt;/S&gt;,minute/N f p,minuter/V ind pres 2 s,minuter/V sub pres 2 s]" outputform="minutes[&lt;/S&gt;,minute/N f p]">5 <marker>minutes</marker></example>
  </rule>
  <rule name="L'Écosse" id="ECOSSE">
    <pattern case_sensitive="yes">
      <token negate_pos="yes" postag="SENT_START"/>
      <marker>
        <token>Écosse</token>
      </marker>
    </pattern>
    <disambig postag="N f s"/>
  </rule>
  <rule name="Suède" id="SUEDE">
    <pattern case_sensitive="yes">
      <token negate_pos="yes" postag="SENT_START"/>
      <marker>
        <token>Suède</token>
      </marker>
    </pattern>
    <disambig postag="N f s"/>
  </rule>
  <rule name="aura lieu" id="AURA_LIEU">
    <pattern>
      <marker>
        <token>aura</token>
      </marker>
      <token>lieu</token>
    </pattern>
    <disambig action="filter" postag="V.*"/>
    <example type="ambiguous" inputform="aura[aura/N f s,avoir/V avoir ind futu 3 s]" outputform="aura[avoir/V avoir ind futu 3 s]">La rentrée scolaire <marker>aura</marker> lieu comme prévu la semaine prochaine.</example>
    <example type="untouched">Mon petit conseil pour une belle aura...</example>
  </rule>
  <rule id="MEME_ADV" name="même adverbe">
    <pattern>
      <token postag="SENT_START|C.*|M nonfin|V.*" postag_regexp="yes"/>
      <marker>
        <token>même</token>
      </marker>
    </pattern>
    <disambig postag="A"/>
  </rule>
  <rule id="Pierre" name="Pierre">
    <pattern case_sensitive="yes">
      <marker>
        <token regexp="yes">Pierre|Marie</token>
      </marker>
    </pattern>
    <disambig action="filter" postag="Z.*"/>
  </rule>
  <rulegroup id="LA_UNE" name="la une (des journaux)">
    <rule>
      <pattern>
        <token>la</token>
        <marker>
          <token>une</token>
        </marker>
      </pattern>
      <disambig postag="N f s"/>
    </rule>
    <rule>
      <pattern>
        <token>les</token>
        <marker>
          <token>unes</token>
        </marker>
      </pattern>
      <disambig postag="N f p"/>
    </rule>
  </rulegroup>
  <!--  <rule id="UNE_DES" name="une des">
    <pattern>
      <token postag="D f s">une</token>
      <marker>
        <token>des</token>
      </marker>
    </pattern>
    <disambig postag="D f p"/>
  </rule>-->
  <rule id="TOMBE" name="tombe (verb)">
    <antipattern>
      <token postag="D f s"/>
      <token>tombe</token>
    </antipattern>
    <antipattern>
      <token>tombe</token>
      <token regexp="yes">de|d'|du</token>
    </antipattern>
    <pattern>
      <token postag="V.*" postag_regexp="yes">tombe</token>
    </pattern>
    <disambig action="remove" postag="N f s"></disambig>
  </rule>
  <rule id="JUGE" name="juge (verb)">
    <antipattern>
      <token postag="D m s"/>
      <token>juge</token>
    </antipattern>
    <antipattern>
      <token>juge</token>
      <token regexp="yes">de|d'|du</token>
    </antipattern>
    <pattern>
      <token postag="V.*" postag_regexp="yes">juge</token>
    </pattern>
    <disambig action="remove" postag="N [em] s"></disambig>
  </rule>
  <rule id="AMENE" name="amène">
    <pattern>
      <marker>
        <token postag="V.*" postag_regexp="yes">amène</token>
      </marker>
      <token min="0">à</token>
      <token postag="(P\+)*D.*" postag_regexp="yes"/>
    </pattern>
    <disambig action="remove" postag="J e s"></disambig>
  </rule>
  <rulegroup id="FAIT" name="fait">
    <!-- TODO: "le fait" is ambiguous -->
    <rule>
      <pattern>
        <token regexp="yes">qui|il|elle|on|lui|[mtns]e</token>
        <token min="0" max="1" regexp="yes">les?|la|[mts]e|[nv]ous|leur</token>
        <marker>
          <token>fait</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="V ind pres 3 s"/>
    </rule>
    <rule>
      <pattern>
        <token>ce</token>
        <marker>
          <token>fait</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token>ça</token>
        <marker>
          <token>fait</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="V ind pres 3 s"/>
    </rule>
    <rule>
      <!-- TODO: generalize -->
      <pattern>
        <token regexp="yes">une?</token>
        <marker>
          <token skip="3">fait</token>
        </marker>
        <token regexp="yes">(\d+)?(m|cm|mm|diamètre|.*mètres?|haut|long)</token>
      </pattern>
      <disambig action="filter" postag="V ind pres 3 s"/>
    </rule>
    <rule>
      <!-- fait partie, fait peur -->
      <pattern>
        <marker>
          <token postag="V ind.*" postag_regexp="yes">fait<exception scope="previous" inflected="yes">avoir</exception><exception scope="previous" regexp="yes">tas|ma</exception><exception scope="previous" postag="P.*" postag_regexp="yes"/></token>
        </marker>
        <token min="0" max="4" postag="A|R.*" postag_regexp="yes"/>
        <token regexp="yes">partie|peur</token>
      </pattern>
      <disambig action="filter" postag="V ind.*"></disambig>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="V ind.*" postag_regexp="yes">fait<exception scope="previous" inflected="yes">avoir</exception><exception scope="previous" regexp="yes">tas|ma</exception><exception scope="previous" postag="P.*" postag_regexp="yes"/></token>
        </marker>
        <token min="0" max="4" postag="A|R.*" postag_regexp="yes"/>
        <token postag="V.* inf.*" postag_regexp="yes"></token>
      </pattern>
      <disambig action="filter" postag="V ind.*"></disambig>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="V ind.*" postag_regexp="yes" regexp="yes">fait|mis<exception scope="previous" inflected="yes">avoir</exception><exception scope="previous" regexp="yes">tas|ma</exception><exception scope="previous" postag="P.*" postag_regexp="yes"/></token>
        </marker>
        <token min="0" max="4" postag="A"/>
        <token postag="D.*" postag_regexp="yes"></token>
      </pattern>
      <disambig action="filter" postag="V ind.*"></disambig>
    </rule>
  </rulegroup>
  <rule id="FORTE" name="forte">
    <pattern>
      <marker>
        <token>forte</token>
      </marker>
    </pattern>
    <disambig postag="J f s"/>
  </rule>
  <rule id="BIEN" name="bien">
    <pattern>
      <marker>
        <token postag="A">bien</token>
      </marker>
    </pattern>
    <disambig action="filter" postag="A"/>
  </rule>
  <rule id="UN_DES" name="un des">
    <pattern>
      <token>un
        <exception scope="previous">numéro</exception></token>
      <marker>
        <token>des</token>
      </marker>
    </pattern>
    <disambig postag="D m p"/>
  </rule>
  <rulegroup name="en fait" id="EN_FAIT">
    <rule>
      <pattern>
        <token>
          <exception postag="Z.*" postag_regexp="yes"/>
          <exception regexp="yes">il|elle|n'</exception>
          <exception postag="R.*" postag_regexp="yes" regexp="yes">.*'</exception></token>
        <marker>
          <token>en</token>
        </marker>
        <token>fait</token>
      </pattern>
      <disambig postag="A"/>
    </rule>
    <rule>
      <pattern>
        <token>
          <exception postag="Z.*" postag_regexp="yes"/>
          <exception regexp="yes">il|elle|on|n'</exception>
          <exception postag="R.*" postag_regexp="yes" regexp="yes">.*'</exception></token>
        <token>en</token>
        <marker>
          <token>fait</token>
        </marker>
      </pattern>
      <disambig postag="A"/>
    </rule>
  </rulegroup>
  <rule id="EN_REALITE" name="en réalité">
    <antipattern>
      <token>réalité</token>
      <token regexp="yes">augmentée|virtuelle</token>
    </antipattern>
    <pattern>
      <marker>
        <token>en</token>
        <token>réalité</token>
      </marker>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="EN_GENERAL" name="en général">
    <pattern>
      <token>en</token>
      <token regexp="yes">apparence|conséquence|définitive|effet|général|gros|particulier|partie|principe|revanche</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="PETIT_A_PETIT" name="petit à petit">
    <pattern>
      <token>petit</token>
      <token>à</token>
      <token>petit</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="TOUT_A_FAIT" name="tout à fait">
    <pattern>
      <token>tout</token>
      <token>à</token>
      <token>fait</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="DU_TOUT" name="du tout">
    <pattern>
      <token>du</token>
      <token>tout</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="AVANT_TOUT" name="du tout">
    <pattern>
      <marker>
        <token>avant</token>
        <token>tout</token>
      </marker>
      <token>
        <exception postag="[NJ] [me] (s|sp)" postag_regexp="yes"/></token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="A_PEINE" name="à peine">
    <pattern>
      <token>à</token>
      <token regexp="yes">peine|nouveau</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="SANS_DOUTE" name="sans doute">
    <pattern>
      <token>sans</token>
      <token regexp="yes">doute|cesse</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="BIEN_SUR" name="bien sûr">
    <pattern>
      <marker>
        <token>bien</token>
        <token>sûr</token>
      </marker>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="PAR_CONTRE" name="par contre">
    <pattern>
      <token>par</token>
      <token>contre</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rule id="A_LA_FOIS" name="à la fois">
    <pattern>
      <token>à</token>
      <token>la</token>
      <token>fois</token>
    </pattern>
    <disambig action="replace">
      <wd pos="A"/>
      <wd pos="A"/>
      <wd pos="A"/>
    </disambig>
  </rule>
  <rulegroup id="NOS" name="nos">
    <rule>
      <pattern>
        <marker>
          <token>nos</token>
        </marker>
      </pattern>
      <disambig postag="D e p"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">[dl]es|plusieurs|nombreux</token>
        <marker>
          <token>nos</token>
        </marker>
      </pattern>
      <disambig postag="N m p"/>
    </rule>
  </rulegroup>
  <rule id="COUR" name="cour">
    <pattern>
      <marker>
        <token inflected="yes">cour</token>
      </marker>
      <token regexp="yes">de|d'</token>
      <token regexp="yes">cassation|justice|comptes|appel|droit|strasbourg</token>
    </pattern>
    <disambig action="filter" postag="N f.*"/>
  </rule>
  <rule id="COMPTE_TENU" name="compte tenu">
    <pattern>
      <marker>
        <token>compte</token>
      </marker>
      <token>tenu</token>
    </pattern>
    <disambig postag="N m s"/>
  </rule>
  <!--<rule id="JAVA" name="Java">
    <pattern case_sensitive="yes">
      <marker>
        <token>Java</token>
      </marker>
    </pattern>
    <disambig postag="Z m s"/>
  </rule>-->
  <rule id="MAIS" name="mais">
    <antipattern>
      <token postag="D (e|m) p" postag_regexp="yes"/>
      <token>mais</token>
    </antipattern>
    <pattern>
      <token>mais</token>
    </pattern>
    <disambig action="remove" postag="N m p"/>
  </rule>
  <rule id="VIRGINIE" name="Virginie">
    <pattern case_sensitive="yes">
      <marker>
        <token>Virginie</token>
      </marker>
    </pattern>
    <disambig postag="Z f s"/>
  </rule>
  <rulegroup id="RENE" name="René">
    <rule>
      <pattern case_sensitive="yes">
        <token>René</token>
      </pattern>
      <disambig postag="Z m s"/>
    </rule>
    <rule>
      <pattern case_sensitive="yes">
        <token>Renée</token>
      </pattern>
      <disambig postag="Z f s"/>
    </rule>
  </rulegroup>
  <rulegroup id="AUTOUR" name="Autour">
    <rule>
      <pattern>
        <token>un</token>
        <marker>
          <token>autour</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token>l'</token>
        <marker>
          <token>autour</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token><exception postag="D.*" postag_regexp="yes"/></token>
        <marker>
          <token>autour</token>
        </marker>
        <token regexp="yes">de|d'|du|des</token>
      </pattern>
      <disambig action="replace" postag="P"/>
    </rule>
  </rulegroup>
  <rule id="JURA" name="Jura">
    <pattern>
      <token regexp="yes">le|du</token>
      <marker>
        <token regexp="yes">(?-i)Jura</token>
      </marker>
    </pattern>
    <disambig action="filter" postag="Z.*"/>
  </rule>
  <rule id="PUTAIN_DE" name="putain de">
    <pattern>
      <token regexp="yes">un|[cl]e|[mts]on|leur</token>
      <marker>
        <token>putain</token>
      </marker>
      <token regexp="yes">de?</token>
    </pattern>
    <disambig postag="N e s"/>
  </rule>
  <rule id="DECL_SUR_HONNEUR" name="declaration sur l’honneur">
    <!-- TODO: move to multiwords -->
    <pattern>
      <token regexp="yes">attestation|déclaration</token>
      <token>sur</token>
      <token>l'</token>
      <marker>
        <token>honneur</token>
      </marker>
    </pattern>
    <disambig postag="N f s"/>
  </rule>
  <rulegroup id="BITE" name="bite">
    <rule>
      <pattern>
        <token regexp="yes">il|elle|on|ne</token>
        <marker>
          <token>bite</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">tu|ne</token>
        <marker>
          <token>bites</token>
        </marker>
      </pattern>
      <disambig action="filter" postag="V.*"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">[mlts]a|belle|leur|longue|notre|votre|grande|grosse|petite</token>
        <marker>
          <token>bite</token>
        </marker>
      </pattern>
      <disambig postag="N f s"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">les|belles|leurs|longues|votres|nos|grosses|grandes|petites</token>
        <marker>
          <token>bites</token>
        </marker>
      </pattern>
      <disambig postag="N f p"/>
    </rule>
  </rulegroup>
  <rule id="DON_JUAN" name="don Juan">
    <pattern>
      <token>don</token>
      <token>Juan</token>
    </pattern>
    <disambig action="replace">
      <wd pos="N m sp"/>
      <wd pos="N m sp"/>
    </disambig>
  </rule>
  <rulegroup id="PUIS" name="puis">
    <rule>
      <pattern>
        <token postag="SENT_START"/>
        <marker>
          <token>Puis</token>
        </marker>
        <token postag="V ppa.*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="A"/>
    </rule>
    <rule>
      <pattern>
        <token>,</token>
        <marker>
          <token>puis</token>
        </marker>
        <token postag="V ppa.*" postag_regexp="yes"/>
      </pattern>
      <disambig postag="A"/>
    </rule>
  </rulegroup>
  <rule id="GRAND_FAIM" name="grand faim">
    <pattern>
      <marker>
        <token>grand</token>
        <token>faim</token>
      </marker>
    </pattern>
    <disambig action="immunize"/>
  </rule>
  <rulegroup id="METTEUR_EN_SCENE" name="metteur en scène">
    <rule>
      <pattern>
        <token>metteur</token>
        <token>en</token>
        <marker>
          <token>scène</token>
        </marker>
      </pattern>
      <disambig postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token>metteurs</token>
        <token>en</token>
        <marker>
          <token>scène</token>
        </marker>
      </pattern>
      <disambig postag="N m p"/>
    </rule>
  </rulegroup>
  <rule id="MUSTANG" name="Mustang, Jaquar">
    <!-- With an upppercase, it is the name of a car and not the animal. -->
    <pattern>
      <token>
        <exception postag="SENT_START"/></token>
      <token regexp="yes">(?-i)Mustang|Jaguar</token>
    </pattern>
    <disambig postag="N f s"/>
  </rule>
  <rulegroup id="A_PRESENT" name="à présent">
    <rule>
      <pattern>
        <marker>
          <token>à</token>
        </marker>
        <token>présent</token>
      </pattern>
      <disambig postag="A"/>
    </rule>
    <rule>
      <pattern>
        <token>à</token>
        <marker>
          <token>présent</token>
        </marker>
      </pattern>
      <disambig postag="A"/>
    </rule>
  </rulegroup>
  <rulegroup id="PAR_CONSEQUENT" name="par conséquent">
    <rule>
      <pattern>
        <marker>
          <token>par</token>
        </marker>
        <token>conséquent</token>
      </pattern>
      <disambig postag="A"/>
    </rule>
    <rule>
      <pattern>
        <token>par</token>
        <marker>
          <token>conséquent</token>
        </marker>
      </pattern>
      <disambig postag="A"/>
    </rule>
  </rulegroup>
  <rule id="EN_PERMANENCE" name="en permanence">
    <pattern>
      <token>en</token>
      <marker>
        <token regexp="yes">permanence|rien</token>
      </marker>
    </pattern>
    <disambig postag="A"/>
  </rule>
  <rule id="RAYONS_X" name="rayons X">
    <pattern>
      <token>rayons</token>
      <marker>
        <token>X</token>
      </marker>
    </pattern>
    <disambig postag=""/>
  </rule>
  <rulegroup id="DERNIER_CRI" name="dernier cri">
    <rule>
      <pattern>
        <marker>
          <token>dernier</token>
        </marker>
        <token>cri</token>
      </pattern>
      <disambig postag="J e sp"/>
    </rule>
    <rule>
      <pattern>
        <token>dernier</token>
        <marker>
          <token>cri</token>
        </marker>
      </pattern>
      <disambig postag="N e sp"/>
    </rule>
  </rulegroup>
  <rulegroup id="BON_MARCHE" name="bon marché">
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">bon|meilleur</token>
        </marker>
        <token>marché</token>
      </pattern>
      <disambig postag="J e sp"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">bon|meilleur</token>
        <marker>
          <token>marché</token>
        </marker>
      </pattern>
      <disambig postag="J e sp"/>
    </rule>
  </rulegroup>
  <rule id="TRIENT" name="Trient">
    <pattern>
      <token regexp="yes">d[eu]</token>
      <marker>
        <token case_sensitive="yes">Trient</token>
      </marker>
    </pattern>
    <disambig postag="N e sp"/>
  </rule>
  <rule id="BOSSONS" name="Bossons">
    <pattern>
      <token>des</token>
      <marker>
        <token case_sensitive="yes">Bossons</token>
      </marker>
    </pattern>
    <disambig postag="N e sp"/>
  </rule>
  <rule id="VIENNE" name="Vienne">
    <pattern>
      <token>à</token>
      <marker>
        <token case_sensitive="yes">Vienne</token>
      </marker>
    </pattern>
    <disambig postag="Z e sp"/>
  </rule>
  <rulegroup id="NOM_S_SP" name="nom s/sp">
    <rule>
      <pattern>
        <token postag="D m s"/>
        <marker>
          <token postag="N m sp">prix</token>  
        </marker>
      </pattern>
      <disambig action="replace" postag="N m s"/>
    </rule>
    <rule>
      <pattern>
        <token postag="D [me] p" postag_regexp="yes"/>
        <marker>
          <token postag="N m sp">prix</token>  
        </marker>
      </pattern>
      <disambig action="replace" postag="N m p"/>
    </rule>
  </rulegroup>
  <rulegroup id="PROBABLE_NOUN" name="usually noun after determiner: faute, cours">
    <!-- even with agreement errors-->
    <rule>
      <pattern>
        <token postag="(P\+)?D.*" postag_regexp="yes"/>
        <token postag="N.*" postag_regexp="yes" regexp="yes">fautes?|cours|reste|véhicules?|politiques?|présidente?s?</token> 
      </pattern>
      <disambig action="filterall"/>  
    </rule>
    <rule>
      <pattern>
        <marker>
          <token postag="(P\+)?D.*" postag_regexp="yes"/>
          <token postag="N.*" postag_regexp="yes" regexp="yes">fait|manque</token>  
        </marker>
        <token regexp="yes">de|du|d'<exception postag="A"/></token>
      </pattern>
      <disambig action="filterall"/>  
    </rule>
  </rulegroup>
  <rule id="PRONOM_VERB" name="se montre">
    <pattern>
      <token postag="R pers.*" postag_regexp="yes">
        <exception regexp="yes">-.*</exception></token>
      <marker>
        <token postag="V.* (ind|sub).*" postag_regexp="yes"/>
      </marker>
    </pattern>
    <disambig action="remove" postag="N.*"/>
  </rule>
  <rule name="Ignore spelling of url protocols" id="URI_PROTOCOL">
    <pattern>
      <!-- chrome://, ftp://, file:// -->
      <token regexp="yes">[a-z\-]+</token>
      <token spacebefore="no">:</token>
      <token spacebefore="no">/</token>
      <token spacebefore="no">/</token>
      <token spacebefore="no" min="0">/</token>
      <token spacebefore="no" regexp="yes">[a-z0-9\-]+</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore spelling of file names" id="IGNORE_SPELLING_OF_FILE_NAMES">
    <!-- Localized from English by Tiago F. Santos, 2019-08-30  -->
    <pattern>
      <token/>
      <token spacebefore="no">.</token>
      <token spacebefore="no" regexp="yes">&extensions_de_fichiers;</token>
      <!-- For more extensions, refer to https://fileinfo.com -->
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore spelling of @user mentions" id="IGNORE_USER_MENTION">
    <pattern>
      <token regexp="yes">@.+</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rulegroup name="Ignore spelling of #hashtags" id="IGNORE_HASHTAG">
    <rule>
      <pattern>
        <token spacebefore="yes">#</token>
        <token spacebefore="no"/>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <token postag="SENT_START"/>
        <token>#</token>
        <token spacebefore="no"/>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
  </rulegroup>
  <rule id="UN_TIENS" name="un tiens">
    <pattern>
      <token>un</token>
      <token>tiens</token>
      <token>vaut</token>
      <token>mieux</token>
      <token>que</token>
      <token>deus</token>
      <token>l'</token>
      <token>auras</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  
  <rulegroup id="NOMINAL_GROUPS" name="nonimal groups">
    <rule>
      <pattern>
        <token postag="D m s"/>
        <token postag="N [em] (s|sp)" postag_regexp="yes"/>
      </pattern>
      <disambig action="add">
        <wd pos="_GN_MS"></wd>
        <wd pos="_GN_MS"></wd>
      </disambig>  
    </rule>
    <rule>
      <pattern>
        <token postag="D f s"/>
        <token postag="N [ef] (s|sp)" postag_regexp="yes"/>
      </pattern>
      <disambig action="add">
        <wd pos="_GN_FS"></wd>
        <wd pos="_GN_FS"></wd>
      </disambig>  
    </rule>
    <rule>
      <pattern>
        <token postag="D m p"/>
        <token postag="N [em] (p|sp)" postag_regexp="yes"/>
      </pattern>
      <disambig action="add">
        <wd pos="_GN_MP"></wd>
        <wd pos="_GN_MP"></wd>
      </disambig>  
    </rule>
    <rule>
      <pattern>
        <token postag="D f p"/>
        <token postag="N [ef] (p|sp)" postag_regexp="yes"/>
      </pattern>
      <disambig action="add">
        <wd pos="_GN_FP"></wd>
        <wd pos="_GN_FP"></wd>
      </disambig>  
    </rule>
    
    <rule>
      <pattern>
        <token postag="D e p"/>
        <token postag="N m (p|sp)" postag_regexp="yes"/>
      </pattern>
      <disambig action="add">
        <wd pos="_GN_MP"></wd>
        <wd pos="_GN_MP"></wd>
      </disambig>  
    </rule>
    <rule>
      <pattern>
        <token postag="D e p"/>
        <token postag="N f (p|sp)" postag_regexp="yes"/>
      </pattern>
      <disambig action="add">
        <wd pos="_GN_FP"></wd>
        <wd pos="_GN_FP"></wd>
      </disambig>  
    </rule>
    
    
  </rulegroup>
  <rulegroup name="Ignore spelling of numbers" id="IGNORE_SPELLING_OF_NUMBERS">
    <!--
        In English, Spanish, German and many other languages, we simply allow numbers and letters next to each other
        In French almost any number + any letter is marked as spelling error. The following rules allow some specific cases

        TODO:
        * 10hrs
        * 90m3
        * 10m2
    -->
    <rule>
      <pattern>
        <token regexp="yes">([01]?\d|2[0-3])h[0-5]?\d(min|m)([0-5]?\ds)?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes">[0-5]?\d(min|m)[0-5]?\ds</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <!-- inch 5'20 (Canadians colloquially use feet and inches, see https://www.tripadvisor.com/Travel-g153339-c15311/Canada:Metric.System.html) -->
        <token regexp="yes">\d+</token>
        <token spacebefore="no">'</token>
        <token regexp="yes">\d+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- numbering in lists: 6a, 6b, ... -->
      <pattern>
        <token regexp="yes">\d+[A-Z]</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- A4, B4, A380, BMW M4, F12 ... -->
      <pattern>
        <token regexp="yes">[A-Z]\d+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- list items, 1-, 2-, -->
      <pattern>
        <marker>
          <token regexp="yes">\d{1,3}</token>
          <token min="0">.</token>
          <token spacebefore="no">-</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- list items, 1.1b, 2-, -->
      <pattern>
        <marker>
          <token regexp="yes">\d{1,3}</token>
          <token min="0">.</token>
          <token spacebefore="no">-</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- list items, 1.1-, 2.1-, -->
      <pattern>
        <marker>
          <token regexp="yes">\d{1,3}\.\d{1,3}[a-z]?</token>
          <token spacebefore="no">-</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- list items, 1.1.a- -->
      <pattern>
        <marker>
          <token regexp="yes">\d{1,3}\.\d{1,3}</token>
          <token spacebefore="no">.</token>
          <token spacebefore="no" regexp="yes">[a-z]</token>
          <token spacebefore="no">-</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- 5e, 6e, ... -->
      <pattern>
        <marker>
          <token regexp="yes">\d+[eᵉ]\-?</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- negative numbers: -1, -10, ... -->
      <pattern>
        <marker>
          <token regexp="yes">\-\d+</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">[\d+\.,]</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">[\d\., ]+[%$€£º°]?</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">[\d\., ]+⁄[\d\., ]+</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">[12][0-9]([\.,][0-5][0-9])?(h|hr|hrs)?</token>
          <!-- TODO: rules suggesting proper formatting -->
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">[$€£][\d\., ]+</token>
          <!-- TODO: create rule suggesting another format -->
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <marker>
          <token regexp="yes">[\d\., ]+[º°][CF]</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- chapter-style numbering: -1-, -2-, ... -->
      <pattern>
        <marker>
          <token regexp="yes">\-\d+\-</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- License keys, model numbers ("Philips AEA2700"), biology terms ("CD4") ... -->
      <pattern>
        <marker>
          <token regexp="yes" case_sensitive="yes">[A-Z]+\d+</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- Price approximations ("150€-250€") -->
      <pattern>
        <marker>
          <token regexp="yes" case_sensitive="yes">[\d,.]+[€$£¥¤]-[\d,.]+[€$£¥¤]</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <!-- Dollar price ("$1M") -->
      <pattern>
        <marker>
          <token regexp="yes">[€$£¥¤]\d+[MK]</token>
        </marker>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
  </rulegroup>
  <rule name="Ignore spelling of domain names" id="IGNORE_DOMAIN_NAMES">
    <pattern case_sensitive="yes">
      <token regexp="yes">[A-Za-z0-9\-]+</token>
      <token spacebefore="no">.</token>
      <token spacebefore="no" regexp="yes">&domaines_internet;</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore spelling of l'ONU" id="IGNORE_SPELLING_OF_L_ONU">
    <!-- see https://github.com/languagetool-org/languagetool/issues/2665 -->
    <pattern>
      <token regexp="yes">[dl]'</token>
      <token spacebefore="no" case_sensitive="yes" regexp="yes">ONU|AGV|UNSC|Excel|OTAN|ADLC|OFSP|Instagram</token>
      <!-- not sure if this the best way to fix this -->
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore spelling of l'e-mail" id="IGNORE_SPELLING_OF_L_EMAIL">
    <!-- see https://github.com/languagetool-org/languagetool/issues/2665 -->
    <pattern>
      <token regexp="yes">[dl]'</token>
      <token spacebefore="no" case_sensitive="yes" regexp="yes">emails?</token>
      <!-- not sure if this the best way to fix this -->
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore spelling of '&amp; Co" id="IGNORE_SPELLING_OF_AND_CO">
    <!-- e.g. "Tiffany & Co." -->
    <pattern>
      <token>&amp;</token>
      <token>Co</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rulegroup id="IMMUNIZE_ANGLICISMS" name="exceptions to anglicism rules">
    <rule>
      <pattern>
        <token regexp="yes">guitar|Charleston</token>
        <token regexp="yes">slides?</token>
      </pattern>
      <disambig action="immunize"/>
    </rule>
    <rule>
      <pattern>
        <token>fake</token>
        <token>news</token>
      </pattern>
      <disambig action="immunize"/>
    </rule>
  </rulegroup>
  <rule name="Ignore spelling of d'1" id="IGNORE_SPELLING_OF_D_UN">
    <pattern>
      <token>d'</token>
      <token spacebefore="no">1</token>
      <!-- not sure if this the best way to fix this -->
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore spelling of N°" id="IGNORE_SPELLING_OF_N">
    <pattern>
      <token regexp="yes">N°\d?</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore spelling of punctuation characters" id="IGNORE_SPELLING_OF_PUNCTUATION">
    <pattern>
      <token regexp="yes">[_\^]+</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rule name="Ignore common chemical formulas" id="IGNORE_COMMON_CHEMICAL_FORMULAS">
    <!-- Created by Tiago F. Santos, 2019-08-29  -->
    <!-- List retreived and triaged from https://en.wikipedia.org/wiki/Glossary_of_chemical_formulas -->
    <pattern case_sensitive="yes">
      <token regexp="yes" case_sensitive="yes"
        >Ac₂O₃|Ag₂C₂|Ag₂C₂O₄|Ag₂Cl₂|Ag₂CO₃|Ag₂Cr₂O₇|Ag₂CrO₄|Ag₂F|Ag₂MoO₄|Ag₂O|Ag₂S|Ag₂Se|Ag₂SeO₃|Ag₂SeO₄|Ag₂SO₄|Ag₂Te|Ag₃Br₂|Ag₃Br₃|Ag₃Cl₃|Ag₃I₃|Ag₃PO₄|AgBF₄|AgBrO₂|AgBrO₃|AgBrO₄|AgCl₃Cu₂|AgClO₃|AgClO₄|AgF₂|AgIO₂|AgIO₃|AgIO₄|AgMnO₄|AgN₃|AgNO₃|AgPF₆|Al₂BeO₄|Al₂Br₆|Al₂Cl₉K₃|Al₂CoO₄|Al₂F₆|Al₂I₆|Al₂MgO₄|Al₂O|Al₂O₂|Al₂O₃|Al₂O₅Si|Al₂O₇Si₂|Al₂S|Al₂S₃|Al₂Se|Al₂Te|Al₃F₁₄Na₅|Al₄C₃|Al₆BeO₁₀|Al₆O₁₃Si₂|AlBO₃|AlBr₃|AlCl₂F|AlCl₂H|AlCl₃|AlCl₄Cs|AlCl₄K|AlCl₄Na|AlCl₄Rb|AlCl₆K₃|AlCl₆Na₃|AlF₂|AlF₂O|AlF₃|AlF₄K|AlF₄Li|AlF₆K₃|AlF₆Li₃|AlF₆Na₃|AlI₃|AlLiO₂|AlNaO₂|AlO₂|AlPO₄|AlTe₂|As₂I₄|As₂Mg₃|As₂O₃|As₂O₅|As₂P₂|As₂S₄|As₂S₅|As₂Se|As₂Se₃|As₂Se₅|As₃O₄|As₃P|As₄O₃|As₄O₅|As₄S₃|As₄S₄|AsBr₃|AsCl₃|AsCl₃O|AsCl₄F|AsF₃|AsF₅|AsH₃|AsI₃|AsO₂|AsP₃|Au₂O₃|Au₂S|Au₂S₃|Au₂Se₃|AuBr₃|AuCl₃|AuF₃|AuI₃|B₂Cl₄|B₂F₄|B₂H₆|B₂O₃|B₂S₃|B₂Se₃|B₃N₃H₆|B₄C|Ba₂P₂O₇|Ba₂V₂O₇|Ba₂XeO₆|Ba₃N₂|BaB₆|BaBr₂|BaC₂|BaC₂O₄|BaCl₂|BaCO₃|BaCrO₄|BaF₂|BaFeSi₄O₁₀|BaHfO₃|BaHgI₄|BaI₂|BaMnO₄|BaMoO₄|BaN₆|BaNb₂O₆|BaO₂|BaS₂O₃|BaSeO₃|BaSeO₄|BaSi₂|BaSi₂O₅|BaSiF₆|BaSiO₃|BaSnO₃|BaSO₃|BaSO₄|BAsO₄|BaTeO₃|BaTiO₃|BaU₂O₇|BaWO₄|BaZrO₃|BBr₃|BCl₃|Be₂C|Be₃N₂|BeB₂|BeBr₂|BeCl₂|BeCO₃|BeF₂|BeI₂|BeSO₃|BeSO₄|BF₃|Bi₂O₃|Bi₂S₃|Bi₂Se₃|BI₃|BiBO₃|BiBr₃|BiC₆H₅O₇|BiCl₃|BiF₃|BiI₃|BiPO₄|BPO₄|Br₂|Br₂O₅|BrCl₃|BrCl₅|BrF₃|BrF₅|C₁₀H₁₀N₂O|C₁₀H₁₀O₂|C₁₀H₁₀O₄|C₁₀H₁₁N₃O₃S|C₁₀H₁₂N₂|C₁₀H₁₂O|C₁₀H₁₂O₂|C₁₀H₁₂O₃|C₁₀H₁₃N₅O₄|C₁₀H₁₄O|C₁₀H₁₅ON|C₁₀H₁₆|C₁₀H₁₆O|C₁₀H₁₇NO₃|C₁₀H₁₉NO₃|C₁₀H₂₀N₂O₂|C₁₀H₂₂|C₁₀H₇N₃S|C₁₀H₇NO₂|C₁₀H₈|C₁₀H₈O₃|C₁₀H₉N₅O|C₁₀H₉NO₂|C₁₁H₁₁NO₂|C₁₁H₁₂N₂O₂|C₁₁H₁₂O₃|C₁₁H₁₄N₂O|C₁₁H₁₄O₂|C₁₁H₁₉NO₄|C₁₁H₂₄|C₁₁H₈O₂|C₁₂H₁₀|C₁₂H₁₀ClN₂O₅S|C₁₂H₁₁N₅|C₁₂H₁₁N₇|C₁₂H₁₃NO₂|C₁₂H₁₄O₄|C₁₂H₁₅NO|C₁₂H₁₆N₂|C₁₂H₁₆O₃|C₁₂H₁₆O₄|C₁₂H₁₆O₇|C₁₂H₁₈O|C₁₂H₂₂O₁₁|C₁₂H₂₆|C₁₂H₄N₄|C₁₂H₈O₄|C₁₃₁H₂₀₀N₃₀O₄₃S₂|C₁₃H₁₀O|C₁₃H₁₂F₂N₆O|C₁₃H₁₂O|C₁₃H₁₂O₂|C₁₃H₁₄N₂O|C₁₃H₁₆N₂O₂|C₁₃H₁₈O₂|C₁₃H₂₈|C₁₄H₁₀|C₁₄H₁₀O₁₄|C₁₄H₁₂O₃|C₁₄H₁₄Cl₂N₂O|C₁₄H₁₈N₂O₅|C₁₄H₁₈N₄O₃|C₁₄H₃₀|C₁₅₈H₂₅₁N₃₉O₄₆S|C₁₅H₁₀O₄|C₁₅H₁₀O₅|C₁₅H₁₀O₆|C₁₅H₁₀O₇|C₁₅H₁₂N₂O|C₁₅H₁₂N₂O₂|C₁₅H₃₂|C₁₆₁H₂₃₆N₄₂O₄₈|C₁₆₄H₂₅₆Na₂O₆₈S₂|C₁₆H₁₄O₃|C₁₆H₂₈N₂O₆Zn|C₁₆H₃₄|C₁₇H₁₃ClN₄|C₁₇H₁₄F₃N₃O₂S|C₁₇H₁₈N₂O₆|C₁₇H₁₉N₃O₃S|C₁₇H₂₂O₂|C₁₇H₂₄O|C₁₇H₂₄O₉|C₁₇H₃₆|C₁₈H₂₂O₂|C₁₈H₂₄O₂|C₁₈H₂₄O₃|C₁₈H₂₄O₄|C₁₈H₂₇NO₃|C₁₈H₃₂O₂|C₁₈H₃₆O₂|C₁₈H₃₈|C₁₉H₁₆ClNO₄|C₁₉H₂₆O₂|C₁₉H₂₈O₂|C₁₉H₃₀O₂|C₁₉H₄₀|C₂₀H₂₄O₂N₂|C₂₀H₂₇NO₁₁|C₂₀H₂₈O₂|C₂₀H₃₂O₅|C₂₀H₃₄O₅|C₂₀H₄₂|C₂₁H₂₀O₆|C₂₁H₃₀O₂|C₂₁H₃₆N₇O₁₆P₃S|C₂₂H₂₃ClN₂O₂|C₂₃H₁₉ClF₃NO₃|C₂F₄|C₂H₂|C₂H₂O₂|C₂H₃Cl|C₂H₃NO|C₂H₄|C₂H₄Cl₂|C₂H₄N₄|C₂H₄O|C₂H₄O₂|C₂H₅Br|C₂H₅NH₂|C₂H₅NO₂|C₂H₅OCs|C₂H₅OH|C₂H₅OK|C₂H₅ONa|C₂H₅ORb|C₂H₆|C₂H₆OS|C₂H₇NO|C₂H₇NO₂|C₂H₇NO₃S|C₃₀H₁₉NO₉|C₃₄H₄₆O₁₈|C₃₅H₆₀O₆|C₃H₃N|C₃H₄N₂|C₃H₄N₂S|C₃H₄O₃|C₃H₄O₄|C₃H₅N₃|C₃H₅N₃O₉|C₃H₅NO|C₃H₆|C₃H₆O₂|C₃H₆O₂S|C₃H₇N|C₃H₇NO₂|C₃H₇NO₂S|C₃H₇NO₃|C₃H₈|C₃H₈NO₅P|C₃H₈O|C₃H₈O₂|C₃H₈O₃|C₃H₉N₃|C₃HN|C₃N₁₂|C₄₀H₅₆|C₄₄H₆₉N₁₅O₉S|C₄H₁₀|C₄H₁₀O|C₄H₁₀O₂|C₄H₁₀O₃|C₄H₁₁NO₂|C₄H₂|C₄H₂BrClN₂|C₄H₂Cl₂N₂|C₄H₃Cl₂N₃|C₄H₃FN₂O₂|C₄H₄|C₄H₄FN₃O|C₄H₄N₂O₂|C₄H₄N₄|C₄H₄O|C₄H₅N₃O|C₄H₆N₂|C₄H₆N₂S|C₄H₆N₄O|C₄H₆O₂|C₄H₆O₄|C₄H₇BrO₂|C₄H₇KO₃|C₄H₇NaO₃|C₄H₇NO₂|C₄H₇NO₃|C₄H₇NO₄|C₄H₈|C₄H₈N₂O₃|C₄H₈O|C₄H₈O₂|C₄H₈O₃|C₄H₉Li|C₄H₉NO₂|C₄H₉NO₃|C₄H₉OH|C₄HCl₂FN₂|C₄I₂|C₅₅H₇₄IN₃O₂₁S₄|C₅₉H₈₀N₄O₂₂S₄|C₅H₁₀|C₅H₁₀N₂O₃|C₅H₁₀O₂|C₅H₁₀O₄|C₅H₁₁NO₂|C₅H₁₁NO₂S|C₅H₁₂|C₅H₁₂O₂|C₅H₁₂O₄|C₅H₁₂O₅|C₅H₃Br₂N|C₅H₃BrN₂O₂|C₅H₃ClN₂O₂|C₅H₃ClN₄|C₅H₄N₂O₂|C₅H₄N₂O₄|C₅H₄N₄O|C₅H₄N₄O₂|C₅H₄N₄S|C₅H₄NCOOH|C₅H₄O|C₅H₄O₂|C₅H₄O₂S|C₅H₅BrN₂|C₅H₅ClN₂|C₅H₅IN₂|C₅H₅N|C₅H₅N₃O|C₅H₅N₃O₂|C₅H₅N₅|C₅H₅N₅O|C₅H₅NO|C₅H₆BNO₂|C₅H₆N₂|C₅H₆N₂O₂|C₅H₆N₂OS|C₅H₆O|C₅H₆O₅|C₅H₇N₃|C₅H₈O₂|C₅H₉NO₂|C₅H₉NO₄|C₆₂H₈₉CoN₁₃O₁₅P|C₆₃H₈₈CoN₁₄O₁₄P|C₆₃H₉₁CoN₁₃O₁₄P|C₆F₅COOH|C₆H₁₀O₃|C₆H₁₀O₄|C₆H₁₁NO₂|C₆H₁₂|C₆H₁₂O₃|C₆H₁₂O₆|C₆H₁₃NO|C₆H₁₃NO₂|C₆H₁₄|C₆H₁₄N₂O₂|C₆H₁₄N₄O₂|C₆H₁₄O₂|C₆H₁₄O₃|C₆H₁₄O₄|C₆H₁₅NO₃|C₆H₃Br₃O|C₆H₃Cl₃O|C₆H₄BrNO₂|C₆H₄ClN₃|C₆H₄ClNO₂|C₆H₄N₄|C₆H₄O₂|C₆H₅Br|C₆H₅CH₂OH|C₆H₅CHO|C₆H₅Cl|C₆H₅COCl|C₆H₅COOH|C₆H₅F|C₆H₅I|C₆H₅NO₂|C₆H₅NO₃|C₆H₅OH|C₆H₆|C₆H₆BClO₂|C₆H₆BFO₂|C₆H₆IN|C₆H₆N₂O|C₆H₆N₂O₂|C₆H₆O|C₆H₆O₂|C₆H₆O₃|C₆H₇BO₂|C₆H₇CsO₆|C₆H₇KO₆|C₆H₇LiO₆|C₆H₇N₃O|C₆H₇NaO₆|C₆H₇RbO₆|C₆H₈N₂|C₆H₈N₂O₂S|C₆H₈O₇|C₆H₉N₃O₂|C₆H₉N₃O₃|C₆N₄|C₇₂H₁₀₀CoN₁₈O₁₇P|C₇₇H₁₂₀N₁₈O₂₆S|C₇H₁₀N₂|C₇H₁₁NO₅|C₇H₁₂N₂O₄|C₇H₁₂O₄|C₇H₁₄O₆|C₇H₁₆|C₇H₅Br₃O|C₇H₅Cl₃O|C₇H₅F₃O|C₇H₅FO₂|C₇H₅N₃O₂|C₇H₅NO₄|C₇H₅NS₂|C₇H₆N₂|C₇H₆O|C₇H₆O₂|C₇H₆O₃|C₇H₆O₄|C₇H₆O₅|C₇H₇BO₄|C₇H₇N₃|C₇H₇NO₂|C₇H₇NO₃|C₇H₈|C₇H₈ClN₃O₄S₂|C₇H₈N₄O₂|C₇H₉BO₂|C₇H₉BO₃|C₈₃H₁₃₁N₁₉O₂₇S|C₈H₁₀N₄O₂|C₈H₁₁N₅O₃|C₈H₁₁NO|C₈H₁₆O₂|C₈H₁₆O₆|C₈H₁₈|C₈H₅F₃N₂OS|C₈H₅NO₂|C₈H₆BrN|C₈H₆Cl₂O₃|C₈H₆ClN|C₈H₆N₂O|C₈H₆N₂O₂|C₈H₇N|C₈H₇NO|C₈H₈|C₈H₈N₂OS|C₈H₈O₃|C₈H₈O₄|C₈H₉NO₂|C₉H₁₀O|C₉H₁₀O₃|C₉H₁₁NO₂|C₉H₁₁NO₃|C₉H₁₁NO₄|C₉H₁₇NO₂|C₉H₁₈N₂O₂|C₉H₂₀|C₉H₆BrN|C₉H₆N₂|C₉H₆O₃|C₉H₆OS|C₉H₇NO|C₉H₇NO₂|C₉H₈N₂|C₉H₈O₂|C₉H₈O₃|C₉H₈O₄|C₉H₉N|C₉H₉NO|C₉H₉NO₃|Ca₃N₂|Ca₃P₂|CaAl₂O₄|CaB₆|CaBr₂|CaC₂|CaC₂O₄|CaCl₂|CaCN₂|CaCO₃|CaF₂|CaH₂|CaHPO₄|CaI₂|CaMoO₄|CaO₂|CaSeO₃|CaSeO₄|CaSiO₃|CaSO₃|CaSO₄|CaTeO₃|CaTeO₄|CaTiO₃|CaWO₄|CCl₂F₂|CCl₄|Cd₂Nb₂O₇|Cd₃As₂|Cd₃P₂|CdBr₂|CdC₂O₄|CdCl₂|CdCO₃|CdCrO₄|CdF₂|CdI₂|CdMoO₄|CdSeO₃|CdSiO₃|CdSO₃|CdSO₄|CdTeO₄|CdTiO₃|CdWO₄|CdZrO₃|Ce₂C₃|Ce₂O₃|Ce₂S₃|CeB₆|CeBr₃|CeCl₃|CeF₃|CeF₄|CeI₂|CeI₃|CeO₂|CeSi₂|CF₃Cl|CF₄|CFCl₂CF₂Cl|CFCl₃|CH₂CHCHCH₂|CH₂CHOH|CH₂Cl₂|CH₂ClCOOH|CH₂ClF|CH₂CO|CH₂O|CH₂OHCH₂OH|CH₃CCH|CH₃CdCH₃|CH₃CH₂Br|CH₃CH₂CH₂CH₂OH|CH₃CH₂CH₂OH|CH₃CH₂CONH₂|CH₃CH₂COOH|CH₃CH₂OCH₂CH₃|CH₃CH₂OH|CH₃CHCH₂|CH₃CHCHCH₃|CH₃CHO|CH₃Cl|CH₃CN|CH₃COCH₃|CH₃COCl|CH₃CONH₂|CH₃COOCH₂C₆H₅|CH₃COOCH₃|CH₃COOCHCH₂|CH₃COOCs|CH₃COOH|CH₃COOK|CH₃COONa|CH₃COORb|CH₃HgCH₃|CH₃I|CH₃NH₂|CH₃NO|CH₃OCH₃|CH₃OCs|CH₃OH|CH₃OK|CH₃OLi|CH₃ONa|CH₃ORb|CH₃SCH₃|CH₃SH|CH₄|CH₄N₂O₂|CH₅N₃|CHCl₃|CHClF₂|Cl₂|Cl₂O₃|Cl₂O₆|Cl₂O₇|Cl₂O₈|ClF₃|ClF₅|ClO₂|ClO₃F|ClOClO₃|CO₂|Co₂B|Co₂S₃|Co₂SiO₄|Co₂SnO₄|Co₂SO₄|Co₂TiO₄|CO₃|CoAl₂O₄|CoAs₂|CoBr₂|CoC₂O₄|CoCl₂|COCl₂|CoCr₂O₄|CoCrO₄|CoF₂|CoF₃|CoI₂|CoMoO₄|CoS₂|CoSeO₃|CoTiO₃|CoWO₄|Cr₂O₃|Cr₂S₃|Cr₂Se₃|Cr₂Te₃|Cr₃As₂|Cr₃C₂|Cr₃Sb₂|CrBr₂|CrBr₃|CrCl₂|CrCl₃|CrCl₄|CrF₂|CrF₃|CrF₄|CrF₅|CrF₆|CrI₂|CrI₃|CrO₂|CrO₂Cl₂|CrO₃|CrPO₄|CrSi₂|CrVO₄|CS₂|Cs₂C₂O₄|Cs₂CO₃|Cs₂Cr₂O₇|Cs₂CrO₄|Cs₂HPO₃|Cs₂HPO₄|Cs₂MoO₄|Cs₂NbO₃|Cs₂O|Cs₂O₂|Cs₂S|Cs₂SiO₃|Cs₂SO₃|Cs₂SO₄|Cs₂TeO₄|Cs₂TiO₃|Cs₂WO₄|Cs₃PO₃|Cs₃PO₄|Cs₃VO₄|CsBO₂|CsBr₃|CsBrO₂|CsBrO₃|CsBrO₄|CsC₂H₃O₂|CsClO₂|CsClO₃|CsClO₄|CsH₂PO₃|CsH₂PO₄|CsHCO₃|CsHSO₃|CsHSO₄|CsI₃|CsIO₂|CsIO₃|CsIO₄|CsN₃|CsNbO₃|CsNH₂|CsNO₂|CsNO₃|CsO₂|CsSeO₄|CsTaO₃|Cu₂O|Cu₂S|Cu₂Se|Cu₂Te|Cu₃As|Cu₃P|Cu₃Sb|Cu₉S₅|CuBr₂|CuC₂O₄|CuCl₂|CuF₂|CuFe₂O₄|CuFe₂S₃|CuFeS₂|CuIO₃|CuMoO₄|CuSiO₃|CuSO₄|CuTeO₃|CuTiO₃|CuWO₄|D₂O|Dy₂O₃|Dy₂S₃|DyBr₃|DyCl₂|DyCl₃|DySi₂|ErCl₃|ErF₂|ErF₃|ErI₃|ErI₄Na|Eu₂O|Eu₂O₂|Eu₂O₃|Eu₂S|Eu₂S₂|EuCl₂|EuCl₃|EuF₃|EuI₂|EuNb₂O₆|EuNbO₂|EuO₂V|EuO₃Ti|EuO₃V|EuO₄W|EuS₂|EuSO₄|F₁₀Mo₂|F₁₀S₂|F₁₅Mo₃|F₂|F₂Fe|F₂Ga|F₂Gd|F₂Ge|F₂GeO|F₂Hg|F₂Hg₂|F₂Ho|F₂IP|F₂K₂|F₂Kr|F₂La|F₂Li₂|F₂Mg|F₂Mn|F₂Mo|F₂MoO₂|F₂N|F₂N₂O|F₂Na₂|F₂Nd|F₂Ni|F₂O|F₂O₂|F₂O₂S|F₂O₂W|F₂O₅S₃|F₂OS|F₂OSi|F₂OTi|F₂P|F₂Pb|F₂Pt|F₂Pu|F₂S|F₂S₂|F₂S₂W|F₂Sc|F₂Se|F₂Si|F₂Sn|F₂Sr|F₂SW|F₂Th|F₂Ti|F₂Tl₂|F₂W|F₂Xe|F₂Y|F₂Zn|F₂Zr|F₃Fe|F₃Ga|F₃Gd|F₃Ho|F₃La|F₃Li₃|F₃Lu|F₃Mn|F₃Mo|F₃MoO|F₃MoS|F₃N|F₃NaSn|F₃Nd|F₃NO|F₃NO₂S|F₃NO₃S|F₃NS|F₃OP|F₃OTa|F₃OV|F₃P|F₃Pr|F₃PS|F₃Pu|F₃Rh|F₃S|F₃Sb|F₃Sc|F₃Si|F₃Sm|F₃SW|F₃Tb|F₃Th|F₃Ti|F₃Tl|F₃Tm|F₃W|F₃Y|F₃Yb|F₃Zr|F₄Ge|F₄Ge₂|F₄Hf|F₄Mg₂|F₄Mo|F₄MoO|F₄MoS|F₄N₂|F₄Na₂Sn|F₄OOs|F₄OP₂|F₄ORe|F₄OS|F₄OW|F₄OXe|F₄P₂|F₄Pb|F₄Pt|F₄Pu|F₄S|F₄Se|F₄Si|F₄Sn₂|F₄SW|F₄Ti|F₄U|F₄W|F₄Xe|F₄Zr|F₅I|F₅Mo|F₅ORe|F₅P|F₅Pu|F₅S|F₅Sb|F₅Ta|F₅U|F₅W|F₆Fe₂|F₆La₂|F₆Mo|F₆NP₃|F₆Os|F₆Pu|F₆Re|F₆S|F₆Se|F₆Si₂|F₆Sn₃|F₆Te|F₆U|F₆W|F₆Xe|F₇I|F₇NS|F₇Re|F₈Si₃|Fe₂I₂|Fe₂I₄|Fe₂O₁₂S₃|Fe₂O₁₂W₃|Fe₂O₃|Fe₂P|Fe₂SiO₄|Fe₃H₂Na₂O₄₅Si|Fe₃O₄|Fe₃P|Fe₇Si₈O₂₄H₂|FeBr₂|FeBr₃|FeC₁₀H₁₀|FeC₂O₄|FeC₅O₅|FeCl₂|FeCl₃|FeCO₃|FeCr₂O₄|FeF₂|FeI₂|FeI₃|FeMoO₄|FeO₂|FeO₂H|FeO₄S|FeO₄Se|FeO₈H₄P₂|FePO₄|FeS₂|FeTiO₃|FeVO₄|FeWO₄|FeZrO₃|FI₂|FLi₂|FMnO₃|FNa₂|FNO₂|FNO₃|FO₂|FO₃S|FPS₂|Ga₂O₃|Ga₂S₃|Ga₂Te₃|GaAsO₄|GaBr₃|GaCl₂|GaI₂|GaI₃|GaPO₄|GeBr₄|GeH₃COOH|GeI₂|GeI₄|H₂|H₂C₂O₄|H₂C₄H₄O₆|H₂C₈H₄O₄|H₂CO|H₂CO₃|H₂CrO₄|H₂CSO|H₂N₂O₂|H₂NCH₂COOH|H₂NNH₂|H₂O|H₂O₂|H₂S|H₂S₂O₂|H₂S₂O₃|H₂S₂O₄|H₂S₂O₅|H₂S₂O₆|H₂S₂O₇|H₂S₂O₈|H₂SeO₃|H₂SeO₄|H₂SiO₃|H₂SO₃|H₂SO₄|H₂TeO₃|H₂TiO₃|H₃AsO₄|H₃CCH₂CH₃|H₃PO₂|H₃PO₃|H₃PO₄|H₄XeO₆|H₆TeO₆|HBrO₂|HBrO₃|HBrO₄|HC₁₂H₁₇ON₄SCl₂|HC₃H₅O₃|HC₆H₇O₆|HC₉H₇O₄|HClO₂|HClO₃|HClO₄|HCONH₂|HCOONH₄|HfBr₄|HfF₄|Hg₂Br₂|Hg₂Cl₂|Hg₂I₂|HgBr₂|HgCl₂|HgI₂|HgSeO₃|HgTeO₃|HgWO₄|HIO₂|HIO₃|HIO₄|HN₃|HNO₂|HNO₃|I₂|I₂O₅|IBr₃|ICl₃|In₂O₃|In₂S₃|In₂Se₃|In₂Te₃|InBr₂I|InBr₃|InBrI₂|InCl₂|InCl₃|InI₂|InI₃|InPO₄|IrBr₃|K₂CO₃|K₂Cr₂O₇|K₂CrO₄|K₂HAsO₄|K₂HPO₃|K₂HPO₄|K₂MnO₄|K₂N₂O₂|K₂O|K₂O₂|K₂S|K₂S₂O₃|K₂S₂O₅|K₂S₂O₈|K₂SO₃|K₂SO₄|K₃AsO₄|K₃C₆H₅O₇|K₃PO₃|K₃PO₄|KAsO₂|KBrO₂|KBrO₃|KBrO₄|KClO₂|KClO₃|KClO₄|KH₂AsO₄|KH₂PO₃|KH₂PO₄|KHCO₃|KHSO₃|KHSO₄|KIO₂|KIO₃|KIO₄|KMnO₄|KNbO₃|KNO₂|KNO₃|La₂O₃|LaBr₃|LaCl₃|LaI₃|LaPO₄|Li₂CO₃|Li₂Cr₂O₇|Li₂CrO₄|Li₂HAsO₄|Li₂HPO₃|Li₂HPO₄|Li₂MoO₄|Li₂N₂O₂|Li₂NbO₃|Li₂O|Li₂O₂|Li₂S|Li₂SeO₃|Li₂SeO₄|Li₂SiO₃|Li₂SO₃|Li₂SO₄|Li₂TeO₃|Li₂TeO₄|Li₂TiO₃|Li₂WO₄|Li₂ZrO₃|Li₃AsO₄|Li₃PO₃|Li₃PO₄|LiAlH₄|LiBH₄|LiBrO₂|LiBrO₃|LiBrO₄|LiC₂H₅O|LiClO₂|LiClO₃|LiClO₄|LiH₂AsO₄|LiH₂PO₃|LiH₂PO₄|LiHCO₃|LiHSO₃|LiHSO₄|LiIO₂|LiIO₃|LiIO₄|LiNbO₃|LiNO₂|LiNO₃|LiTaO₃|Mg₂P₂O₇|Mg₂SiO₄|Mg₃As₂|Mg₃Bi₂|Mg₃P₂|MgBr₂|MgC₂O₄|MgCl₂|MgCO₃|MgCrO₄|MgF₂|MgHPO₄|MgI₂|MgMoO₄|MgSeO₃|MgSeO₄|MgSiO₃|MgSO₃|MgSO₄|MgTiO₃|MgWO₄|Mn₂O₃|Mn₃As₂|Mn₃O₄|Mn₃P₂|Mn₃Sb₂|MnBr₂|MnCl₂|MnCO₃|MnF₂|MnI₂|MnMoO₄|MnO₂|MnZrO₃|MoBr₂|MoBr₃|MoCl₂|MoCl₃|MoCl₅|MoO₂|MoO₃|MoS₂|MoSe₂|N₂|N₂H₂|N₂H₄|N₂O|N₂O₃|N₂O₄|N₂O₅|N₄H₄|Na₂C₂O₄|Na₂C₆H₆O₇|Na₂CO₃|Na₂HAsO₄|Na₂HPO₃|Na₂HPO₄|Na₂MoS₄|Na₂N₂O₂|Na₂O|Na₂O₂|Na₂S|Na₂S₂O₃|Na₂S₂O₅|Na₂S₂O₈|Na₂S₄|Na₂SeO₃|Na₂SeO₄|Na₂SO₃|Na₂SO₄|Na₂TeO₃|Na₂TeO₄|Na₂TiO₃|Na₂ZnO₂|Na₂ZrO₃|Na₃AlF₆|Na₃AsO₄|Na₃C₆H₅O₇|Na₃PO₃|Na₃PO₄|Na₃VO₄|Na₄V₂O₇|NaAlSi₃O₃|NaAsO₂|NaBrO₂|NaBrO₃|NaBrO₄|NaC₆F₅COO|NaC₆H₅COO|NaC₆H₇O₇|NaCl|NaClO₂|NaClO₃|NaClO₄|NaH₂AsO₄|NaH₂PO₃|NaH₂PO₄|NaHCO₃|NaHSO₃|NaHSO₄|NaIO₂|NaIO₃|NaIO₄|NaNbO₃|NaNH₂C₆H₄SO₃|NaNO₂|NaNO₃|NaSeO₃|NaTaO₃|NaVO₃|Nb₂O₃|NbBr₅|NbCl₃|NbCl₅|NbI₅|NCl₃|Nd₂O₃|NdCl₂|NdI₂|NH₂C₆H₄SO₃H|NH₂CH₂CH₂NH₂|NH₂CH₂CN|NH₂Cl|NH₂CONH₂|NH₂COOH|NH₂OH|NH₃|NH₄Br|NH₄Cl|NH₄ClO₄|NH₄CO₂NH₂|NH₄HS|NH₄NO₃|NH₄OCONH₂|NH₄OH|NHCl₂|Ni₂SiO₄|NI₃|Ni₃Sb₂|NiBr₂|NiCl₂|NiFe₂O₄|NiI₂|NiMoO₄|NiS₂|NiSO₄|NiTiO₃|NiWO₄|NO₂|NO₂Cl|O₂|O₂F₂|O₃|OF₂|P₂I₄|P₂O₅|P₂S₃|P₂Se₃|P₃N₅|PbC₂O₄|PbCl₂|PbCl₄|PbCO₃|PbCrO₄|PbF₂|PbHAsO₄|PbI₂|PbO₂|PbSO₄|PCl₃|PCl₅|PH₃|PoBr₂|PoCl₂|POCl₃|PoCl₄|PoF₆|PoH₂|PoO₂|PoO₃|RaCl₂|Rb₂CO₃|Rb₂HPO₃|Rb₂HPO₄|Rb₂O|Rb₂O₂|Rb₂S|Rb₂SO₃|Rb₂SO₄|Rb₃PO₃|Rb₃PO₄|RbBrO₂|RbBrO₃|RbBrO₄|RbClO₂|RbClO₃|RbClO₄|RbH₂PO₃|RbH₂PO₄|RbHCO₃|RbHSO₃|RbHSO₄|RbIO₂|RbIO₃|RbIO₄|RbNbO₃|RbNO₂|RbNO₃|RnF₂|RuCl₃|RuF₆|RuO₄|S₂Br₂|Sb₂O₃|Sb₂O₅|Sb₂OS₂|Sb₂S₃|Sb₂Se₃|Sb₂Se₅|Sb₂Te₃|SbBr₃|SbCl₃|SbCl₅|SbI₃|SbPO₄|Sc₂O₃|SeBr₄|SeCl₄|SeO₂|SeOCl₂|SeOF₂|SF₄|SF₆|Si₃N₄|SiBr₄|SiCl₄|SiH₄|SiI₄|SiO₂|Sn₃Sb₄|SnBr₂|SnBr₂Cl₂|SnBr₃Cl|SnBr₄|SnBrCl₃|SnCl₂|SnCl₂I₂|SnCl₄|SnI₄|SnO₂|SnS₂|SnSe₂|SnTe₄|SO₂|SO₂Cl₂|SO₂F₂|SO₃|SOF₂|Sr₂RuO₄|SrBr₂|SrC₂O₄|SrCl₂|SrCO₃|SrF₂|SrHfO₃|SrI₂|SrMoO₄|SrSeO₃|SrSeO₄|SrTeO₃|SrTeO₄|SrTiO₃|T₂O|TaBr₃|TaBr₅|TaCl₅|TaI₅|TeBr₂|TeBr₄|TeCl₂|TeCl₄|TeI₂|TeI₄|TeO₂|ThO₂|TiBr₄|TiCl₂I₂|TiCl₃I|TiCl₄|TiH₂|TiI₄|TiO₂|Tl₂MoO₄|Tl₂SeO₃|Tl₂TeO₃|Tl₂WO₄|Tl₃As|TlBr₃|TlC₂H₃O₂|TlCl₃|TlI₃|TlIO₃|TlNO₃|TlPF₆|TmCl₃|U₃O₈|UBr₂|UBr₃|UBr₅|UC₂|UCl₃|UCl₄|UF₄|UF₆|UI₃|UO₂|UO₂Cl₂|UO₂SO₄|UO₃|US₂|USe₂|UTe₂|V₂O₃|V₂O₅|VBr₂|VBr₃|VCl₂|VCl₃|VI₃|VOC₂O₄|VOSO₄|WBr₂|WBr₃|WBr₄|WBr₅|WBr₆|WCl₂|WCl₃|WCl₄|WCl₅|WCl₆|WF₄|WF₅|WF₆|WI₂|WI₄|WO₂|WO₂Br₂|WO₂Cl₂|WO₂I₂|WO₃|WOBr₃|WOBr₄|WOCl₃|WOCl₄|WOF₄|WS₂|WS₃|WSe₂|WTe₂|Y₂O₃|Y₂S₃|Yb₂O₃|Yb₂S₃|Yb₂Se₃|YB₆|YbBr₂|YbBr₃|YbCl₂|YbCl₃|YbF₂|YbF₃|YbI₂|YbI₃|YbPO₄|YBr₃|YbSi₂|YC₂|YCl₃|YF₃|YVO₄|Zn₂P₂O₇|Zn₂SiO₄|Zn₃As₂|Zn₃N₂|Zn₃P₂|Zn₃Sb₂|ZnBr₂|ZnCl₂|ZnCO₃|ZnCr₂O₄|ZnF₂|ZnI₂|ZnMoO₄|ZnO₂|ZnS₂O₃|ZnSeO₃|ZnSeO₄|ZnSnO₃|ZnSO₃|ZnSO₄|ZnTeO₃|ZnTeO₄|ZnTiO₃|ZnWO₄|ZnZrO₃|ZrB₂|ZrBr₄|ZrCl₄|ZrF₄|ZrI₄|ZrO₂|ZrP₂|ZrS₂|ZrSi₂|ZrSiO₄</token>
    </pattern>
    <disambig action="ignore_spelling"/>
  </rule>
  <rulegroup name="Ignore number strings" id="IGNORE_NUMBERS">
    <rule>
      <!-- minus sign -->
      <pattern>
        <token regexp="yes">−?[\d .,]+%?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule>
      <pattern>
        <token regexp="yes"> [\dA-z\.\,éèëöïîôêàùûçœæÂÊÎÔÛÄËÏÖÜÙÀÆÇÉÈŒ—–‒-⇐⇔βα→↓↑←]+°?\d[\dA-z\.\,éèëöïîôêàçœæùûÂÊÎÔÛÄËÏÖÜÙÀÆÇÉÈŒ–—‒-⇐⇔βα→↓↑←]+
          <exception regexp="yes">[A-z\.\,éèëöïîôêàçœæùûÂÊÎÔÛÄËÏÖÜÙÀÆÇÉÈŒ]+\d[A-z\.\,éèëöïîôêàçœæùûÂÊÎÔÛÄËÏÖÜÀÙÆÇÉÈŒ]+</exception>
          <exception regexp="yes">\d+</exception>
          <exception regexp="yes" case_sensitive="yes">[A-Z\.\,ÂÊÎÔÛÄËÏÖÜÙÀÆÇÉÈŒ]+</exception></token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
  </rulegroup>
</rules>
